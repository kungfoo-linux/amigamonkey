
#include "main.h"

//${CONFIG_BEGIN}
#define CFG_BRL_DATABUFFER_IMPLEMENTED 1
#define CFG_BRL_FILESTREAM_IMPLEMENTED 1
#define CFG_BRL_OS_IMPLEMENTED 1
#define CFG_BRL_STREAM_IMPLEMENTED 1
#define CFG_BRL_THREAD_IMPLEMENTED 1
#define CFG_CD 
#define CFG_CONFIG debug
#define CFG_CPP_DOUBLE_PRECISION_FLOATS 1
#define CFG_CPP_GC_MODE 1
#define CFG_DEBUG 1
#define CFG_HOST winnt
#define CFG_LANG cpp
#define CFG_MODPATH 
#define CFG_SAFEMODE 0
#define CFG_TARGET stdcpp
//${CONFIG_END}

//${TRANSCODE_BEGIN}

#include <wctype.h>
#include <locale.h>

// C++ Monkey runtime.
//
// Placed into the public domain 24/02/2011.
// No warranty implied; use at your own risk.

//***** Monkey Types *****

typedef wchar_t Char;
template<class T> class Array;
class String;
class Object;

#if CFG_CPP_DOUBLE_PRECISION_FLOATS
typedef double Float;
#define FLOAT(X) X
#else
typedef float Float;
#define FLOAT(X) X##f
#endif

void dbg_error( const char *p );

#if !_MSC_VER
#define sprintf_s sprintf
#define sscanf_s sscanf
#endif

//***** GC Config *****

#if CFG_CPP_GC_DEBUG
#define DEBUG_GC 1
#else
#define DEBUG_GC 0
#endif

// GC mode:
//
// 0 = disabled
// 1 = Incremental GC every OnWhatever
// 2 = Incremental GC every allocation
//
#ifndef CFG_CPP_GC_MODE
#define CFG_CPP_GC_MODE 1
#endif

//How many bytes alloced to trigger GC
//
#ifndef CFG_CPP_GC_TRIGGER
#define CFG_CPP_GC_TRIGGER 8*1024*1024
#endif

//GC_MODE 2 needs to track locals on a stack - this may need to be bumped if your app uses a LOT of locals, eg: is heavily recursive...
//
#ifndef CFG_CPP_GC_MAX_LOCALS
#define CFG_CPP_GC_MAX_LOCALS 8192
#endif

// ***** GC *****

#if _WIN32

int gc_micros(){
	static int f;
	static LARGE_INTEGER pcf;
	if( !f ){
		if( QueryPerformanceFrequency( &pcf ) && pcf.QuadPart>=1000000L ){
			pcf.QuadPart/=1000000L;
			f=1;
		}else{
			f=-1;
		}
	}
	if( f>0 ){
		LARGE_INTEGER pc;
		if( QueryPerformanceCounter( &pc ) ) return pc.QuadPart/pcf.QuadPart;
		f=-1;
	}
	return 0;// timeGetTime()*1000;
}

#elif __APPLE__

#include <mach/mach_time.h>

int gc_micros(){
	static int f;
	static mach_timebase_info_data_t timeInfo;
	if( !f ){
		mach_timebase_info( &timeInfo );
		timeInfo.denom*=1000L;
		f=1;
	}
	return mach_absolute_time()*timeInfo.numer/timeInfo.denom;
}

#else

int gc_micros(){
	return 0;
}

#endif

#define gc_mark_roots gc_mark

void gc_mark_roots();

struct gc_object;

gc_object *gc_object_alloc( int size );
void gc_object_free( gc_object *p );

struct gc_object{
	gc_object *succ;
	gc_object *pred;
	int flags;
	
	virtual ~gc_object(){
	}
	
	virtual void mark(){
	}
	
	void *operator new( size_t size ){
		return gc_object_alloc( size );
	}
	
	void operator delete( void *p ){
		gc_object_free( (gc_object*)p );
	}
};

gc_object gc_free_list;
gc_object gc_marked_list;
gc_object gc_unmarked_list;
gc_object gc_queued_list;	//doesn't really need to be doubly linked...

int gc_free_bytes;
int gc_marked_bytes;
int gc_alloced_bytes;
int gc_max_alloced_bytes;
int gc_new_bytes;
int gc_markbit=1;

gc_object *gc_cache[8];

void gc_collect_all();
void gc_mark_queued( int n );

#define GC_CLEAR_LIST( LIST ) ((LIST).succ=(LIST).pred=&(LIST))

#define GC_LIST_IS_EMPTY( LIST ) ((LIST).succ==&(LIST))

#define GC_REMOVE_NODE( NODE ){\
(NODE)->pred->succ=(NODE)->succ;\
(NODE)->succ->pred=(NODE)->pred;}

#define GC_INSERT_NODE( NODE,SUCC ){\
(NODE)->pred=(SUCC)->pred;\
(NODE)->succ=(SUCC);\
(SUCC)->pred->succ=(NODE);\
(SUCC)->pred=(NODE);}

void gc_init1(){
	GC_CLEAR_LIST( gc_free_list );
	GC_CLEAR_LIST( gc_marked_list );
	GC_CLEAR_LIST( gc_unmarked_list);
	GC_CLEAR_LIST( gc_queued_list );
}

void gc_init2(){
	gc_mark_roots();
}

#if CFG_CPP_GC_MODE==2

int gc_ctor_nest;
gc_object *gc_locals[CFG_CPP_GC_MAX_LOCALS],**gc_locals_sp=gc_locals;

struct gc_ctor{
	gc_ctor(){ ++gc_ctor_nest; }
	~gc_ctor(){ --gc_ctor_nest; }
};

struct gc_enter{
	gc_object **sp;
	gc_enter():sp(gc_locals_sp){
	}
	~gc_enter(){
#if DEBUG_GC
		static int max_locals;
		int n=gc_locals_sp-gc_locals;
		if( n>max_locals ){
			max_locals=n;
			printf( "max_locals=%i\n",n );
		}
#endif		
		gc_locals_sp=sp;
	}
};

#define GC_CTOR gc_ctor _c;
#define GC_ENTER gc_enter _e;

#else

struct gc_ctor{
};
struct gc_enter{
};

#define GC_CTOR
#define GC_ENTER

#endif

//Can be modified off thread!
static volatile int gc_ext_new_bytes;

#if _MSC_VER
#define atomic_add(P,V) InterlockedExchangeAdd((volatile unsigned int*)P,V)			//(*(P)+=(V))
#define atomic_sub(P,V) InterlockedExchangeSubtract((volatile unsigned int*)P,V)	//(*(P)-=(V))
#else
#define atomic_add(P,V) __sync_fetch_and_add(P,V)
#define atomic_sub(P,V) __sync_fetch_and_sub(P,V)
#endif

//Careful! May be called off thread!
//
void gc_ext_malloced( int size ){
	atomic_add( &gc_ext_new_bytes,size );
}

void gc_object_free( gc_object *p ){

	int size=p->flags & ~7;
	gc_free_bytes-=size;
	
	if( size<64 ){
		p->succ=gc_cache[size>>3];
		gc_cache[size>>3]=p;
	}else{
		free( p );
	}
}

void gc_flush_free( int size ){

	int t=gc_free_bytes-size;
	if( t<0 ) t=0;
	
	while( gc_free_bytes>t ){
	
		gc_object *p=gc_free_list.succ;

		GC_REMOVE_NODE( p );

#if DEBUG_GC
//		printf( "deleting @%p\n",p );fflush( stdout );
//		p->flags|=4;
//		continue;
#endif
		delete p;
	}
}

gc_object *gc_object_alloc( int size ){

	size=(size+7)&~7;
	
	gc_new_bytes+=size;
	
#if CFG_CPP_GC_MODE==2

	if( !gc_ctor_nest ){

#if DEBUG_GC
		int ms=gc_micros();
#endif
		if( gc_new_bytes+gc_ext_new_bytes>(CFG_CPP_GC_TRIGGER) ){
			atomic_sub( &gc_ext_new_bytes,gc_ext_new_bytes );
			gc_collect_all();
			gc_new_bytes=0;
		}else{
			gc_mark_queued( (long long)(gc_new_bytes)*(gc_alloced_bytes-gc_new_bytes)/(CFG_CPP_GC_TRIGGER)+gc_new_bytes );
		}

#if DEBUG_GC
		ms=gc_micros()-ms;
		if( ms>=100 ) {printf( "gc time:%i\n",ms );fflush( stdout );}
#endif
	}
	
#endif

	gc_flush_free( size );

	gc_object *p;
	if( size<64 && (p=gc_cache[size>>3]) ){
		gc_cache[size>>3]=p->succ;
	}else{
		p=(gc_object*)malloc( size );
	}
	
	p->flags=size|gc_markbit;
	GC_INSERT_NODE( p,&gc_unmarked_list );

	gc_alloced_bytes+=size;
	if( gc_alloced_bytes>gc_max_alloced_bytes ) gc_max_alloced_bytes=gc_alloced_bytes;
	
#if CFG_CPP_GC_MODE==2
	*gc_locals_sp++=p;
#endif

	return p;
}

#if DEBUG_GC

template<class T> gc_object *to_gc_object( T *t ){
	gc_object *p=dynamic_cast<gc_object*>(t);
	if( p && (p->flags & 4) ){
		printf( "gc error : object already deleted @%p\n",p );fflush( stdout );
		exit(-1);
	}
	return p;
}

#else

#define to_gc_object(t) dynamic_cast<gc_object*>(t)

#endif

template<class T> T *gc_retain( T *t ){
#if CFG_CPP_GC_MODE==2
	*gc_locals_sp++=to_gc_object( t );
#endif
	return t;
}

template<class T> void gc_mark( T *t ){

	gc_object *p=to_gc_object( t );
	
	if( p && (p->flags & 3)==gc_markbit ){
		p->flags^=1;
		GC_REMOVE_NODE( p );
		GC_INSERT_NODE( p,&gc_marked_list );
		gc_marked_bytes+=(p->flags & ~7);
		p->mark();
	}
}

template<class T> void gc_mark_q( T *t ){

	gc_object *p=to_gc_object( t );
	
	if( p && (p->flags & 3)==gc_markbit ){
		p->flags^=1;
		GC_REMOVE_NODE( p );
		GC_INSERT_NODE( p,&gc_queued_list );
	}
}

template<class T,class V> void gc_assign( T *&lhs,V *rhs ){

	gc_object *p=to_gc_object( rhs );
	
	if( p && (p->flags & 3)==gc_markbit ){
		p->flags^=1;
		GC_REMOVE_NODE( p );
		GC_INSERT_NODE( p,&gc_queued_list );
	}
	lhs=rhs;
}

void gc_mark_locals(){

#if CFG_CPP_GC_MODE==2
	for( gc_object **pp=gc_locals;pp!=gc_locals_sp;++pp ){
		gc_object *p=*pp;
		if( p && (p->flags & 3)==gc_markbit ){
			p->flags^=1;
			GC_REMOVE_NODE( p );
			GC_INSERT_NODE( p,&gc_marked_list );
			gc_marked_bytes+=(p->flags & ~7);
			p->mark();
		}
	}
#endif	
}

void gc_mark_queued( int n ){
	while( gc_marked_bytes<n && !GC_LIST_IS_EMPTY( gc_queued_list ) ){
		gc_object *p=gc_queued_list.succ;
		GC_REMOVE_NODE( p );
		GC_INSERT_NODE( p,&gc_marked_list );
		gc_marked_bytes+=(p->flags & ~7);
		p->mark();
	}
}

void gc_validate_list( gc_object &list,const char *msg ){
	gc_object *node=list.succ;
	while( node ){
		if( node==&list ) return;
		if( !node->pred ) break;
		if( node->pred->succ!=node ) break;
		node=node->succ;
	}
	if( msg ){
		puts( msg );fflush( stdout );
	}
	puts( "LIST ERROR!" );
	exit(-1);
}

//returns reclaimed bytes
void gc_sweep(){

	int reclaimed_bytes=gc_alloced_bytes-gc_marked_bytes;
	
	if( reclaimed_bytes ){
	
		//append unmarked list to end of free list
		gc_object *head=gc_unmarked_list.succ;
		gc_object *tail=gc_unmarked_list.pred;
		gc_object *succ=&gc_free_list;
		gc_object *pred=succ->pred;
		
		head->pred=pred;
		tail->succ=succ;
		pred->succ=head;
		succ->pred=tail;
		
		gc_free_bytes+=reclaimed_bytes;
	}

	//move marked to unmarked.
	if( GC_LIST_IS_EMPTY( gc_marked_list ) ){
		GC_CLEAR_LIST( gc_unmarked_list );
	}else{
		gc_unmarked_list.succ=gc_marked_list.succ;
		gc_unmarked_list.pred=gc_marked_list.pred;
		gc_unmarked_list.succ->pred=gc_unmarked_list.pred->succ=&gc_unmarked_list;
		GC_CLEAR_LIST( gc_marked_list );
	}
	
	//adjust sizes
	gc_alloced_bytes=gc_marked_bytes;
	gc_marked_bytes=0;
	gc_markbit^=1;
}

void gc_collect_all(){

//	puts( "Mark locals" );
	gc_mark_locals();

//	puts( "Marked queued" );
	gc_mark_queued( 0x7fffffff );

//	puts( "Sweep" );
	gc_sweep();

//	puts( "Mark roots" );
	gc_mark_roots();

#if DEBUG_GC
	gc_validate_list( gc_marked_list,"Validating gc_marked_list"  );
	gc_validate_list( gc_unmarked_list,"Validating gc_unmarked_list"  );
	gc_validate_list( gc_free_list,"Validating gc_free_list" );
#endif

}

void gc_collect(){
	
#if CFG_CPP_GC_MODE==1

#if DEBUG_GC
	int ms=gc_micros();
#endif

	if( gc_new_bytes+gc_ext_new_bytes>(CFG_CPP_GC_TRIGGER) ){
		atomic_sub( &gc_ext_new_bytes,gc_ext_new_bytes );
		gc_collect_all();
		gc_new_bytes=0;
	}else{
		gc_mark_queued( (long long)(gc_new_bytes)*(gc_alloced_bytes-gc_new_bytes)/(CFG_CPP_GC_TRIGGER)+gc_new_bytes );
	}

#if DEBUG_GC
	ms=gc_micros()-ms;
//	if( ms>=100 ) {printf( "gc time:%i\n",ms );fflush( stdout );}
	if( ms>10 ) {printf( "gc time:%i\n",ms );fflush( stdout );}
#endif

#endif
}

// ***** Array *****

template<class T> T *t_memcpy( T *dst,const T *src,int n ){
	memcpy( dst,src,n*sizeof(T) );
	return dst+n;
}

template<class T> T *t_memset( T *dst,int val,int n ){
	memset( dst,val,n*sizeof(T) );
	return dst+n;
}

template<class T> int t_memcmp( const T *x,const T *y,int n ){
	return memcmp( x,y,n*sizeof(T) );
}

template<class T> int t_strlen( const T *p ){
	const T *q=p++;
	while( *q++ ){}
	return q-p;
}

template<class T> T *t_create( int n,T *p ){
	t_memset( p,0,n );
	return p+n;
}

template<class T> T *t_create( int n,T *p,const T *q ){
	t_memcpy( p,q,n );
	return p+n;
}

template<class T> void t_destroy( int n,T *p ){
}

template<class T> void gc_mark_elements( int n,T *p ){
}

template<class T> void gc_mark_elements( int n,T **p ){
	for( int i=0;i<n;++i ) gc_mark( p[i] );
}

template<class T> class Array{
public:
	Array():rep( &nullRep ){
	}

	//Uses default...
//	Array( const Array<T> &t )...
	
	Array( int length ):rep( Rep::alloc( length ) ){
		t_create( rep->length,rep->data );
	}
	
	Array( const T *p,int length ):rep( Rep::alloc(length) ){
		t_create( rep->length,rep->data,p );
	}
	
	~Array(){
	}

	//Uses default...
//	Array &operator=( const Array &t )...
	
	int Length()const{ 
		return rep->length; 
	}
	
	T &At( int index ){
		if( index<0 || index>=rep->length ) dbg_error( "Array index out of range" );
		return rep->data[index]; 
	}
	
	const T &At( int index )const{
		if( index<0 || index>=rep->length ) dbg_error( "Array index out of range" );
		return rep->data[index]; 
	}
	
	T &operator[]( int index ){
		return rep->data[index]; 
	}

	const T &operator[]( int index )const{
		return rep->data[index]; 
	}
	
	Array Slice( int from,int term )const{
		int len=rep->length;
		if( from<0 ){ 
			from+=len;
			if( from<0 ) from=0;
		}else if( from>len ){
			from=len;
		}
		if( term<0 ){
			term+=len;
		}else if( term>len ){
			term=len;
		}
		if( term<=from ) return Array();
		return Array( rep->data+from,term-from );
	}

	Array Slice( int from )const{
		return Slice( from,rep->length );
	}
	
	Array Resize( int newlen )const{
		if( newlen<=0 ) return Array();
		int n=rep->length;
		if( newlen<n ) n=newlen;
		Rep *p=Rep::alloc( newlen );
		T *q=p->data;
		q=t_create( n,q,rep->data );
		q=t_create( (newlen-n),q );
		return Array( p );
	}
	
private:
	struct Rep : public gc_object{
		int length;
		T data[0];
		
		Rep():length(0){
			flags=3;
		}
		
		Rep( int length ):length(length){
		}
		
		~Rep(){
			t_destroy( length,data );
		}
		
		void mark(){
			gc_mark_elements( length,data );
		}
		
		static Rep *alloc( int length ){
			if( !length ) return &nullRep;
			void *p=gc_object_alloc( sizeof(Rep)+length*sizeof(T) );
			return ::new(p) Rep( length );
		}
		
	};
	Rep *rep;
	
	static Rep nullRep;
	
	template<class C> friend void gc_mark( Array<C> t );
	template<class C> friend void gc_mark_q( Array<C> t );
	template<class C> friend Array<C> gc_retain( Array<C> t );
	template<class C> friend void gc_assign( Array<C> &lhs,Array<C> rhs );
	template<class C> friend void gc_mark_elements( int n,Array<C> *p );
	
	Array( Rep *rep ):rep(rep){
	}
};

template<class T> typename Array<T>::Rep Array<T>::nullRep;

template<class T> Array<T> *t_create( int n,Array<T> *p ){
	for( int i=0;i<n;++i ) *p++=Array<T>();
	return p;
}

template<class T> Array<T> *t_create( int n,Array<T> *p,const Array<T> *q ){
	for( int i=0;i<n;++i ) *p++=*q++;
	return p;
}

template<class T> void gc_mark( Array<T> t ){
	gc_mark( t.rep );
}

template<class T> void gc_mark_q( Array<T> t ){
	gc_mark_q( t.rep );
}

template<class T> Array<T> gc_retain( Array<T> t ){
#if CFG_CPP_GC_MODE==2
	gc_retain( t.rep );
#endif
	return t;
}

template<class T> void gc_assign( Array<T> &lhs,Array<T> rhs ){
	gc_mark( rhs.rep );
	lhs=rhs;
}

template<class T> void gc_mark_elements( int n,Array<T> *p ){
	for( int i=0;i<n;++i ) gc_mark( p[i].rep );
}
		
// ***** String *****

static const char *_str_load_err;

class String{
public:
	String():rep( &nullRep ){
	}
	
	String( const String &t ):rep( t.rep ){
		rep->retain();
	}

	String( int n ){
		char buf[256];
		sprintf_s( buf,"%i",n );
		rep=Rep::alloc( t_strlen(buf) );
		for( int i=0;i<rep->length;++i ) rep->data[i]=buf[i];
	}
	
	String( Float n ){
		char buf[256];
		
		//would rather use snprintf, but it's doing weird things in MingW.
		//
		sprintf_s( buf,"%.17lg",n );
		//
		char *p;
		for( p=buf;*p;++p ){
			if( *p=='.' || *p=='e' ) break;
		}
		if( !*p ){
			*p++='.';
			*p++='0';
			*p=0;
		}

		rep=Rep::alloc( t_strlen(buf) );
		for( int i=0;i<rep->length;++i ) rep->data[i]=buf[i];
	}

	String( Char ch,int length ):rep( Rep::alloc(length) ){
		for( int i=0;i<length;++i ) rep->data[i]=ch;
	}

	String( const Char *p ):rep( Rep::alloc(t_strlen(p)) ){
		t_memcpy( rep->data,p,rep->length );
	}

	String( const Char *p,int length ):rep( Rep::alloc(length) ){
		t_memcpy( rep->data,p,rep->length );
	}
	
#if __OBJC__	
	String( NSString *nsstr ):rep( Rep::alloc([nsstr length]) ){
		unichar *buf=(unichar*)malloc( rep->length * sizeof(unichar) );
		[nsstr getCharacters:buf range:NSMakeRange(0,rep->length)];
		for( int i=0;i<rep->length;++i ) rep->data[i]=buf[i];
		free( buf );
	}
#endif

#if __cplusplus_winrt
	String( Platform::String ^str ):rep( Rep::alloc(str->Length()) ){
		for( int i=0;i<rep->length;++i ) rep->data[i]=str->Data()[i];
	}
#endif

	~String(){
		rep->release();
	}
	
	template<class C> String( const C *p ):rep( Rep::alloc(t_strlen(p)) ){
		for( int i=0;i<rep->length;++i ) rep->data[i]=p[i];
	}
	
	template<class C> String( const C *p,int length ):rep( Rep::alloc(length) ){
		for( int i=0;i<rep->length;++i ) rep->data[i]=p[i];
	}
	
	String Copy()const{
		Rep *crep=Rep::alloc( rep->length );
		t_memcpy( crep->data,rep->data,rep->length );
		return String( crep );
	}
	
	int Length()const{
		return rep->length;
	}
	
	const Char *Data()const{
		return rep->data;
	}
	
	Char At( int index )const{
		if( index<0 || index>=rep->length ) dbg_error( "Character index out of range" );
		return rep->data[index]; 
	}
	
	Char operator[]( int index )const{
		return rep->data[index];
	}
	
	String &operator=( const String &t ){
		t.rep->retain();
		rep->release();
		rep=t.rep;
		return *this;
	}
	
	String &operator+=( const String &t ){
		return operator=( *this+t );
	}
	
	int Compare( const String &t )const{
		int n=rep->length<t.rep->length ? rep->length : t.rep->length;
		for( int i=0;i<n;++i ){
			if( int q=(int)(rep->data[i])-(int)(t.rep->data[i]) ) return q;
		}
		return rep->length-t.rep->length;
	}
	
	bool operator==( const String &t )const{
		return rep->length==t.rep->length && t_memcmp( rep->data,t.rep->data,rep->length )==0;
	}
	
	bool operator!=( const String &t )const{
		return rep->length!=t.rep->length || t_memcmp( rep->data,t.rep->data,rep->length )!=0;
	}
	
	bool operator<( const String &t )const{
		return Compare( t )<0;
	}
	
	bool operator<=( const String &t )const{
		return Compare( t )<=0;
	}
	
	bool operator>( const String &t )const{
		return Compare( t )>0;
	}
	
	bool operator>=( const String &t )const{
		return Compare( t )>=0;
	}
	
	String operator+( const String &t )const{
		if( !rep->length ) return t;
		if( !t.rep->length ) return *this;
		Rep *p=Rep::alloc( rep->length+t.rep->length );
		Char *q=p->data;
		q=t_memcpy( q,rep->data,rep->length );
		q=t_memcpy( q,t.rep->data,t.rep->length );
		return String( p );
	}
	
	int Find( String find,int start=0 )const{
		if( start<0 ) start=0;
		while( start+find.rep->length<=rep->length ){
			if( !t_memcmp( rep->data+start,find.rep->data,find.rep->length ) ) return start;
			++start;
		}
		return -1;
	}
	
	int FindLast( String find )const{
		int start=rep->length-find.rep->length;
		while( start>=0 ){
			if( !t_memcmp( rep->data+start,find.rep->data,find.rep->length ) ) return start;
			--start;
		}
		return -1;
	}
	
	int FindLast( String find,int start )const{
		if( start>rep->length-find.rep->length ) start=rep->length-find.rep->length;
		while( start>=0 ){
			if( !t_memcmp( rep->data+start,find.rep->data,find.rep->length ) ) return start;
			--start;
		}
		return -1;
	}
	
	String Trim()const{
		int i=0,i2=rep->length;
		while( i<i2 && rep->data[i]<=32 ) ++i;
		while( i2>i && rep->data[i2-1]<=32 ) --i2;
		if( i==0 && i2==rep->length ) return *this;
		return String( rep->data+i,i2-i );
	}

	Array<String> Split( String sep )const{
	
		if( !sep.rep->length ){
			Array<String> bits( rep->length );
			for( int i=0;i<rep->length;++i ){
				bits[i]=String( (Char)(*this)[i],1 );
			}
			return bits;
		}
		
		int i=0,i2,n=1;
		while( (i2=Find( sep,i ))!=-1 ){
			++n;
			i=i2+sep.rep->length;
		}
		Array<String> bits( n );
		if( n==1 ){
			bits[0]=*this;
			return bits;
		}
		i=0;n=0;
		while( (i2=Find( sep,i ))!=-1 ){
			bits[n++]=Slice( i,i2 );
			i=i2+sep.rep->length;
		}
		bits[n]=Slice( i );
		return bits;
	}

	String Join( Array<String> bits )const{
		if( bits.Length()==0 ) return String();
		if( bits.Length()==1 ) return bits[0];
		int newlen=rep->length * (bits.Length()-1);
		for( int i=0;i<bits.Length();++i ){
			newlen+=bits[i].rep->length;
		}
		Rep *p=Rep::alloc( newlen );
		Char *q=p->data;
		q=t_memcpy( q,bits[0].rep->data,bits[0].rep->length );
		for( int i=1;i<bits.Length();++i ){
			q=t_memcpy( q,rep->data,rep->length );
			q=t_memcpy( q,bits[i].rep->data,bits[i].rep->length );
		}
		return String( p );
	}

	String Replace( String find,String repl )const{
		int i=0,i2,newlen=0;
		while( (i2=Find( find,i ))!=-1 ){
			newlen+=(i2-i)+repl.rep->length;
			i=i2+find.rep->length;
		}
		if( !i ) return *this;
		newlen+=rep->length-i;
		Rep *p=Rep::alloc( newlen );
		Char *q=p->data;
		i=0;
		while( (i2=Find( find,i ))!=-1 ){
			q=t_memcpy( q,rep->data+i,i2-i );
			q=t_memcpy( q,repl.rep->data,repl.rep->length );
			i=i2+find.rep->length;
		}
		q=t_memcpy( q,rep->data+i,rep->length-i );
		return String( p );
	}

	String ToLower()const{
		for( int i=0;i<rep->length;++i ){
			Char t=towlower( rep->data[i] );
			if( t==rep->data[i] ) continue;
			Rep *p=Rep::alloc( rep->length );
			Char *q=p->data;
			t_memcpy( q,rep->data,i );
			for( q[i++]=t;i<rep->length;++i ){
				q[i]=towlower( rep->data[i] );
			}
			return String( p );
		}
		return *this;
	}

	String ToUpper()const{
		for( int i=0;i<rep->length;++i ){
			Char t=towupper( rep->data[i] );
			if( t==rep->data[i] ) continue;
			Rep *p=Rep::alloc( rep->length );
			Char *q=p->data;
			t_memcpy( q,rep->data,i );
			for( q[i++]=t;i<rep->length;++i ){
				q[i]=towupper( rep->data[i] );
			}
			return String( p );
		}
		return *this;
	}
	
	bool Contains( String sub )const{
		return Find( sub )!=-1;
	}

	bool StartsWith( String sub )const{
		return sub.rep->length<=rep->length && !t_memcmp( rep->data,sub.rep->data,sub.rep->length );
	}

	bool EndsWith( String sub )const{
		return sub.rep->length<=rep->length && !t_memcmp( rep->data+rep->length-sub.rep->length,sub.rep->data,sub.rep->length );
	}
	
	String Slice( int from,int term )const{
		int len=rep->length;
		if( from<0 ){
			from+=len;
			if( from<0 ) from=0;
		}else if( from>len ){
			from=len;
		}
		if( term<0 ){
			term+=len;
		}else if( term>len ){
			term=len;
		}
		if( term<from ) return String();
		if( from==0 && term==len ) return *this;
		return String( rep->data+from,term-from );
	}

	String Slice( int from )const{
		return Slice( from,rep->length );
	}
	
	Array<int> ToChars()const{
		Array<int> chars( rep->length );
		for( int i=0;i<rep->length;++i ) chars[i]=rep->data[i];
		return chars;
	}
	
	int ToInt()const{
		char buf[64];
		return atoi( ToCString<char>( buf,sizeof(buf) ) );
	}
	
	Float ToFloat()const{
		char buf[256];
		return atof( ToCString<char>( buf,sizeof(buf) ) );
	}

	template<class C> class CString{
		struct Rep{
			int refs;
			C data[1];
		};
		Rep *_rep;
		static Rep _nul;
	public:
		template<class T> CString( const T *data,int length ){
			_rep=(Rep*)malloc( length*sizeof(C)+sizeof(Rep) );
			_rep->refs=1;
			_rep->data[length]=0;
			for( int i=0;i<length;++i ){
				_rep->data[i]=(C)data[i];
			}
		}
		CString():_rep( new Rep ){
			_rep->refs=1;
		}
		CString( const CString &c ):_rep(c._rep){
			++_rep->refs;
		}
		~CString(){
			if( !--_rep->refs ) free( _rep );
		}
		CString &operator=( const CString &c ){
			++c._rep->refs;
			if( !--_rep->refs ) free( _rep );
			_rep=c._rep;
			return *this;
		}
		operator const C*()const{ 
			return _rep->data;
		}
	};
	
	template<class C> CString<C> ToCString()const{
		return CString<C>( rep->data,rep->length );
	}

	template<class C> C *ToCString( C *p,int length )const{
		if( --length>rep->length ) length=rep->length;
		for( int i=0;i<length;++i ) p[i]=rep->data[i];
		p[length]=0;
		return p;
	}
	
#if __OBJC__	
	NSString *ToNSString()const{
		return [NSString stringWithCharacters:ToCString<unichar>() length:rep->length];
	}
#endif

#if __cplusplus_winrt
	Platform::String ^ToWinRTString()const{
		return ref new Platform::String( rep->data,rep->length );
	}
#endif
	CString<char> ToUtf8()const{
		std::vector<unsigned char> buf;
		Save( buf );
		return CString<char>( &buf[0],buf.size() );
	}

	bool Save( FILE *fp )const{
		std::vector<unsigned char> buf;
		Save( buf );
		return buf.size() ? fwrite( &buf[0],1,buf.size(),fp )==buf.size() : true;
	}
	
	void Save( std::vector<unsigned char> &buf )const{
	
		Char *p=rep->data;
		Char *e=p+rep->length;
		
		while( p<e ){
			Char c=*p++;
			if( c<0x80 ){
				buf.push_back( c );
			}else if( c<0x800 ){
				buf.push_back( 0xc0 | (c>>6) );
				buf.push_back( 0x80 | (c & 0x3f) );
			}else{
				buf.push_back( 0xe0 | (c>>12) );
				buf.push_back( 0x80 | ((c>>6) & 0x3f) );
				buf.push_back( 0x80 | (c & 0x3f) );
			}
		}
	}
	
	static String FromChars( Array<int> chars ){
		int n=chars.Length();
		Rep *p=Rep::alloc( n );
		for( int i=0;i<n;++i ){
			p->data[i]=chars[i];
		}
		return String( p );
	}

	static String Load( FILE *fp ){
		unsigned char tmp[4096];
		std::vector<unsigned char> buf;
		for(;;){
			int n=fread( tmp,1,4096,fp );
			if( n>0 ) buf.insert( buf.end(),tmp,tmp+n );
			if( n!=4096 ) break;
		}
		return buf.size() ? String::Load( &buf[0],buf.size() ) : String();
	}
	
	static String Load( unsigned char *p,int n ){
	
		_str_load_err=0;
		
		unsigned char *e=p+n;
		std::vector<Char> chars;
		
		int t0=n>0 ? p[0] : -1;
		int t1=n>1 ? p[1] : -1;

		if( t0==0xfe && t1==0xff ){
			p+=2;
			while( p<e-1 ){
				int c=*p++;
				chars.push_back( (c<<8)|*p++ );
			}
		}else if( t0==0xff && t1==0xfe ){
			p+=2;
			while( p<e-1 ){
				int c=*p++;
				chars.push_back( (*p++<<8)|c );
			}
		}else{
			int t2=n>2 ? p[2] : -1;
			if( t0==0xef && t1==0xbb && t2==0xbf ) p+=3;
			unsigned char *q=p;
			bool fail=false;
			while( p<e ){
				unsigned int c=*p++;
				if( c & 0x80 ){
					if( (c & 0xe0)==0xc0 ){
						if( p>=e || (p[0] & 0xc0)!=0x80 ){
							fail=true;
							break;
						}
						c=((c & 0x1f)<<6) | (p[0] & 0x3f);
						p+=1;
					}else if( (c & 0xf0)==0xe0 ){
						if( p+1>=e || (p[0] & 0xc0)!=0x80 || (p[1] & 0xc0)!=0x80 ){
							fail=true;
							break;
						}
						c=((c & 0x0f)<<12) | ((p[0] & 0x3f)<<6) | (p[1] & 0x3f);
						p+=2;
					}else{
						fail=true;
						break;
					}
				}
				chars.push_back( c );
			}
			if( fail ){
				_str_load_err="Invalid UTF-8";
				return String( q,n );
			}
		}
		return chars.size() ? String( &chars[0],chars.size() ) : String();
	}

private:
	
	struct Rep{
		int refs;
		int length;
		Char data[0];
		
		Rep():refs(1),length(0){
		}
		
		Rep( int length ):refs(1),length(length){
		}
		
		void retain(){
//			atomic_add( &refs,1 );
			++refs;
		}
		
		void release(){
//			if( atomic_sub( &refs,1 )>1 || this==&nullRep ) return;
			if( --refs || this==&nullRep ) return;
			free( this );
		}

		static Rep *alloc( int length ){
			if( !length ) return &nullRep;
			void *p=malloc( sizeof(Rep)+length*sizeof(Char) );
			return new(p) Rep( length );
		}
	};
	Rep *rep;
	
	static Rep nullRep;
	
	String( Rep *rep ):rep(rep){
	}
};

String::Rep String::nullRep;

String *t_create( int n,String *p ){
	for( int i=0;i<n;++i ) new( &p[i] ) String();
	return p+n;
}

String *t_create( int n,String *p,const String *q ){
	for( int i=0;i<n;++i ) new( &p[i] ) String( q[i] );
	return p+n;
}

void t_destroy( int n,String *p ){
	for( int i=0;i<n;++i ) p[i].~String();
}

// ***** Object *****

String dbg_stacktrace();

class Object : public gc_object{
public:
	virtual bool Equals( Object *obj ){
		return this==obj;
	}
	
	virtual int Compare( Object *obj ){
		return (char*)this-(char*)obj;
	}
	
	virtual String debug(){
		return "+Object\n";
	}
};

class ThrowableObject : public Object{
#ifndef NDEBUG
public:
	String stackTrace;
	ThrowableObject():stackTrace( dbg_stacktrace() ){}
#endif
};

struct gc_interface{
	virtual ~gc_interface(){}
};

//***** Debugger *****

//#define Error bbError
//#define Print bbPrint

int bbPrint( String t );

#define dbg_stream stderr

#if _MSC_VER
#define dbg_typeof decltype
#else
#define dbg_typeof __typeof__
#endif 

struct dbg_func;
struct dbg_var_type;

static int dbg_suspend;
static int dbg_stepmode;

const char *dbg_info;
String dbg_exstack;

static void *dbg_var_buf[65536*3];
static void **dbg_var_ptr=dbg_var_buf;

static dbg_func *dbg_func_buf[1024];
static dbg_func **dbg_func_ptr=dbg_func_buf;

String dbg_type( bool *p ){
	return "Bool";
}

String dbg_type( int *p ){
	return "Int";
}

String dbg_type( Float *p ){
	return "Float";
}

String dbg_type( String *p ){
	return "String";
}

template<class T> String dbg_type( T **p ){
	return "Object";
}

template<class T> String dbg_type( Array<T> *p ){
	return dbg_type( &(*p)[0] )+"[]";
}

String dbg_value( bool *p ){
	return *p ? "True" : "False";
}

String dbg_value( int *p ){
	return String( *p );
}

String dbg_value( Float *p ){
	return String( *p );
}

String dbg_value( String *p ){
	String t=*p;
	if( t.Length()>100 ) t=t.Slice( 0,100 )+"...";
	t=t.Replace( "\"","~q" );
	t=t.Replace( "\t","~t" );
	t=t.Replace( "\n","~n" );
	t=t.Replace( "\r","~r" );
	return String("\"")+t+"\"";
}

template<class T> String dbg_value( T **t ){
	Object *p=dynamic_cast<Object*>( *t );
	char buf[64];
	sprintf_s( buf,"%p",p );
	return String("@") + (buf[0]=='0' && buf[1]=='x' ? buf+2 : buf );
}

template<class T> String dbg_value( Array<T> *p ){
	String t="[";
	int n=(*p).Length();
	if( n>100 ) n=100;
	for( int i=0;i<n;++i ){
		if( i ) t+=",";
		t+=dbg_value( &(*p)[i] );
	}
	return t+"]";
}

String dbg_ptr_value( void *p ){
	char buf[64];
	sprintf_s( buf,"%p",p );
	return (buf[0]=='0' && buf[1]=='x' ? buf+2 : buf );
}

template<class T> String dbg_decl( const char *id,T *ptr ){
	return String( id )+":"+dbg_type(ptr)+"="+dbg_value(ptr)+"\n";
}

struct dbg_var_type{
	virtual String type( void *p )=0;
	virtual String value( void *p )=0;
};

template<class T> struct dbg_var_type_t : public dbg_var_type{

	String type( void *p ){
		return dbg_type( (T*)p );
	}
	
	String value( void *p ){
		return dbg_value( (T*)p );
	}
	
	static dbg_var_type_t<T> info;
};
template<class T> dbg_var_type_t<T> dbg_var_type_t<T>::info;

struct dbg_blk{
	void **var_ptr;
	
	dbg_blk():var_ptr(dbg_var_ptr){
		if( dbg_stepmode=='l' ) --dbg_suspend;
	}
	
	~dbg_blk(){
		if( dbg_stepmode=='l' ) ++dbg_suspend;
		dbg_var_ptr=var_ptr;
	}
};

struct dbg_func : public dbg_blk{
	const char *id;
	const char *info;

	dbg_func( const char *p ):id(p),info(dbg_info){
		*dbg_func_ptr++=this;
		if( dbg_stepmode=='s' ) --dbg_suspend;
	}
	
	~dbg_func(){
		if( dbg_stepmode=='s' ) ++dbg_suspend;
		--dbg_func_ptr;
		dbg_info=info;
	}
};

int dbg_print( String t ){
	static char *buf;
	static int len;
	int n=t.Length();
	if( n+100>len ){
		len=n+100;
		free( buf );
		buf=(char*)malloc( len );
	}
	buf[n]='\n';
	for( int i=0;i<n;++i ) buf[i]=t[i];
	fwrite( buf,n+1,1,dbg_stream );
	fflush( dbg_stream );
	return 0;
}

void dbg_callstack(){

	void **var_ptr=dbg_var_buf;
	dbg_func **func_ptr=dbg_func_buf;
	
	while( var_ptr!=dbg_var_ptr ){
		while( func_ptr!=dbg_func_ptr && var_ptr==(*func_ptr)->var_ptr ){
			const char *id=(*func_ptr++)->id;
			const char *info=func_ptr!=dbg_func_ptr ? (*func_ptr)->info : dbg_info;
			fprintf( dbg_stream,"+%s;%s\n",id,info );
		}
		void *vp=*var_ptr++;
		const char *nm=(const char*)*var_ptr++;
		dbg_var_type *ty=(dbg_var_type*)*var_ptr++;
		dbg_print( String(nm)+":"+ty->type(vp)+"="+ty->value(vp) );
	}
	while( func_ptr!=dbg_func_ptr ){
		const char *id=(*func_ptr++)->id;
		const char *info=func_ptr!=dbg_func_ptr ? (*func_ptr)->info : dbg_info;
		fprintf( dbg_stream,"+%s;%s\n",id,info );
	}
}

String dbg_stacktrace(){
	if( !dbg_info || !dbg_info[0] ) return "";
	String str=String( dbg_info )+"\n";
	dbg_func **func_ptr=dbg_func_ptr;
	if( func_ptr==dbg_func_buf ) return str;
	while( --func_ptr!=dbg_func_buf ){
		str+=String( (*func_ptr)->info )+"\n";
	}
	return str;
}

void dbg_throw( const char *err ){
	dbg_exstack=dbg_stacktrace();
	throw err;
}

void dbg_stop(){

#if TARGET_OS_IPHONE
	dbg_throw( "STOP" );
#endif

	fprintf( dbg_stream,"{{~~%s~~}}\n",dbg_info );
	dbg_callstack();
	dbg_print( "" );
	
	for(;;){

		char buf[256];
		char *e=fgets( buf,256,stdin );
		if( !e ) exit( -1 );
		
		e=strchr( buf,'\n' );
		if( !e ) exit( -1 );
		
		*e=0;
		
		Object *p;
		
		switch( buf[0] ){
		case '?':
			break;
		case 'r':	//run
			dbg_suspend=0;		
			dbg_stepmode=0;
			return;
		case 's':	//step
			dbg_suspend=1;
			dbg_stepmode='s';
			return;
		case 'e':	//enter func
			dbg_suspend=1;
			dbg_stepmode='e';
			return;
		case 'l':	//leave block
			dbg_suspend=0;
			dbg_stepmode='l';
			return;
		case '@':	//dump object
			p=0;
			sscanf_s( buf+1,"%p",&p );
			if( p ){
				dbg_print( p->debug() );
			}else{
				dbg_print( "" );
			}
			break;
		case 'q':	//quit!
			exit( 0 );
			break;			
		default:
			printf( "????? %s ?????",buf );fflush( stdout );
			exit( -1 );
		}
	}
}

void dbg_error( const char *err ){

#if TARGET_OS_IPHONE
	dbg_throw( err );
#endif

	for(;;){
		bbPrint( String("Monkey Runtime Error : ")+err );
		bbPrint( dbg_stacktrace() );
		dbg_stop();
	}
}

#define DBG_INFO(X) dbg_info=(X);if( dbg_suspend>0 ) dbg_stop();

#define DBG_ENTER(P) dbg_func _dbg_func(P);

#define DBG_BLOCK() dbg_blk _dbg_blk;

#define DBG_GLOBAL( ID,NAME )	//TODO!

#define DBG_LOCAL( ID,NAME )\
*dbg_var_ptr++=&ID;\
*dbg_var_ptr++=(void*)NAME;\
*dbg_var_ptr++=&dbg_var_type_t<dbg_typeof(ID)>::info;

//**** main ****

int argc;
const char **argv;

Float D2R=0.017453292519943295f;
Float R2D=57.29577951308232f;

int bbPrint( String t ){

	static std::vector<unsigned char> buf;
	buf.clear();
	t.Save( buf );
	buf.push_back( '\n' );
	buf.push_back( 0 );
	
#if __cplusplus_winrt	//winrt?

#if CFG_WINRT_PRINT_ENABLED
	OutputDebugStringA( (const char*)&buf[0] );
#endif

#elif _WIN32			//windows?

	fputs( (const char*)&buf[0],stdout );
	fflush( stdout );

#elif __APPLE__			//macos/ios?

	fputs( (const char*)&buf[0],stdout );
	fflush( stdout );
	
#elif __linux			//linux?

#if CFG_ANDROID_NDK_PRINT_ENABLED
	LOGI( (const char*)&buf[0] );
#else
	fputs( (const char*)&buf[0],stdout );
	fflush( stdout );
#endif

#endif

	return 0;
}

class BBExitApp{
};

int bbError( String err ){
	if( !err.Length() ){
#if __cplusplus_winrt
		throw BBExitApp();
#else
		exit( 0 );
#endif
	}
	dbg_error( err.ToCString<char>() );
	return 0;
}

int bbDebugLog( String t ){
	bbPrint( t );
	return 0;
}

int bbDebugStop(){
	dbg_stop();
	return 0;
}

int bbInit();
int bbMain();

#if _MSC_VER

static void _cdecl seTranslator( unsigned int ex,EXCEPTION_POINTERS *p ){

	switch( ex ){
	case EXCEPTION_ACCESS_VIOLATION:dbg_error( "Memory access violation" );
	case EXCEPTION_ILLEGAL_INSTRUCTION:dbg_error( "Illegal instruction" );
	case EXCEPTION_INT_DIVIDE_BY_ZERO:dbg_error( "Integer divide by zero" );
	case EXCEPTION_STACK_OVERFLOW:dbg_error( "Stack overflow" );
	}
	dbg_error( "Unknown exception" );
}

#else

void sighandler( int sig  ){
	switch( sig ){
	case SIGSEGV:dbg_error( "Memory access violation" );
	case SIGILL:dbg_error( "Illegal instruction" );
	case SIGFPE:dbg_error( "Floating point exception" );
#if !_WIN32
	case SIGBUS:dbg_error( "Bus error" );
#endif	
	}
	dbg_error( "Unknown signal" );
}

#endif

//entry point call by target main()...
//
int bb_std_main( int argc,const char **argv ){

	::argc=argc;
	::argv=argv;
	
#if _MSC_VER

	_set_se_translator( seTranslator );

#else
	
	signal( SIGSEGV,sighandler );
	signal( SIGILL,sighandler );
	signal( SIGFPE,sighandler );
#if !_WIN32
	signal( SIGBUS,sighandler );
#endif

#endif

	if( !setlocale( LC_CTYPE,"en_US.UTF-8" ) ){
		setlocale( LC_CTYPE,"" );
	}

	gc_init1();

	bbInit();
	
	gc_init2();

	bbMain();

	return 0;
}


//***** game.h *****

struct BBGameEvent{
	enum{
		None=0,
		KeyDown=1,KeyUp=2,KeyChar=3,
		MouseDown=4,MouseUp=5,MouseMove=6,
		TouchDown=7,TouchUp=8,TouchMove=9,
		MotionAccel=10
	};
};

class BBGameDelegate : public Object{
public:
	virtual void StartGame(){}
	virtual void SuspendGame(){}
	virtual void ResumeGame(){}
	virtual void UpdateGame(){}
	virtual void RenderGame(){}
	virtual void KeyEvent( int event,int data ){}
	virtual void MouseEvent( int event,int data,Float x,Float y ){}
	virtual void TouchEvent( int event,int data,Float x,Float y ){}
	virtual void MotionEvent( int event,int data,Float x,Float y,Float z ){}
	virtual void DiscardGraphics(){}
};

struct BBDisplayMode : public Object{
	int width;
	int height;
	int depth;
	int hertz;
	int flags;
	BBDisplayMode( int width=0,int height=0,int depth=0,int hertz=0,int flags=0 ):width(width),height(height),depth(depth),hertz(hertz),flags(flags){}
};

class BBGame{
public:
	BBGame();
	virtual ~BBGame(){}
	
	// ***** Extern *****
	static BBGame *Game(){ return _game; }
	
	virtual void SetDelegate( BBGameDelegate *delegate );
	virtual BBGameDelegate *Delegate(){ return _delegate; }
	
	virtual void SetKeyboardEnabled( bool enabled );
	virtual bool KeyboardEnabled();
	
	virtual void SetUpdateRate( int updateRate );
	virtual int UpdateRate();
	
	virtual bool Started(){ return _started; }
	virtual bool Suspended(){ return _suspended; }
	
	virtual int Millisecs();
	virtual void GetDate( Array<int> date );
	virtual int SaveState( String state );
	virtual String LoadState();
	virtual String LoadString( String path );
	virtual bool PollJoystick( int port,Array<Float> joyx,Array<Float> joyy,Array<Float> joyz,Array<bool> buttons );
	virtual void OpenUrl( String url );
	virtual void SetMouseVisible( bool visible );
	
	virtual int GetDeviceWidth(){ return 0; }
	virtual int GetDeviceHeight(){ return 0; }
	virtual void SetDeviceWindow( int width,int height,int flags ){}
	virtual Array<BBDisplayMode*> GetDisplayModes(){ return Array<BBDisplayMode*>(); }
	virtual BBDisplayMode *GetDesktopMode(){ return 0; }
	virtual void SetSwapInterval( int interval ){}

	// ***** Native *****
	virtual String PathToFilePath( String path );
	virtual FILE *OpenFile( String path,String mode );
	virtual unsigned char *LoadData( String path,int *plength );
	virtual unsigned char *LoadImageData( String path,int *width,int *height,int *depth ){ return 0; }
	virtual unsigned char *LoadAudioData( String path,int *length,int *channels,int *format,int *hertz ){ return 0; }
	
	//***** Internal *****
	virtual void Die( ThrowableObject *ex );
	virtual void gc_collect();
	virtual void StartGame();
	virtual void SuspendGame();
	virtual void ResumeGame();
	virtual void UpdateGame();
	virtual void RenderGame();
	virtual void KeyEvent( int ev,int data );
	virtual void MouseEvent( int ev,int data,float x,float y );
	virtual void TouchEvent( int ev,int data,float x,float y );
	virtual void MotionEvent( int ev,int data,float x,float y,float z );
	virtual void DiscardGraphics();
	
protected:

	static BBGame *_game;

	BBGameDelegate *_delegate;
	bool _keyboardEnabled;
	int _updateRate;
	bool _started;
	bool _suspended;
};

//***** game.cpp *****

BBGame *BBGame::_game;

BBGame::BBGame():
_delegate( 0 ),
_keyboardEnabled( false ),
_updateRate( 0 ),
_started( false ),
_suspended( false ){
	_game=this;
}

void BBGame::SetDelegate( BBGameDelegate *delegate ){
	_delegate=delegate;
}

void BBGame::SetKeyboardEnabled( bool enabled ){
	_keyboardEnabled=enabled;
}

bool BBGame::KeyboardEnabled(){
	return _keyboardEnabled;
}

void BBGame::SetUpdateRate( int updateRate ){
	_updateRate=updateRate;
}

int BBGame::UpdateRate(){
	return _updateRate;
}

int BBGame::Millisecs(){
	return 0;
}

void BBGame::GetDate( Array<int> date ){
	int n=date.Length();
	if( n>0 ){
		time_t t=time( 0 );
		
#if _MSC_VER
		struct tm tii;
		struct tm *ti=&tii;
		localtime_s( ti,&t );
#else
		struct tm *ti=localtime( &t );
#endif

		date[0]=ti->tm_year+1900;
		if( n>1 ){ 
			date[1]=ti->tm_mon+1;
			if( n>2 ){
				date[2]=ti->tm_mday;
				if( n>3 ){
					date[3]=ti->tm_hour;
					if( n>4 ){
						date[4]=ti->tm_min;
						if( n>5 ){
							date[5]=ti->tm_sec;
							if( n>6 ){
								date[6]=0;
							}
						}
					}
				}
			}
		}
	}
}

int BBGame::SaveState( String state ){
	if( FILE *f=OpenFile( "./.monkeystate","wb" ) ){
		bool ok=state.Save( f );
		fclose( f );
		return ok ? 0 : -2;
	}
	return -1;
}

String BBGame::LoadState(){
	if( FILE *f=OpenFile( "./.monkeystate","rb" ) ){
		String str=String::Load( f );
		fclose( f );
		return str;
	}
	return "";
}

String BBGame::LoadString( String path ){
	if( FILE *fp=OpenFile( path,"rb" ) ){
		String str=String::Load( fp );
		fclose( fp );
		return str;
	}
	return "";
}

bool BBGame::PollJoystick( int port,Array<Float> joyx,Array<Float> joyy,Array<Float> joyz,Array<bool> buttons ){
	return false;
}

void BBGame::OpenUrl( String url ){
}

void BBGame::SetMouseVisible( bool visible ){
}

//***** C++ Game *****

String BBGame::PathToFilePath( String path ){
	return path;
}

FILE *BBGame::OpenFile( String path,String mode ){
	path=PathToFilePath( path );
	if( path=="" ) return 0;
	
#if __cplusplus_winrt
	path=path.Replace( "/","\\" );
	FILE *f;
	if( _wfopen_s( &f,path.ToCString<wchar_t>(),mode.ToCString<wchar_t>() ) ) return 0;
	return f;
#elif _WIN32
	return _wfopen( path.ToCString<wchar_t>(),mode.ToCString<wchar_t>() );
#else
	return fopen( path.ToCString<char>(),mode.ToCString<char>() );
#endif
}

unsigned char *BBGame::LoadData( String path,int *plength ){

	FILE *f=OpenFile( path,"rb" );
	if( !f ) return 0;

	const int BUF_SZ=4096;
	std::vector<void*> tmps;
	int length=0;
	
	for(;;){
		void *p=malloc( BUF_SZ );
		int n=fread( p,1,BUF_SZ,f );
		tmps.push_back( p );
		length+=n;
		if( n!=BUF_SZ ) break;
	}
	fclose( f );
	
	unsigned char *data=(unsigned char*)malloc( length );
	unsigned char *p=data;
	
	int sz=length;
	for( int i=0;i<tmps.size();++i ){
		int n=sz>BUF_SZ ? BUF_SZ : sz;
		memcpy( p,tmps[i],n );
		free( tmps[i] );
		sz-=n;
		p+=n;
	}
	
	*plength=length;
	
	gc_ext_malloced( length );
	
	return data;
}

//***** INTERNAL *****

void BBGame::Die( ThrowableObject *ex ){
	bbPrint( "Monkey Runtime Error : Uncaught Monkey Exception" );
#ifndef NDEBUG
	bbPrint( ex->stackTrace );
#endif
	exit( -1 );
}

void BBGame::gc_collect(){
	gc_mark( _delegate );
	::gc_collect();
}

void BBGame::StartGame(){

	if( _started ) return;
	_started=true;
	
	try{
		_delegate->StartGame();
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::SuspendGame(){

	if( !_started || _suspended ) return;
	_suspended=true;
	
	try{
		_delegate->SuspendGame();
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::ResumeGame(){

	if( !_started || !_suspended ) return;
	_suspended=false;
	
	try{
		_delegate->ResumeGame();
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::UpdateGame(){

	if( !_started || _suspended ) return;
	
	try{
		_delegate->UpdateGame();
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::RenderGame(){

	if( !_started ) return;
	
	try{
		_delegate->RenderGame();
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::KeyEvent( int ev,int data ){

	if( !_started ) return;
	
	try{
		_delegate->KeyEvent( ev,data );
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::MouseEvent( int ev,int data,float x,float y ){

	if( !_started ) return;
	
	try{
		_delegate->MouseEvent( ev,data,x,y );
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::TouchEvent( int ev,int data,float x,float y ){

	if( !_started ) return;
	
	try{
		_delegate->TouchEvent( ev,data,x,y );
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::MotionEvent( int ev,int data,float x,float y,float z ){

	if( !_started ) return;
	
	try{
		_delegate->MotionEvent( ev,data,x,y,z );
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

void BBGame::DiscardGraphics(){

	if( !_started ) return;
	
	try{
		_delegate->DiscardGraphics();
	}catch( ThrowableObject *ex ){
		Die( ex );
	}
	gc_collect();
}

// Stdcpp trans.system runtime.
//
// Placed into the public domain 24/02/2011.
// No warranty implied; use as your own risk.

#if _WIN32

#ifndef PATH_MAX
#define PATH_MAX MAX_PATH
#endif

typedef WCHAR OS_CHAR;
typedef struct _stat stat_t;

#define mkdir( X,Y ) _wmkdir( X )
#define rmdir _wrmdir
#define remove _wremove
#define rename _wrename
#define stat _wstat
#define _fopen _wfopen
#define putenv _wputenv
#define getenv _wgetenv
#define system _wsystem
#define chdir _wchdir
#define getcwd _wgetcwd
#define realpath(X,Y) _wfullpath( Y,X,PATH_MAX )	//Note: first args SWAPPED to be posix-like!
#define opendir _wopendir
#define readdir _wreaddir
#define closedir _wclosedir
#define DIR _WDIR
#define dirent _wdirent

#elif __APPLE__

typedef char OS_CHAR;
typedef struct stat stat_t;

#define _fopen fopen

#elif __linux

/*
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>
*/

typedef char OS_CHAR;
typedef struct stat stat_t;

#define _fopen fopen

#endif

static String _appPath;
static Array<String> _appArgs;

static String::CString<char> C_STR( const String &t ){
	return t.ToCString<char>();
}

static String::CString<OS_CHAR> OS_STR( const String &t ){
	return t.ToCString<OS_CHAR>();
}

String HostOS(){
#if _WIN32
	return "winnt";
#elif __APPLE__
	return "macos";
#elif __linux
	return "linux";
#else
	return "";
#endif
}

String RealPath( String path ){
	std::vector<OS_CHAR> buf( PATH_MAX+1 );
	if( realpath( OS_STR( path ),&buf[0] ) ){}
	buf[buf.size()-1]=0;
	for( int i=0;i<PATH_MAX && buf[i];++i ){
		if( buf[i]=='\\' ) buf[i]='/';
		
	}
	return String( &buf[0] );
}

String AppPath(){

	if( _appPath.Length() ) return _appPath;
	
#if _WIN32

	OS_CHAR buf[PATH_MAX+1];
	GetModuleFileNameW( GetModuleHandleW(0),buf,PATH_MAX );
	buf[PATH_MAX]=0;
	_appPath=String( buf );
	
#elif __APPLE__

	char buf[PATH_MAX];
	uint32_t size=sizeof( buf );
	_NSGetExecutablePath( buf,&size );
	buf[PATH_MAX-1]=0;
	_appPath=String( buf );
	
#elif __linux

	char lnk[PATH_MAX],buf[PATH_MAX];
	pid_t pid=getpid();
	sprintf( lnk,"/proc/%i/exe",pid );
	int i=readlink( lnk,buf,PATH_MAX );
	if( i>0 && i<PATH_MAX ){
		buf[i]=0;
		_appPath=String( buf );
	}

#endif

	_appPath=RealPath( _appPath );
	return _appPath;
}

Array<String> AppArgs(){
	if( _appArgs.Length() ) return _appArgs;
	_appArgs=Array<String>( argc );
	for( int i=0;i<argc;++i ){
		_appArgs[i]=String( argv[i] );
	}
	return _appArgs;
}
	
int FileType( String path ){
	stat_t st;
	if( stat( OS_STR(path),&st ) ) return 0;
	switch( st.st_mode & S_IFMT ){
	case S_IFREG : return 1;
	case S_IFDIR : return 2;
	}
	return 0;
}

int FileSize( String path ){
	stat_t st;
	if( stat( OS_STR(path),&st ) ) return -1;
	return st.st_size;
}

int FileTime( String path ){
	stat_t st;
	if( stat( OS_STR(path),&st ) ) return -1;
	return st.st_mtime;
}

String LoadString( String path ){
	if( FILE *fp=_fopen( OS_STR(path),OS_STR("rb") ) ){
		String str=String::Load( fp );
		if( _str_load_err ){
			bbPrint( String( _str_load_err )+" in file: "+path );
		}
		fclose( fp );
		return str;
	}
	return "";
}
	
int SaveString( String str,String path ){
	if( FILE *fp=_fopen( OS_STR(path),OS_STR("wb") ) ){
		bool ok=str.Save( fp );
		fclose( fp );
		return ok ? 0 : -2;
	}else{
//		printf( "FOPEN 'wb' for SaveString '%s' failed\n",C_STR( path ) );
		fflush( stdout );
	}
	return -1;
}

Array<String> LoadDir( String path ){
	std::vector<String> files;
	
#if _WIN32

	WIN32_FIND_DATAW filedata;
	HANDLE handle=FindFirstFileW( OS_STR(path+"/*"),&filedata );
	if( handle!=INVALID_HANDLE_VALUE ){
		do{
			String f=filedata.cFileName;
			if( f=="." || f==".." ) continue;
			files.push_back( f );
		}while( FindNextFileW( handle,&filedata ) );
		FindClose( handle );
	}else{
//		printf( "FindFirstFileW for LoadDir(%s) failed\n",C_STR(path) );
		fflush( stdout );
	}
	
#else

	if( DIR *dir=opendir( OS_STR(path) ) ){
		while( dirent *ent=readdir( dir ) ){
			String f=ent->d_name;
			if( f=="." || f==".." ) continue;
			files.push_back( f );
		}
		closedir( dir );
	}else{
//		printf( "opendir for LoadDir(%s) failed\n",C_STR(path) );
		fflush( stdout );
	}

#endif

	return files.size() ? Array<String>( &files[0],files.size() ) : Array<String>();
}
	
int CopyFile( String srcpath,String dstpath ){

#if _WIN32

	if( CopyFileW( OS_STR(srcpath),OS_STR(dstpath),FALSE ) ) return 1;
	return 0;
	
#elif __APPLE__

	// Would like to use COPY_ALL here, but it breaks trans on MacOS - produces weird 'pch out of date' error with copied projects.
	//
	// Ranlib strikes back!
	//
	if( copyfile( OS_STR(srcpath),OS_STR(dstpath),0,COPYFILE_DATA )>=0 ) return 1;
	return 0;
	
#else

	int err=-1;
	if( FILE *srcp=_fopen( OS_STR( srcpath ),OS_STR( "rb" ) ) ){
		err=-2;
		if( FILE *dstp=_fopen( OS_STR( dstpath ),OS_STR( "wb" ) ) ){
			err=0;
			char buf[1024];
			while( int n=fread( buf,1,1024,srcp ) ){
				if( fwrite( buf,1,n,dstp )!=n ){
					err=-3;
					break;
				}
			}
			fclose( dstp );
		}else{
//			printf( "FOPEN 'wb' for CopyFile(%s,%s) failed\n",C_STR(srcpath),C_STR(dstpath) );
			fflush( stdout );
		}
		fclose( srcp );
	}else{
//		printf( "FOPEN 'rb' for CopyFile(%s,%s) failed\n",C_STR(srcpath),C_STR(dstpath) );
		fflush( stdout );
	}
	return err==0;
	
#endif
}

int ChangeDir( String path ){
	return chdir( OS_STR(path) );
}

String CurrentDir(){
	std::vector<OS_CHAR> buf( PATH_MAX+1 );
	if( getcwd( &buf[0],buf.size() ) ){}
	buf[buf.size()-1]=0;
	return String( &buf[0] );
}

int CreateDir( String path ){
	mkdir( OS_STR( path ),0777 );
	return FileType(path)==2;
}

int DeleteDir( String path ){
	rmdir( OS_STR(path) );
	return FileType(path)==0;
}

int DeleteFile( String path ){
	remove( OS_STR(path) );
	return FileType(path)==0;
}

int SetEnv( String name,String value ){
#if _WIN32
	return putenv( OS_STR( name+"="+value ) );
#else
	if( value.Length() ) return setenv( OS_STR( name ),OS_STR( value ),1 );
	unsetenv( OS_STR( name ) );
	return 0;
#endif
}

String GetEnv( String name ){
	if( OS_CHAR *p=getenv( OS_STR(name) ) ) return String( p );
	return "";
}

int Execute( String cmd ){

#if _WIN32

	cmd=String("cmd /S /C \"")+cmd+"\"";

	PROCESS_INFORMATION pi={0};
	STARTUPINFOW si={sizeof(si)};

	if( !CreateProcessW( 0,(WCHAR*)(const OS_CHAR*)OS_STR(cmd),0,0,1,CREATE_DEFAULT_ERROR_MODE,0,0,&si,&pi ) ) return -1;

	WaitForSingleObject( pi.hProcess,INFINITE );

	int res=GetExitCodeProcess( pi.hProcess,(DWORD*)&res ) ? res : -1;

	CloseHandle( pi.hProcess );
	CloseHandle( pi.hThread );

	return res;

#else

	return system( OS_STR(cmd) );

#endif
}

int ExitApp( int retcode ){
	exit( retcode );
	return 0;
}


// ***** thread.h *****

#if __cplusplus_winrt

using namespace Windows::System::Threading;

#endif

class BBThread : public Object{
public:
	Object *result;
	
	BBThread();
	
	virtual void Start();
	virtual bool IsRunning();
	
	virtual Object *Result();
	virtual void SetResult( Object *result );
	
	static  String Strdup( const String &str );
	
	virtual void Run__UNSAFE__();
	
	
private:

	enum{
		INIT=0,
		RUNNING=1,
		FINISHED=2
	};

	
	int _state;
	Object *_result;
	
#if __cplusplus_winrt

	friend class Launcher;

	class Launcher{
	
		friend class BBThread;
		BBThread *_thread;
		
		Launcher( BBThread *thread ):_thread(thread){
		}
		
		public:
		
		void operator()( IAsyncAction ^operation ){
			_thread->Run__UNSAFE__();
			_thread->_state=FINISHED;
		} 
	};
	
#elif _WIN32

	static DWORD WINAPI run( void *p );
	
#else

	static void *run( void *p );
	
#endif

};

// ***** thread.cpp *****

BBThread::BBThread():_state( INIT ),_result( 0 ){
}

bool BBThread::IsRunning(){
	return _state==RUNNING;
}

Object *BBThread::Result(){
	return _result;
}

void BBThread::SetResult( Object *result ){
	_result=result;
}

String BBThread::Strdup( const String &str ){
	return str.Copy();
}

void BBThread::Run__UNSAFE__(){
}

#if __cplusplus_winrt

void BBThread::Start(){
	if( _state==RUNNING ) return;
	
	_result=0;
	_state=RUNNING;
	
	Launcher launcher( this );
	
	auto handler=ref new WorkItemHandler( launcher );
	
	ThreadPool::RunAsync( handler );
}

#elif _WIN32

void BBThread::Start(){
	if( _state==RUNNING ) return;
	
	_result=0;
	_state=RUNNING;
	
	DWORD _id;
	HANDLE _handle;

	if( _handle=CreateThread( 0,0,run,this,0,&_id ) ){
		CloseHandle( _handle );
		return;
	}
	
	puts( "CreateThread failed!" );
	exit( -1 );
}

DWORD WINAPI BBThread::run( void *p ){
	BBThread *thread=(BBThread*)p;

	thread->Run__UNSAFE__();
	
	thread->_state=FINISHED;
	return 0;
}

#else

void BBThread::Start(){
	if( _state==RUNNING ) return;
	
	_result=0;
	_state=RUNNING;
	
	pthread_t _handle;
	
	if( !pthread_create( &_handle,0,run,this ) ){
		pthread_detach( _handle );
		return;
	}
	
	puts( "pthread_create failed!" );
	exit( -1 );
}

void *BBThread::run( void *p ){
	BBThread *thread=(BBThread*)p;

	thread->Run__UNSAFE__();

	thread->_state=FINISHED;
	return 0;
}

#endif


// ***** databuffer.h *****

class BBDataBuffer : public Object{
public:
	
	BBDataBuffer();
	
	~BBDataBuffer();
	
	bool _New( int length,void *data=0 );
	
	bool _Load( String path );
	
	void _LoadAsync( const String &path,BBThread *thread );

	void Discard();
	
	const void *ReadPointer( int offset=0 ){
		return _data+offset;
	}
	
	void *WritePointer( int offset=0 ){
		return _data+offset;
	}
	
	int Length(){
		return _length;
	}
	
	void PokeByte( int addr,int value ){
		*(_data+addr)=value;
	}

	void PokeShort( int addr,int value ){
		*(short*)(_data+addr)=value;
	}
	
	void PokeInt( int addr,int value ){
		*(int*)(_data+addr)=value;
	}
	
	void PokeFloat( int addr,float value ){
		*(float*)(_data+addr)=value;
	}

	int PeekByte( int addr ){
		return *(_data+addr);
	}
	
	int PeekShort( int addr ){
		return *(short*)(_data+addr);
	}
	
	int PeekInt( int addr ){
		return *(int*)(_data+addr);
	}
	
	float PeekFloat( int addr ){
		return *(float*)(_data+addr);
	}
	
private:
	signed char *_data;
	int _length;
};

// ***** databuffer.cpp *****

BBDataBuffer::BBDataBuffer():_data(0),_length(0){
}

BBDataBuffer::~BBDataBuffer(){
	if( _data ) free( _data );
}

bool BBDataBuffer::_New( int length,void *data ){
	if( _data ) return false;
	if( !data ) data=malloc( length );
	_data=(signed char*)data;
	_length=length;
	return true;
}

bool BBDataBuffer::_Load( String path ){
	if( _data ) return false;
	
	_data=(signed char*)BBGame::Game()->LoadData( path,&_length );
	if( !_data ) return false;
	
	return true;
}

void BBDataBuffer::_LoadAsync( const String &cpath,BBThread *thread ){

	String path=cpath.Copy();
	
	if( _Load( path ) ) thread->SetResult( this );
}

void BBDataBuffer::Discard(){
	if( !_data ) return;
	free( _data );
	_data=0;
	_length=0;
}


// ***** stream.h *****

class BBStream : public Object{
public:

	virtual int Eof(){
		return 0;
	}

	virtual void Close(){
	}

	virtual int Length(){
		return 0;
	}
	
	virtual int Position(){
		return 0;
	}
	
	virtual int Seek( int position ){
		return 0;
	}
	
	virtual int Read( BBDataBuffer *buffer,int offset,int count ){
		return 0;
	}

	virtual int Write( BBDataBuffer *buffer,int offset,int count ){
		return 0;
	}
};

// ***** stream.cpp *****


// ***** filestream.h *****

class BBFileStream : public BBStream{
public:

	BBFileStream();
	~BBFileStream();

	void Close();
	int Eof();
	int Length();
	int Position();
	int Seek( int position );
	int Read( BBDataBuffer *buffer,int offset,int count );
	int Write( BBDataBuffer *buffer,int offset,int count );

	bool Open( String path,String mode );
	
private:
	FILE *_file;
	int _position;
	int _length;
};

// ***** filestream.cpp *****

BBFileStream::BBFileStream():_file(0),_position(0),_length(0){
}

BBFileStream::~BBFileStream(){
	if( _file ) fclose( _file );
}

bool BBFileStream::Open( String path,String mode ){
	if( _file ) return false;

	String fmode;	
	if( mode=="r" ){
		fmode="rb";
	}else if( mode=="w" ){
		fmode="wb";
	}else if( mode=="u" ){
		fmode="rb+";
	}else{
		return false;
	}

	_file=BBGame::Game()->OpenFile( path,fmode );
	if( !_file && mode=="u" ) _file=BBGame::Game()->OpenFile( path,"wb+" );
	if( !_file ) return false;
	
	fseek( _file,0,SEEK_END );
	_length=ftell( _file );
	fseek( _file,0,SEEK_SET );
	_position=0;
	
	return true;
}

void BBFileStream::Close(){
	if( !_file ) return;
	
	fclose( _file );
	_file=0;
	_position=0;
	_length=0;
}

int BBFileStream::Eof(){
	if( !_file ) return -1;
	
	return _position==_length;
}

int BBFileStream::Length(){
	return _length;
}

int BBFileStream::Position(){
	return _position;
}

int BBFileStream::Seek( int position ){
	if( !_file ) return 0;
	
	fseek( _file,position,SEEK_SET );
	_position=ftell( _file );
	return _position;
}

int BBFileStream::Read( BBDataBuffer *buffer,int offset,int count ){
	if( !_file ) return 0;
	
	int n=fread( buffer->WritePointer(offset),1,count,_file );
	_position+=n;
	return n;
}

int BBFileStream::Write( BBDataBuffer *buffer,int offset,int count ){
	if( !_file ) return 0;
	
	int n=fwrite( buffer->ReadPointer(offset),1,count,_file );
	_position+=n;
	if( _position>_length ) _length=_position;
	return n;
}

class c_TransCC;
class c_Type;
class c_StringType;
class c_Decl;
class c_ScopeDecl;
class c_ConfigScope;
class c_ValDecl;
class c_ConstDecl;
class c_Map;
class c_StringMap;
class c_Node;
class c_Expr;
class c_BoolType;
class c_Map2;
class c_StringMap2;
class c_Node2;
class c_Stack;
class c_StringStack;
class c_Builder;
class c_Map3;
class c_StringMap3;
class c_AmigaBuilder;
class c_Node3;
class c_AndroidBuilder;
class c_AndroidNdkBuilder;
class c_GlfwBuilder;
class c_Html5Builder;
class c_IosBuilder;
class c_FlashBuilder;
class c_PsmBuilder;
class c_StdcppBuilder;
class c_WinrtBuilder;
class c_XnaBuilder;
class c_NodeEnumerator;
class c_List;
class c_StringList;
class c_Node4;
class c_HeadNode;
class c_Enumerator;
class c_Stack2;
class c_ModuleDecl;
class c_List2;
class c_Node5;
class c_HeadNode2;
class c_Toker;
class c_Set;
class c_StringSet;
class c_Map4;
class c_StringMap4;
class c_Node6;
class c_AppDecl;
class c_Map5;
class c_StringMap5;
class c_Node7;
class c_Parser;
class c_NumericType;
class c_IntType;
class c_FloatType;
class c_AliasDecl;
class c_List3;
class c_Node8;
class c_HeadNode3;
class c_BlockDecl;
class c_FuncDecl;
class c_List4;
class c_FuncDeclList;
class c_Node9;
class c_HeadNode4;
class c_ClassDecl;
class c_VoidType;
class c_IdentType;
class c_Stack3;
class c_ArrayType;
class c_UnaryExpr;
class c_ArrayExpr;
class c_Stack4;
class c_ConstExpr;
class c_ScopeExpr;
class c_NewArrayExpr;
class c_NewObjectExpr;
class c_CastExpr;
class c_IdentExpr;
class c_SelfExpr;
class c_Stmt;
class c_List5;
class c_Node10;
class c_HeadNode5;
class c_InvokeSuperExpr;
class c_IdentTypeExpr;
class c_FuncCallExpr;
class c_SliceExpr;
class c_IndexExpr;
class c_BinaryExpr;
class c_BinaryMathExpr;
class c_BinaryCompareExpr;
class c_BinaryLogicExpr;
class c_VarDecl;
class c_GlobalDecl;
class c_FieldDecl;
class c_LocalDecl;
class c_Enumerator2;
class c_Stack5;
class c_ObjectType;
class c_List6;
class c_Node11;
class c_HeadNode6;
class c_ArgDecl;
class c_Stack6;
class c_List7;
class c_Node12;
class c_HeadNode7;
class c_DeclStmt;
class c_ReturnStmt;
class c_BreakStmt;
class c_ContinueStmt;
class c_IfStmt;
class c_WhileStmt;
class c_RepeatStmt;
class c_ForEachinStmt;
class c_AssignStmt;
class c_ForStmt;
class c_CatchStmt;
class c_Stack7;
class c_TryStmt;
class c_ThrowStmt;
class c_ExprStmt;
class c_Enumerator3;
class c_List8;
class c_Node13;
class c_HeadNode8;
class c_InvokeMemberExpr;
class c_Target;
class c_Map6;
class c_StringMap6;
class c_Node14;
class c_NodeEnumerator2;
class c_Reflector;
class c_MapValues;
class c_ValueEnumerator;
class c_Map7;
class c_StringMap7;
class c_Node15;
class c_Enumerator4;
class c_Stack8;
class c_Translator;
class c_CTranslator;
class c_CppTranslator;
class c_NodeEnumerator3;
class c_JavaTranslator;
class c_JsTranslator;
class c_Stream;
class c_FileStream;
class c_DataBuffer;
class c_AsTranslator;
class c_CsTranslator;
class c_List9;
class c_Node16;
class c_HeadNode9;
class c_Enumerator5;
class c_InvokeExpr;
class c_StmtExpr;
class c_MemberVarExpr;
class c_VarExpr;
class c_Map8;
class c_StringMap8;
class c_Node17;
class c_Map9;
class c_StringMap9;
class c_Node18;
class c_Map10;
class c_StringMap10;
class c_Node19;
class c_Stack9;
class c_Enumerator6;
class c_Stack10;
class c_Enumerator7;
class c_Enumerator8;
class c_TransCC : public Object{
	public:
	Array<String > m_args;
	String m_monkeydir;
	String m_opt_srcpath;
	bool m_opt_safe;
	bool m_opt_clean;
	bool m_opt_check;
	bool m_opt_update;
	bool m_opt_build;
	bool m_opt_run;
	String m_opt_cfgfile;
	String m_opt_output;
	String m_opt_config;
	String m_opt_target;
	String m_opt_modpath;
	String m_opt_builddir;
	String m_ANDROID_PATH;
	String m_ANDROID_NDK_PATH;
	String m_JDK_PATH;
	String m_ANT_PATH;
	String m_FLEX_PATH;
	String m_MINGW_PATH;
	String m_PSM_PATH;
	String m_MSBUILD_PATH;
	String m_HTML_PLAYER;
	String m_FLASH_PLAYER;
	c_StringMap3* m__builders;
	c_StringMap6* m__targets;
	c_Target* m_target;
	c_TransCC();
	c_TransCC* m_new();
	void p_ParseArgs();
	void p_LoadConfig();
	void p_EnumBuilders();
	void p_EnumTargets(String);
	String p_GetReleaseVersion();
	void p_Run(Array<String >);
	bool p_Execute(String,bool);
	void mark();
	String debug();
};
String dbg_type(c_TransCC**p){return "TransCC";}
String bb_os_ExtractDir(String);
String bb_transcc_StripQuotes(String);
int bb_transcc_Die(String);
class c_Type : public Object{
	public:
	c_ArrayType* m_arrayOf;
	c_Type();
	c_Type* m_new();
	static c_StringType* m_stringType;
	static c_IntType* m_intType;
	static c_FloatType* m_floatType;
	static c_BoolType* m_boolType;
	static c_VoidType* m_voidType;
	static c_IdentType* m_objectType;
	static c_IdentType* m_throwableType;
	c_ArrayType* p_ArrayOf();
	static c_ArrayType* m_emptyArrayType;
	static c_IdentType* m_nullObjectType;
	virtual String p_ToString();
	virtual int p_EqualsType(c_Type*);
	virtual c_Type* p_Semant();
	virtual int p_ExtendsType(c_Type*);
	virtual c_ClassDecl* p_GetClass();
	void mark();
	String debug();
};
String dbg_type(c_Type**p){return "Type";}
class c_StringType : public c_Type{
	public:
	c_StringType();
	c_StringType* m_new();
	int p_EqualsType(c_Type*);
	int p_ExtendsType(c_Type*);
	c_ClassDecl* p_GetClass();
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_StringType**p){return "StringType";}
class c_Decl : public Object{
	public:
	String m_errInfo;
	String m_ident;
	String m_munged;
	int m_attrs;
	c_ScopeDecl* m_scope;
	c_Decl();
	c_Decl* m_new();
	int p_IsSemanted();
	int p_IsPublic();
	c_ModuleDecl* p_ModuleScope();
	int p_IsProtected();
	c_ClassDecl* p_ClassScope();
	c_FuncDecl* p_FuncScope();
	int p_CheckAccess();
	int p_IsExtern();
	int p_IsAbstract();
	virtual String p_ToString();
	int p_IsSemanting();
	virtual int p_OnSemant()=0;
	c_AppDecl* p_AppScope();
	int p_Semant();
	int p_IsPrivate();
	int p_AssertAccess();
	virtual c_Decl* p_OnCopy()=0;
	c_Decl* p_Copy();
	int p_IsFinal();
	void mark();
	String debug();
};
String dbg_type(c_Decl**p){return "Decl";}
class c_ScopeDecl : public c_Decl{
	public:
	c_List3* m_decls;
	c_StringMap4* m_declsMap;
	c_List3* m_semanted;
	c_ScopeDecl();
	c_ScopeDecl* m_new();
	int p_InsertDecl(c_Decl*);
	virtual Object* p_GetDecl(String);
	Object* p_FindDecl(String);
	int p_InsertDecls(c_List3*);
	virtual c_FuncDecl* p_FindFuncDecl(String,Array<c_Expr* >,int);
	c_List3* p_Decls();
	c_Type* p_FindType(String,Array<c_Type* >);
	c_List4* p_MethodDecls(String);
	c_List3* p_Semanted();
	c_List4* p_SemantedMethods(String);
	virtual c_ValDecl* p_FindValDecl(String);
	c_Decl* p_OnCopy();
	int p_OnSemant();
	c_List4* p_SemantedFuncs(String);
	c_ModuleDecl* p_FindModuleDecl(String);
	c_List4* p_FuncDecls(String);
	c_ScopeDecl* p_FindScopeDecl(String);
	void mark();
	String debug();
};
String dbg_type(c_ScopeDecl**p){return "ScopeDecl";}
class c_ConfigScope : public c_ScopeDecl{
	public:
	c_StringMap* m_cdecls;
	c_StringMap2* m_vars;
	c_ConfigScope();
	c_ConfigScope* m_new();
	c_ValDecl* p_FindValDecl(String);
	void mark();
	String debug();
};
String dbg_type(c_ConfigScope**p){return "ConfigScope";}
extern String bb_config__errInfo;
extern c_ConfigScope* bb_config__cfgScope;
class c_ValDecl : public c_Decl{
	public:
	c_Type* m_type;
	c_Expr* m_init;
	c_ValDecl();
	c_ValDecl* m_new();
	String p_ToString();
	int p_OnSemant();
	c_Expr* p_CopyInit();
	void mark();
	String debug();
};
String dbg_type(c_ValDecl**p){return "ValDecl";}
class c_ConstDecl : public c_ValDecl{
	public:
	String m_value;
	c_ConstDecl();
	c_ConstDecl* m_new(String,int,c_Type*,c_Expr*);
	c_ConstDecl* m_new2();
	c_Decl* p_OnCopy();
	int p_OnSemant();
	void mark();
	String debug();
};
String dbg_type(c_ConstDecl**p){return "ConstDecl";}
class c_Map : public Object{
	public:
	c_Node* m_root;
	c_Map();
	c_Map* m_new();
	virtual int p_Compare(String,String)=0;
	c_Node* p_FindNode(String);
	c_ConstDecl* p_Get(String);
	int p_RotateLeft(c_Node*);
	int p_RotateRight(c_Node*);
	int p_InsertFixup(c_Node*);
	bool p_Set(String,c_ConstDecl*);
	bool p_Contains(String);
	void mark();
	String debug();
};
String dbg_type(c_Map**p){return "Map";}
class c_StringMap : public c_Map{
	public:
	c_StringMap();
	c_StringMap* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap**p){return "StringMap";}
class c_Node : public Object{
	public:
	String m_key;
	c_Node* m_right;
	c_Node* m_left;
	c_ConstDecl* m_value;
	int m_color;
	c_Node* m_parent;
	c_Node();
	c_Node* m_new(String,c_ConstDecl*,int,c_Node*);
	c_Node* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node**p){return "Node";}
class c_Expr : public Object{
	public:
	c_Type* m_exprType;
	c_Expr();
	c_Expr* m_new();
	virtual c_Expr* p_Semant();
	Array<c_Expr* > p_SemantArgs(Array<c_Expr* >);
	c_Expr* p_Cast(c_Type*,int);
	Array<c_Expr* > p_CastArgs(Array<c_Expr* >,c_FuncDecl*);
	virtual String p_ToString();
	virtual String p_Eval();
	virtual c_Expr* p_EvalConst();
	c_Expr* p_Semant2(c_Type*,int);
	virtual c_Expr* p_Copy();
	c_Expr* p_CopyExpr(c_Expr*);
	Array<c_Expr* > p_CopyArgs(Array<c_Expr* >);
	c_Type* p_BalanceTypes(c_Type*,c_Type*);
	virtual c_Expr* p_SemantSet(String,c_Expr*);
	virtual c_ScopeDecl* p_SemantScope();
	virtual c_Expr* p_SemantFunc(Array<c_Expr* >);
	virtual bool p_SideEffects();
	virtual String p_Trans();
	virtual String p_TransStmt();
	virtual String p_TransVar();
	void mark();
	String debug();
};
String dbg_type(c_Expr**p){return "Expr";}
class c_BoolType : public c_Type{
	public:
	c_BoolType();
	c_BoolType* m_new();
	int p_EqualsType(c_Type*);
	int p_ExtendsType(c_Type*);
	c_ClassDecl* p_GetClass();
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_BoolType**p){return "BoolType";}
class c_Map2 : public Object{
	public:
	c_Node2* m_root;
	c_Map2();
	c_Map2* m_new();
	virtual int p_Compare(String,String)=0;
	int p_RotateLeft2(c_Node2*);
	int p_RotateRight2(c_Node2*);
	int p_InsertFixup2(c_Node2*);
	bool p_Set2(String,String);
	c_Node2* p_FindNode(String);
	String p_Get(String);
	bool p_Contains(String);
	c_Node2* p_FirstNode();
	c_NodeEnumerator3* p_ObjectEnumerator();
	void mark();
	String debug();
};
String dbg_type(c_Map2**p){return "Map";}
class c_StringMap2 : public c_Map2{
	public:
	c_StringMap2();
	c_StringMap2* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap2**p){return "StringMap";}
class c_Node2 : public Object{
	public:
	String m_key;
	c_Node2* m_right;
	c_Node2* m_left;
	String m_value;
	int m_color;
	c_Node2* m_parent;
	c_Node2();
	c_Node2* m_new(String,String,int,c_Node2*);
	c_Node2* m_new2();
	c_Node2* p_NextNode();
	String p_Key();
	String p_Value();
	void mark();
	String debug();
};
String dbg_type(c_Node2**p){return "Node";}
int bb_config_SetConfigVar(String,String,c_Type*);
int bb_config_SetConfigVar2(String,String);
class c_Stack : public Object{
	public:
	Array<String > m_data;
	int m_length;
	c_Stack();
	c_Stack* m_new();
	c_Stack* m_new2(Array<String >);
	void p_Push(String);
	void p_Push2(Array<String >,int,int);
	void p_Push3(Array<String >,int);
	bool p_IsEmpty();
	Array<String > p_ToArray();
	static String m_NIL;
	void p_Length(int);
	int p_Length2();
	String p_Get2(int);
	String p_Pop();
	void p_Clear();
	void mark();
	String debug();
};
String dbg_type(c_Stack**p){return "Stack";}
class c_StringStack : public c_Stack{
	public:
	c_StringStack();
	c_StringStack* m_new(Array<String >);
	c_StringStack* m_new2();
	String p_Join(String);
	void mark();
	String debug();
};
String dbg_type(c_StringStack**p){return "StringStack";}
String bb_config_GetConfigVar(String);
String bb_transcc_ReplaceEnv(String);
class c_Builder : public Object{
	public:
	c_TransCC* m_tcc;
	String m_casedConfig;
	c_AppDecl* m_app;
	String m_transCode;
	String m_TEXT_FILES;
	String m_IMAGE_FILES;
	String m_SOUND_FILES;
	String m_MUSIC_FILES;
	String m_BINARY_FILES;
	String m_DATA_FILES;
	bool m_syncData;
	c_StringMap2* m_dataFiles;
	c_Builder();
	c_Builder* m_new(c_TransCC*);
	c_Builder* m_new2();
	virtual bool p_IsValid()=0;
	virtual void p_Begin()=0;
	virtual void p_MakeTarget()=0;
	void p_Make();
	bool p_Execute(String,bool);
	void p_CCopyFile(String,String);
	void p_CreateDataDir(String);
	void mark();
	String debug();
};
String dbg_type(c_Builder**p){return "Builder";}
class c_Map3 : public Object{
	public:
	c_Node3* m_root;
	c_Map3();
	c_Map3* m_new();
	virtual int p_Compare(String,String)=0;
	int p_RotateLeft3(c_Node3*);
	int p_RotateRight3(c_Node3*);
	int p_InsertFixup3(c_Node3*);
	bool p_Set3(String,c_Builder*);
	c_Node3* p_FirstNode();
	c_NodeEnumerator* p_ObjectEnumerator();
	c_Node3* p_FindNode(String);
	c_Builder* p_Get(String);
	void mark();
	String debug();
};
String dbg_type(c_Map3**p){return "Map";}
class c_StringMap3 : public c_Map3{
	public:
	c_StringMap3();
	c_StringMap3* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap3**p){return "StringMap";}
class c_AmigaBuilder : public c_Builder{
	public:
	c_AmigaBuilder();
	c_AmigaBuilder* m_new(c_TransCC*);
	c_AmigaBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Config();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_AmigaBuilder**p){return "AmigaBuilder";}
class c_Node3 : public Object{
	public:
	String m_key;
	c_Node3* m_right;
	c_Node3* m_left;
	c_Builder* m_value;
	int m_color;
	c_Node3* m_parent;
	c_Node3();
	c_Node3* m_new(String,c_Builder*,int,c_Node3*);
	c_Node3* m_new2();
	c_Node3* p_NextNode();
	c_Builder* p_Value();
	String p_Key();
	void mark();
	String debug();
};
String dbg_type(c_Node3**p){return "Node";}
class c_AndroidBuilder : public c_Builder{
	public:
	c_AndroidBuilder();
	c_AndroidBuilder* m_new(c_TransCC*);
	c_AndroidBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Config();
	bool p_CreateDirRecursive(String);
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_AndroidBuilder**p){return "AndroidBuilder";}
class c_AndroidNdkBuilder : public c_Builder{
	public:
	c_AndroidNdkBuilder();
	c_AndroidNdkBuilder* m_new(c_TransCC*);
	c_AndroidNdkBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Config();
	bool p_CreateDirRecursive(String);
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_AndroidNdkBuilder**p){return "AndroidNdkBuilder";}
class c_GlfwBuilder : public c_Builder{
	public:
	c_GlfwBuilder();
	c_GlfwBuilder* m_new(c_TransCC*);
	c_GlfwBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Config();
	void p_MakeGcc();
	void p_MakeVc2010();
	void p_MakeMsvc();
	void p_MakeXcode();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_GlfwBuilder**p){return "GlfwBuilder";}
class c_Html5Builder : public c_Builder{
	public:
	c_Html5Builder();
	c_Html5Builder* m_new(c_TransCC*);
	c_Html5Builder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_MetaData();
	String p_Config();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_Html5Builder**p){return "Html5Builder";}
class c_IosBuilder : public c_Builder{
	public:
	c_StringMap2* m__buildFiles;
	int m__nextFileId;
	c_StringMap2* m__fileRefs;
	c_IosBuilder();
	c_IosBuilder* m_new(c_TransCC*);
	c_IosBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Config();
	String p_FileId(String,c_StringMap2*);
	void p_AddBuildFile(String);
	int p_FindEol(String,String,int);
	String p_BuildFiles();
	String p_FileRefs();
	String p_FrameworksBuildPhase();
	String p_FrameworksGroup();
	String p_LibsGroup();
	String p_MungProj(String);
	void p_MungProj2();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_IosBuilder**p){return "IosBuilder";}
class c_FlashBuilder : public c_Builder{
	public:
	c_FlashBuilder();
	c_FlashBuilder* m_new(c_TransCC*);
	c_FlashBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Assets();
	String p_Config();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_FlashBuilder**p){return "FlashBuilder";}
class c_PsmBuilder : public c_Builder{
	public:
	c_PsmBuilder();
	c_PsmBuilder* m_new(c_TransCC*);
	c_PsmBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Content();
	String p_Config();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_PsmBuilder**p){return "PsmBuilder";}
class c_StdcppBuilder : public c_Builder{
	public:
	c_StdcppBuilder();
	c_StdcppBuilder* m_new(c_TransCC*);
	c_StdcppBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Config();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_StdcppBuilder**p){return "StdcppBuilder";}
class c_WinrtBuilder : public c_Builder{
	public:
	c_WinrtBuilder();
	c_WinrtBuilder* m_new(c_TransCC*);
	c_WinrtBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Content2(bool);
	String p_Config();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_WinrtBuilder**p){return "WinrtBuilder";}
class c_XnaBuilder : public c_Builder{
	public:
	c_XnaBuilder();
	c_XnaBuilder* m_new(c_TransCC*);
	c_XnaBuilder* m_new2();
	bool p_IsValid();
	void p_Begin();
	String p_Content();
	String p_Config();
	void p_MakeTarget();
	void mark();
	String debug();
};
String dbg_type(c_XnaBuilder**p){return "XnaBuilder";}
c_StringMap3* bb_builders_Builders(c_TransCC*);
class c_NodeEnumerator : public Object{
	public:
	c_Node3* m_node;
	c_NodeEnumerator();
	c_NodeEnumerator* m_new(c_Node3*);
	c_NodeEnumerator* m_new2();
	bool p_HasNext();
	c_Node3* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_NodeEnumerator**p){return "NodeEnumerator";}
class c_List : public Object{
	public:
	c_Node4* m__head;
	c_List();
	c_List* m_new();
	c_Node4* p_AddLast(String);
	c_List* m_new2(Array<String >);
	bool p_IsEmpty();
	String p_RemoveFirst();
	virtual bool p_Equals(String,String);
	c_Node4* p_Find(String,c_Node4*);
	c_Node4* p_Find2(String);
	void p_RemoveFirst2(String);
	int p_Count();
	c_Enumerator* p_ObjectEnumerator();
	Array<String > p_ToArray();
	String p_RemoveLast();
	c_Node4* p_FindLast(String,c_Node4*);
	c_Node4* p_FindLast2(String);
	void p_RemoveLast2(String);
	void mark();
	String debug();
};
String dbg_type(c_List**p){return "List";}
class c_StringList : public c_List{
	public:
	c_StringList();
	c_StringList* m_new(Array<String >);
	c_StringList* m_new2();
	bool p_Equals(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringList**p){return "StringList";}
class c_Node4 : public Object{
	public:
	c_Node4* m__succ;
	c_Node4* m__pred;
	String m__data;
	c_Node4();
	c_Node4* m_new(c_Node4*,c_Node4*,String);
	c_Node4* m_new2();
	int p_Remove();
	void mark();
	String debug();
};
String dbg_type(c_Node4**p){return "Node";}
class c_HeadNode : public c_Node4{
	public:
	c_HeadNode();
	c_HeadNode* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode**p){return "HeadNode";}
class c_Enumerator : public Object{
	public:
	c_List* m__list;
	c_Node4* m__curr;
	c_Enumerator();
	c_Enumerator* m_new(c_List*);
	c_Enumerator* m_new2();
	bool p_HasNext();
	String p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator**p){return "Enumerator";}
Array<String > bb_os_LoadDir(String,bool,bool);
class c_Stack2 : public Object{
	public:
	Array<c_ConfigScope* > m_data;
	int m_length;
	c_Stack2();
	c_Stack2* m_new();
	c_Stack2* m_new2(Array<c_ConfigScope* >);
	void p_Push4(c_ConfigScope*);
	void p_Push5(Array<c_ConfigScope* >,int,int);
	void p_Push6(Array<c_ConfigScope* >,int);
	static c_ConfigScope* m_NIL;
	c_ConfigScope* p_Pop();
	void mark();
	String debug();
};
String dbg_type(c_Stack2**p){return "Stack";}
extern c_Stack2* bb_config__cfgScopeStack;
void bb_config_PushConfigScope();
class c_ModuleDecl : public c_ScopeDecl{
	public:
	String m_rmodpath;
	String m_filepath;
	String m_modpath;
	c_StringMap5* m_imported;
	c_StringSet* m_friends;
	c_StringMap5* m_pubImported;
	c_ModuleDecl();
	c_ModuleDecl* m_new(String,int,String,String,String,c_AppDecl*);
	c_ModuleDecl* m_new2();
	int p_IsStrict();
	int p_ImportModule(String,int);
	int p_SemantAll();
	String p_ToString();
	Object* p_GetDecl2(String);
	Object* p_GetDecl(String);
	int p_OnSemant();
	void mark();
	String debug();
};
String dbg_type(c_ModuleDecl**p){return "ModuleDecl";}
c_ScopeDecl* bb_config_GetConfigScope();
extern c_ScopeDecl* bb_decl__env;
class c_List2 : public Object{
	public:
	c_Node5* m__head;
	c_List2();
	c_List2* m_new();
	c_Node5* p_AddLast2(c_ScopeDecl*);
	c_List2* m_new2(Array<c_ScopeDecl* >);
	bool p_IsEmpty();
	c_ScopeDecl* p_RemoveLast();
	bool p_Equals2(c_ScopeDecl*,c_ScopeDecl*);
	c_Node5* p_FindLast3(c_ScopeDecl*,c_Node5*);
	c_Node5* p_FindLast4(c_ScopeDecl*);
	void p_RemoveLast3(c_ScopeDecl*);
	void mark();
	String debug();
};
String dbg_type(c_List2**p){return "List";}
class c_Node5 : public Object{
	public:
	c_Node5* m__succ;
	c_Node5* m__pred;
	c_ScopeDecl* m__data;
	c_Node5();
	c_Node5* m_new(c_Node5*,c_Node5*,c_ScopeDecl*);
	c_Node5* m_new2();
	int p_Remove();
	void mark();
	String debug();
};
String dbg_type(c_Node5**p){return "Node";}
class c_HeadNode2 : public c_Node5{
	public:
	c_HeadNode2();
	c_HeadNode2* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode2**p){return "HeadNode";}
extern c_List2* bb_decl__envStack;
int bb_decl_PushEnv(c_ScopeDecl*);
class c_Toker : public Object{
	public:
	String m__path;
	int m__line;
	String m__source;
	int m__length;
	String m__toke;
	int m__tokeType;
	int m__tokePos;
	c_Toker();
	static c_StringSet* m__keywords;
	static c_StringSet* m__symbols;
	int p__init();
	c_Toker* m_new(String,String);
	c_Toker* m_new2(c_Toker*);
	c_Toker* m_new3();
	int p_TCHR(int);
	String p_TSTR(int);
	String p_NextToke();
	String p_Toke();
	int p_TokeType();
	String p_Path();
	int p_Line();
	int p_SkipSpace();
	void mark();
	String debug();
};
String dbg_type(c_Toker**p){return "Toker";}
class c_Set : public Object{
	public:
	c_Map4* m_map;
	c_Set();
	c_Set* m_new(c_Map4*);
	c_Set* m_new2();
	int p_Insert(String);
	bool p_Contains(String);
	void mark();
	String debug();
};
String dbg_type(c_Set**p){return "Set";}
class c_StringSet : public c_Set{
	public:
	c_StringSet();
	c_StringSet* m_new();
	void mark();
	String debug();
};
String dbg_type(c_StringSet**p){return "StringSet";}
class c_Map4 : public Object{
	public:
	c_Node6* m_root;
	c_Map4();
	c_Map4* m_new();
	virtual int p_Compare(String,String)=0;
	int p_RotateLeft4(c_Node6*);
	int p_RotateRight4(c_Node6*);
	int p_InsertFixup4(c_Node6*);
	bool p_Set4(String,Object*);
	bool p_Insert2(String,Object*);
	c_Node6* p_FindNode(String);
	bool p_Contains(String);
	Object* p_Get(String);
	void mark();
	String debug();
};
String dbg_type(c_Map4**p){return "Map";}
class c_StringMap4 : public c_Map4{
	public:
	c_StringMap4();
	c_StringMap4* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap4**p){return "StringMap";}
class c_Node6 : public Object{
	public:
	String m_key;
	c_Node6* m_right;
	c_Node6* m_left;
	Object* m_value;
	int m_color;
	c_Node6* m_parent;
	c_Node6();
	c_Node6* m_new(String,Object*,int,c_Node6*);
	c_Node6* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node6**p){return "Node";}
int bb_config_IsSpace(int);
int bb_config_IsAlpha(int);
int bb_config_IsDigit(int);
int bb_config_IsBinDigit(int);
int bb_config_IsHexDigit(int);
extern String bb_parser_FILE_EXT;
extern String bb_config_ENV_MODPATH;
String bb_os_StripExt(String);
String bb_os_StripDir(String);
int bb_config_Err(String);
String bb_os_ExtractExt(String);
class c_AppDecl : public c_ScopeDecl{
	public:
	c_StringMap5* m_imported;
	c_ModuleDecl* m_mainModule;
	c_StringList* m_fileImports;
	c_List3* m_allSemantedDecls;
	c_List8* m_semantedGlobals;
	c_List6* m_semantedClasses;
	c_FuncDecl* m_mainFunc;
	c_AppDecl();
	int p_InsertModule(c_ModuleDecl*);
	c_AppDecl* m_new();
	int p_FinalizeClasses();
	int p_OnSemant();
	void mark();
	String debug();
};
String dbg_type(c_AppDecl**p){return "AppDecl";}
class c_Map5 : public Object{
	public:
	c_Node7* m_root;
	c_Map5();
	c_Map5* m_new();
	virtual int p_Compare(String,String)=0;
	c_Node7* p_FindNode(String);
	c_ModuleDecl* p_Get(String);
	bool p_Contains(String);
	int p_RotateLeft5(c_Node7*);
	int p_RotateRight5(c_Node7*);
	int p_InsertFixup5(c_Node7*);
	bool p_Set5(String,c_ModuleDecl*);
	bool p_Insert3(String,c_ModuleDecl*);
	c_MapValues* p_Values();
	c_Node7* p_FirstNode();
	void mark();
	String debug();
};
String dbg_type(c_Map5**p){return "Map";}
class c_StringMap5 : public c_Map5{
	public:
	c_StringMap5();
	c_StringMap5* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap5**p){return "StringMap";}
class c_Node7 : public Object{
	public:
	String m_key;
	c_Node7* m_right;
	c_Node7* m_left;
	c_ModuleDecl* m_value;
	int m_color;
	c_Node7* m_parent;
	c_Node7();
	c_Node7* m_new(String,c_ModuleDecl*,int,c_Node7*);
	c_Node7* m_new2();
	c_Node7* p_NextNode();
	void mark();
	String debug();
};
String dbg_type(c_Node7**p){return "Node";}
class c_Parser : public Object{
	public:
	String m__toke;
	c_Toker* m__toker;
	c_AppDecl* m__app;
	c_ModuleDecl* m__module;
	int m__defattrs;
	int m__tokeType;
	c_BlockDecl* m__block;
	c_List7* m__blockStack;
	c_StringList* m__errStack;
	int m__selTmpId;
	c_Parser();
	int p_SetErr();
	int p_CParse(String);
	int p_SkipEols();
	String p_NextToke();
	c_Parser* m_new(c_Toker*,c_AppDecl*,c_ModuleDecl*,int);
	c_Parser* m_new2();
	String p_ParseStringLit();
	String p_RealPath(String);
	int p_ImportFile(String);
	String p_ParseIdent();
	String p_ParseModPath();
	int p_ImportModule(String,int);
	int p_Parse(String);
	c_Type* p_CParsePrimitiveType();
	c_IdentType* p_ParseIdentType();
	c_Type* p_ParseType();
	c_Type* p_ParseDeclType();
	c_ArrayExpr* p_ParseArrayExpr();
	int p_AtEos();
	Array<c_Expr* > p_ParseArgs2(int);
	c_IdentType* p_CParseIdentType(bool);
	c_Expr* p_ParsePrimaryExpr(int);
	c_Expr* p_ParseUnaryExpr();
	c_Expr* p_ParseMulDivExpr();
	c_Expr* p_ParseAddSubExpr();
	c_Expr* p_ParseBitandExpr();
	c_Expr* p_ParseBitorExpr();
	c_Expr* p_ParseCompareExpr();
	c_Expr* p_ParseAndExpr();
	c_Expr* p_ParseOrExpr();
	c_Expr* p_ParseExpr();
	c_Decl* p_ParseDecl(String,int);
	c_List3* p_ParseDecls(String,int);
	int p_PushBlock(c_BlockDecl*);
	int p_ParseDeclStmts();
	int p_ParseReturnStmt();
	int p_ParseExitStmt();
	int p_ParseContinueStmt();
	int p_PopBlock();
	int p_ParseIfStmt(String);
	int p_ParseWhileStmt();
	int p_PushErr();
	int p_PopErr();
	int p_ParseRepeatStmt();
	int p_ParseForStmt();
	int p_ParseSelectStmt();
	int p_ParseTryStmt();
	int p_ParseThrowStmt();
	int p_ParseStmt();
	c_FuncDecl* p_ParseFuncDecl(int);
	c_ClassDecl* p_ParseClassDecl(int);
	int p_ParseMain();
	void mark();
	String debug();
};
String dbg_type(c_Parser**p){return "Parser";}
int bb_config_InternalErr(String);
int bb_config_StringToInt(String,int);
String bb_config_Dequote(String,String);
String bb_config_EvalConfigTags(String);
extern int bb_config_ENV_SAFEMODE;
class c_NumericType : public c_Type{
	public:
	c_NumericType();
	c_NumericType* m_new();
	void mark();
	String debug();
};
String dbg_type(c_NumericType**p){return "NumericType";}
class c_IntType : public c_NumericType{
	public:
	c_IntType();
	c_IntType* m_new();
	int p_EqualsType(c_Type*);
	int p_ExtendsType(c_Type*);
	c_ClassDecl* p_GetClass();
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_IntType**p){return "IntType";}
class c_FloatType : public c_NumericType{
	public:
	c_FloatType();
	c_FloatType* m_new();
	int p_EqualsType(c_Type*);
	int p_ExtendsType(c_Type*);
	c_ClassDecl* p_GetClass();
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_FloatType**p){return "FloatType";}
class c_AliasDecl : public c_Decl{
	public:
	Object* m_decl;
	c_AliasDecl();
	c_AliasDecl* m_new(String,int,Object*);
	c_AliasDecl* m_new2();
	c_Decl* p_OnCopy();
	int p_OnSemant();
	void mark();
	String debug();
};
String dbg_type(c_AliasDecl**p){return "AliasDecl";}
class c_List3 : public Object{
	public:
	c_Node8* m__head;
	c_List3();
	c_List3* m_new();
	c_Node8* p_AddLast3(c_Decl*);
	c_List3* m_new2(Array<c_Decl* >);
	c_Enumerator2* p_ObjectEnumerator();
	int p_Count();
	void mark();
	String debug();
};
String dbg_type(c_List3**p){return "List";}
class c_Node8 : public Object{
	public:
	c_Node8* m__succ;
	c_Node8* m__pred;
	c_Decl* m__data;
	c_Node8();
	c_Node8* m_new(c_Node8*,c_Node8*,c_Decl*);
	c_Node8* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node8**p){return "Node";}
class c_HeadNode3 : public c_Node8{
	public:
	c_HeadNode3();
	c_HeadNode3* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode3**p){return "HeadNode";}
class c_BlockDecl : public c_ScopeDecl{
	public:
	c_List5* m_stmts;
	c_BlockDecl();
	c_BlockDecl* m_new(c_ScopeDecl*);
	c_BlockDecl* m_new2();
	int p_AddStmt(c_Stmt*);
	c_Decl* p_OnCopy();
	int p_OnSemant();
	c_BlockDecl* p_CopyBlock(c_ScopeDecl*);
	void mark();
	String debug();
};
String dbg_type(c_BlockDecl**p){return "BlockDecl";}
class c_FuncDecl : public c_BlockDecl{
	public:
	c_Type* m_retType;
	Array<c_ArgDecl* > m_argDecls;
	c_FuncDecl* m_overrides;
	c_FuncDecl();
	bool p_IsCtor();
	c_FuncDecl* m_new(String,int,c_Type*,Array<c_ArgDecl* >);
	c_FuncDecl* m_new2();
	bool p_IsMethod();
	String p_ToString();
	bool p_EqualsArgs(c_FuncDecl*);
	bool p_EqualsFunc(c_FuncDecl*);
	c_Decl* p_OnCopy();
	int p_OnSemant();
	bool p_IsStatic();
	bool p_IsProperty();
	bool p_IsVirtual();
	void mark();
	String debug();
};
String dbg_type(c_FuncDecl**p){return "FuncDecl";}
class c_List4 : public Object{
	public:
	c_Node9* m__head;
	c_List4();
	c_List4* m_new();
	c_Node9* p_AddLast4(c_FuncDecl*);
	c_List4* m_new2(Array<c_FuncDecl* >);
	c_Enumerator3* p_ObjectEnumerator();
	void mark();
	String debug();
};
String dbg_type(c_List4**p){return "List";}
class c_FuncDeclList : public c_List4{
	public:
	c_FuncDeclList();
	c_FuncDeclList* m_new();
	void mark();
	String debug();
};
String dbg_type(c_FuncDeclList**p){return "FuncDeclList";}
class c_Node9 : public Object{
	public:
	c_Node9* m__succ;
	c_Node9* m__pred;
	c_FuncDecl* m__data;
	c_Node9();
	c_Node9* m_new(c_Node9*,c_Node9*,c_FuncDecl*);
	c_Node9* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node9**p){return "Node";}
class c_HeadNode4 : public c_Node9{
	public:
	c_HeadNode4();
	c_HeadNode4* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode4**p){return "HeadNode";}
class c_ClassDecl : public c_ScopeDecl{
	public:
	c_ClassDecl* m_superClass;
	Array<String > m_args;
	c_IdentType* m_superTy;
	Array<c_IdentType* > m_impltys;
	c_ObjectType* m_objectType;
	c_List6* m_instances;
	c_ClassDecl* m_instanceof;
	Array<c_Type* > m_instArgs;
	Array<c_ClassDecl* > m_implmentsAll;
	Array<c_ClassDecl* > m_implments;
	c_ClassDecl();
	c_ClassDecl* m_new(String,int,Array<String >,c_IdentType*,Array<c_IdentType* >);
	c_ClassDecl* m_new2();
	int p_IsInterface();
	String p_ToString();
	c_FuncDecl* p_FindFuncDecl2(String,Array<c_Expr* >,int);
	c_FuncDecl* p_FindFuncDecl(String,Array<c_Expr* >,int);
	int p_ExtendsObject();
	c_ClassDecl* p_GenClassInstance(Array<c_Type* >);
	int p_IsFinalized();
	int p_UpdateLiveMethods();
	int p_IsInstanced();
	int p_FinalizeClass();
	c_Decl* p_OnCopy();
	Object* p_GetDecl2(String);
	Object* p_GetDecl(String);
	static c_ClassDecl* m_nullObjectClass;
	int p_IsThrowable();
	int p_OnSemant();
	int p_ExtendsClass(c_ClassDecl*);
	void mark();
	String debug();
};
String dbg_type(c_ClassDecl**p){return "ClassDecl";}
int bb_decl_PopEnv();
class c_VoidType : public c_Type{
	public:
	c_VoidType();
	c_VoidType* m_new();
	int p_EqualsType(c_Type*);
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_VoidType**p){return "VoidType";}
class c_IdentType : public c_Type{
	public:
	String m_ident;
	Array<c_Type* > m_args;
	c_IdentType();
	c_IdentType* m_new(String,Array<c_Type* >);
	c_IdentType* m_new2();
	c_Type* p_Semant();
	c_ClassDecl* p_SemantClass();
	int p_EqualsType(c_Type*);
	int p_ExtendsType(c_Type*);
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_IdentType**p){return "IdentType";}
class c_Stack3 : public Object{
	public:
	Array<c_Type* > m_data;
	int m_length;
	c_Stack3();
	c_Stack3* m_new();
	c_Stack3* m_new2(Array<c_Type* >);
	void p_Push7(c_Type*);
	void p_Push8(Array<c_Type* >,int,int);
	void p_Push9(Array<c_Type* >,int);
	Array<c_Type* > p_ToArray();
	void mark();
	String debug();
};
String dbg_type(c_Stack3**p){return "Stack";}
class c_ArrayType : public c_Type{
	public:
	c_Type* m_elemType;
	c_ArrayType();
	c_ArrayType* m_new(c_Type*);
	c_ArrayType* m_new2();
	int p_EqualsType(c_Type*);
	int p_ExtendsType(c_Type*);
	c_Type* p_Semant();
	c_ClassDecl* p_GetClass();
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_ArrayType**p){return "ArrayType";}
class c_UnaryExpr : public c_Expr{
	public:
	String m_op;
	c_Expr* m_expr;
	c_UnaryExpr();
	c_UnaryExpr* m_new(String,c_Expr*);
	c_UnaryExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Eval();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_UnaryExpr**p){return "UnaryExpr";}
class c_ArrayExpr : public c_Expr{
	public:
	Array<c_Expr* > m_exprs;
	c_ArrayExpr();
	c_ArrayExpr* m_new(Array<c_Expr* >);
	c_ArrayExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ArrayExpr**p){return "ArrayExpr";}
class c_Stack4 : public Object{
	public:
	Array<c_Expr* > m_data;
	int m_length;
	c_Stack4();
	c_Stack4* m_new();
	c_Stack4* m_new2(Array<c_Expr* >);
	void p_Push10(c_Expr*);
	void p_Push11(Array<c_Expr* >,int,int);
	void p_Push12(Array<c_Expr* >,int);
	Array<c_Expr* > p_ToArray();
	void mark();
	String debug();
};
String dbg_type(c_Stack4**p){return "Stack";}
class c_ConstExpr : public c_Expr{
	public:
	c_Type* m_ty;
	String m_value;
	c_ConstExpr();
	c_ConstExpr* m_new(c_Type*,String);
	c_ConstExpr* m_new2();
	c_Expr* p_Semant();
	c_Expr* p_Copy();
	String p_ToString();
	String p_Eval();
	c_Expr* p_EvalConst();
	bool p_SideEffects();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ConstExpr**p){return "ConstExpr";}
class c_ScopeExpr : public c_Expr{
	public:
	c_ScopeDecl* m_scope;
	c_ScopeExpr();
	c_ScopeExpr* m_new(c_ScopeDecl*);
	c_ScopeExpr* m_new2();
	c_Expr* p_Copy();
	String p_ToString();
	c_Expr* p_Semant();
	c_ScopeDecl* p_SemantScope();
	void mark();
	String debug();
};
String dbg_type(c_ScopeExpr**p){return "ScopeExpr";}
class c_NewArrayExpr : public c_Expr{
	public:
	c_Type* m_ty;
	c_Expr* m_expr;
	c_NewArrayExpr();
	c_NewArrayExpr* m_new(c_Type*,c_Expr*);
	c_NewArrayExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_NewArrayExpr**p){return "NewArrayExpr";}
class c_NewObjectExpr : public c_Expr{
	public:
	c_Type* m_ty;
	Array<c_Expr* > m_args;
	c_ClassDecl* m_classDecl;
	c_FuncDecl* m_ctor;
	c_NewObjectExpr();
	c_NewObjectExpr* m_new(c_Type*,Array<c_Expr* >);
	c_NewObjectExpr* m_new2();
	c_Expr* p_Semant();
	c_Expr* p_Copy();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_NewObjectExpr**p){return "NewObjectExpr";}
class c_CastExpr : public c_Expr{
	public:
	c_Type* m_ty;
	c_Expr* m_expr;
	int m_flags;
	c_CastExpr();
	c_CastExpr* m_new(c_Type*,c_Expr*,int);
	c_CastExpr* m_new2();
	c_Expr* p_Semant();
	c_Expr* p_Copy();
	String p_Eval();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_CastExpr**p){return "CastExpr";}
class c_IdentExpr : public c_Expr{
	public:
	String m_ident;
	c_Expr* m_expr;
	c_ScopeDecl* m_scope;
	bool m_static;
	c_IdentExpr();
	c_IdentExpr* m_new(String,c_Expr*);
	c_IdentExpr* m_new2();
	c_Expr* p_Copy();
	String p_ToString();
	int p__Semant();
	int p_IdentErr();
	c_Expr* p_SemantSet(String,c_Expr*);
	c_Expr* p_Semant();
	c_ScopeDecl* p_SemantScope();
	c_Expr* p_SemantFunc(Array<c_Expr* >);
	void mark();
	String debug();
};
String dbg_type(c_IdentExpr**p){return "IdentExpr";}
class c_SelfExpr : public c_Expr{
	public:
	c_SelfExpr();
	c_SelfExpr* m_new();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	bool p_SideEffects();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_SelfExpr**p){return "SelfExpr";}
class c_Stmt : public Object{
	public:
	String m_errInfo;
	c_Stmt();
	c_Stmt* m_new();
	virtual c_Stmt* p_OnCopy2(c_ScopeDecl*)=0;
	c_Stmt* p_Copy2(c_ScopeDecl*);
	virtual int p_OnSemant()=0;
	int p_Semant();
	virtual String p_Trans()=0;
	void mark();
	String debug();
};
String dbg_type(c_Stmt**p){return "Stmt";}
class c_List5 : public Object{
	public:
	c_Node10* m__head;
	c_List5();
	c_List5* m_new();
	c_Node10* p_AddLast5(c_Stmt*);
	c_List5* m_new2(Array<c_Stmt* >);
	bool p_IsEmpty();
	c_Enumerator5* p_ObjectEnumerator();
	c_Node10* p_AddFirst(c_Stmt*);
	void mark();
	String debug();
};
String dbg_type(c_List5**p){return "List";}
class c_Node10 : public Object{
	public:
	c_Node10* m__succ;
	c_Node10* m__pred;
	c_Stmt* m__data;
	c_Node10();
	c_Node10* m_new(c_Node10*,c_Node10*,c_Stmt*);
	c_Node10* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node10**p){return "Node";}
class c_HeadNode5 : public c_Node10{
	public:
	c_HeadNode5();
	c_HeadNode5* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode5**p){return "HeadNode";}
class c_InvokeSuperExpr : public c_Expr{
	public:
	String m_ident;
	Array<c_Expr* > m_args;
	c_FuncDecl* m_funcDecl;
	c_InvokeSuperExpr();
	c_InvokeSuperExpr* m_new(String,Array<c_Expr* >);
	c_InvokeSuperExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_InvokeSuperExpr**p){return "InvokeSuperExpr";}
class c_IdentTypeExpr : public c_Expr{
	public:
	c_ClassDecl* m_cdecl;
	c_IdentTypeExpr();
	c_IdentTypeExpr* m_new(c_Type*);
	c_IdentTypeExpr* m_new2();
	c_Expr* p_Copy();
	int p__Semant();
	c_Expr* p_Semant();
	c_ScopeDecl* p_SemantScope();
	c_Expr* p_SemantFunc(Array<c_Expr* >);
	void mark();
	String debug();
};
String dbg_type(c_IdentTypeExpr**p){return "IdentTypeExpr";}
class c_FuncCallExpr : public c_Expr{
	public:
	c_Expr* m_expr;
	Array<c_Expr* > m_args;
	c_FuncCallExpr();
	c_FuncCallExpr* m_new(c_Expr*,Array<c_Expr* >);
	c_FuncCallExpr* m_new2();
	c_Expr* p_Copy();
	String p_ToString();
	c_Expr* p_Semant();
	void mark();
	String debug();
};
String dbg_type(c_FuncCallExpr**p){return "FuncCallExpr";}
class c_SliceExpr : public c_Expr{
	public:
	c_Expr* m_expr;
	c_Expr* m_from;
	c_Expr* m_term;
	c_SliceExpr();
	c_SliceExpr* m_new(c_Expr*,c_Expr*,c_Expr*);
	c_SliceExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Eval();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_SliceExpr**p){return "SliceExpr";}
class c_IndexExpr : public c_Expr{
	public:
	c_Expr* m_expr;
	c_Expr* m_index;
	c_IndexExpr();
	c_IndexExpr* m_new(c_Expr*,c_Expr*);
	c_IndexExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Eval();
	c_Expr* p_SemantSet(String,c_Expr*);
	bool p_SideEffects();
	String p_Trans();
	String p_TransVar();
	void mark();
	String debug();
};
String dbg_type(c_IndexExpr**p){return "IndexExpr";}
class c_BinaryExpr : public c_Expr{
	public:
	String m_op;
	c_Expr* m_lhs;
	c_Expr* m_rhs;
	c_BinaryExpr();
	c_BinaryExpr* m_new(String,c_Expr*,c_Expr*);
	c_BinaryExpr* m_new2();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_BinaryExpr**p){return "BinaryExpr";}
class c_BinaryMathExpr : public c_BinaryExpr{
	public:
	c_BinaryMathExpr();
	c_BinaryMathExpr* m_new(String,c_Expr*,c_Expr*);
	c_BinaryMathExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Eval();
	void mark();
	String debug();
};
String dbg_type(c_BinaryMathExpr**p){return "BinaryMathExpr";}
class c_BinaryCompareExpr : public c_BinaryExpr{
	public:
	c_Type* m_ty;
	c_BinaryCompareExpr();
	c_BinaryCompareExpr* m_new(String,c_Expr*,c_Expr*);
	c_BinaryCompareExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Eval();
	void mark();
	String debug();
};
String dbg_type(c_BinaryCompareExpr**p){return "BinaryCompareExpr";}
class c_BinaryLogicExpr : public c_BinaryExpr{
	public:
	c_BinaryLogicExpr();
	c_BinaryLogicExpr* m_new(String,c_Expr*,c_Expr*);
	c_BinaryLogicExpr* m_new2();
	c_Expr* p_Copy();
	c_Expr* p_Semant();
	String p_Eval();
	void mark();
	String debug();
};
String dbg_type(c_BinaryLogicExpr**p){return "BinaryLogicExpr";}
class c_VarDecl : public c_ValDecl{
	public:
	c_VarDecl();
	c_VarDecl* m_new();
	void mark();
	String debug();
};
String dbg_type(c_VarDecl**p){return "VarDecl";}
class c_GlobalDecl : public c_VarDecl{
	public:
	c_GlobalDecl();
	c_GlobalDecl* m_new(String,int,c_Type*,c_Expr*);
	c_GlobalDecl* m_new2();
	String p_ToString();
	c_Decl* p_OnCopy();
	void mark();
	String debug();
};
String dbg_type(c_GlobalDecl**p){return "GlobalDecl";}
class c_FieldDecl : public c_VarDecl{
	public:
	c_FieldDecl();
	c_FieldDecl* m_new(String,int,c_Type*,c_Expr*);
	c_FieldDecl* m_new2();
	String p_ToString();
	c_Decl* p_OnCopy();
	void mark();
	String debug();
};
String dbg_type(c_FieldDecl**p){return "FieldDecl";}
class c_LocalDecl : public c_VarDecl{
	public:
	c_LocalDecl();
	c_LocalDecl* m_new(String,int,c_Type*,c_Expr*);
	c_LocalDecl* m_new2();
	String p_ToString();
	c_Decl* p_OnCopy();
	void mark();
	String debug();
};
String dbg_type(c_LocalDecl**p){return "LocalDecl";}
class c_Enumerator2 : public Object{
	public:
	c_List3* m__list;
	c_Node8* m__curr;
	c_Enumerator2();
	c_Enumerator2* m_new(c_List3*);
	c_Enumerator2* m_new2();
	bool p_HasNext();
	c_Decl* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator2**p){return "Enumerator";}
class c_Stack5 : public Object{
	public:
	Array<c_IdentType* > m_data;
	int m_length;
	c_Stack5();
	c_Stack5* m_new();
	c_Stack5* m_new2(Array<c_IdentType* >);
	void p_Push13(c_IdentType*);
	void p_Push14(Array<c_IdentType* >,int,int);
	void p_Push15(Array<c_IdentType* >,int);
	Array<c_IdentType* > p_ToArray();
	void mark();
	String debug();
};
String dbg_type(c_Stack5**p){return "Stack";}
class c_ObjectType : public c_Type{
	public:
	c_ClassDecl* m_classDecl;
	c_ObjectType();
	c_ObjectType* m_new(c_ClassDecl*);
	c_ObjectType* m_new2();
	int p_EqualsType(c_Type*);
	c_ClassDecl* p_GetClass();
	int p_ExtendsType(c_Type*);
	String p_ToString();
	void mark();
	String debug();
};
String dbg_type(c_ObjectType**p){return "ObjectType";}
class c_List6 : public Object{
	public:
	c_Node11* m__head;
	c_List6();
	c_List6* m_new();
	c_Node11* p_AddLast6(c_ClassDecl*);
	c_List6* m_new2(Array<c_ClassDecl* >);
	c_Enumerator4* p_ObjectEnumerator();
	void mark();
	String debug();
};
String dbg_type(c_List6**p){return "List";}
class c_Node11 : public Object{
	public:
	c_Node11* m__succ;
	c_Node11* m__pred;
	c_ClassDecl* m__data;
	c_Node11();
	c_Node11* m_new(c_Node11*,c_Node11*,c_ClassDecl*);
	c_Node11* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node11**p){return "Node";}
class c_HeadNode6 : public c_Node11{
	public:
	c_HeadNode6();
	c_HeadNode6* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode6**p){return "HeadNode";}
class c_ArgDecl : public c_LocalDecl{
	public:
	c_ArgDecl();
	c_ArgDecl* m_new(String,int,c_Type*,c_Expr*);
	c_ArgDecl* m_new2();
	String p_ToString();
	c_Decl* p_OnCopy();
	void mark();
	String debug();
};
String dbg_type(c_ArgDecl**p){return "ArgDecl";}
class c_Stack6 : public Object{
	public:
	Array<c_ArgDecl* > m_data;
	int m_length;
	c_Stack6();
	c_Stack6* m_new();
	c_Stack6* m_new2(Array<c_ArgDecl* >);
	void p_Push16(c_ArgDecl*);
	void p_Push17(Array<c_ArgDecl* >,int,int);
	void p_Push18(Array<c_ArgDecl* >,int);
	Array<c_ArgDecl* > p_ToArray();
	void mark();
	String debug();
};
String dbg_type(c_Stack6**p){return "Stack";}
class c_List7 : public Object{
	public:
	c_Node12* m__head;
	c_List7();
	c_List7* m_new();
	c_Node12* p_AddLast7(c_BlockDecl*);
	c_List7* m_new2(Array<c_BlockDecl* >);
	bool p_IsEmpty();
	c_BlockDecl* p_RemoveLast();
	bool p_Equals3(c_BlockDecl*,c_BlockDecl*);
	c_Node12* p_FindLast5(c_BlockDecl*,c_Node12*);
	c_Node12* p_FindLast6(c_BlockDecl*);
	void p_RemoveLast4(c_BlockDecl*);
	void mark();
	String debug();
};
String dbg_type(c_List7**p){return "List";}
class c_Node12 : public Object{
	public:
	c_Node12* m__succ;
	c_Node12* m__pred;
	c_BlockDecl* m__data;
	c_Node12();
	c_Node12* m_new(c_Node12*,c_Node12*,c_BlockDecl*);
	c_Node12* m_new2();
	int p_Remove();
	void mark();
	String debug();
};
String dbg_type(c_Node12**p){return "Node";}
class c_HeadNode7 : public c_Node12{
	public:
	c_HeadNode7();
	c_HeadNode7* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode7**p){return "HeadNode";}
class c_DeclStmt : public c_Stmt{
	public:
	c_Decl* m_decl;
	c_DeclStmt();
	c_DeclStmt* m_new(c_Decl*);
	c_DeclStmt* m_new2(String,c_Type*,c_Expr*);
	c_DeclStmt* m_new3();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_DeclStmt**p){return "DeclStmt";}
class c_ReturnStmt : public c_Stmt{
	public:
	c_Expr* m_expr;
	c_ReturnStmt();
	c_ReturnStmt* m_new(c_Expr*);
	c_ReturnStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ReturnStmt**p){return "ReturnStmt";}
class c_BreakStmt : public c_Stmt{
	public:
	c_BreakStmt();
	c_BreakStmt* m_new();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_BreakStmt**p){return "BreakStmt";}
class c_ContinueStmt : public c_Stmt{
	public:
	c_ContinueStmt();
	c_ContinueStmt* m_new();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ContinueStmt**p){return "ContinueStmt";}
class c_IfStmt : public c_Stmt{
	public:
	c_Expr* m_expr;
	c_BlockDecl* m_thenBlock;
	c_BlockDecl* m_elseBlock;
	c_IfStmt();
	c_IfStmt* m_new(c_Expr*,c_BlockDecl*,c_BlockDecl*);
	c_IfStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_IfStmt**p){return "IfStmt";}
class c_WhileStmt : public c_Stmt{
	public:
	c_Expr* m_expr;
	c_BlockDecl* m_block;
	c_WhileStmt();
	c_WhileStmt* m_new(c_Expr*,c_BlockDecl*);
	c_WhileStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_WhileStmt**p){return "WhileStmt";}
class c_RepeatStmt : public c_Stmt{
	public:
	c_BlockDecl* m_block;
	c_Expr* m_expr;
	c_RepeatStmt();
	c_RepeatStmt* m_new(c_BlockDecl*,c_Expr*);
	c_RepeatStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_RepeatStmt**p){return "RepeatStmt";}
class c_ForEachinStmt : public c_Stmt{
	public:
	String m_varid;
	c_Type* m_varty;
	int m_varlocal;
	c_Expr* m_expr;
	c_BlockDecl* m_block;
	c_ForEachinStmt();
	c_ForEachinStmt* m_new(String,c_Type*,int,c_Expr*,c_BlockDecl*);
	c_ForEachinStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ForEachinStmt**p){return "ForEachinStmt";}
class c_AssignStmt : public c_Stmt{
	public:
	String m_op;
	c_Expr* m_lhs;
	c_Expr* m_rhs;
	c_LocalDecl* m_tmp1;
	c_LocalDecl* m_tmp2;
	c_AssignStmt();
	c_AssignStmt* m_new(String,c_Expr*,c_Expr*);
	c_AssignStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_FixSideEffects();
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_AssignStmt**p){return "AssignStmt";}
class c_ForStmt : public c_Stmt{
	public:
	c_Stmt* m_init;
	c_Expr* m_expr;
	c_Stmt* m_incr;
	c_BlockDecl* m_block;
	c_ForStmt();
	c_ForStmt* m_new(c_Stmt*,c_Expr*,c_Stmt*,c_BlockDecl*);
	c_ForStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ForStmt**p){return "ForStmt";}
class c_CatchStmt : public c_Stmt{
	public:
	c_LocalDecl* m_init;
	c_BlockDecl* m_block;
	c_CatchStmt();
	c_CatchStmt* m_new(c_LocalDecl*,c_BlockDecl*);
	c_CatchStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_CatchStmt**p){return "CatchStmt";}
class c_Stack7 : public Object{
	public:
	Array<c_CatchStmt* > m_data;
	int m_length;
	c_Stack7();
	c_Stack7* m_new();
	c_Stack7* m_new2(Array<c_CatchStmt* >);
	void p_Push19(c_CatchStmt*);
	void p_Push20(Array<c_CatchStmt* >,int,int);
	void p_Push21(Array<c_CatchStmt* >,int);
	static c_CatchStmt* m_NIL;
	void p_Length(int);
	int p_Length2();
	Array<c_CatchStmt* > p_ToArray();
	void mark();
	String debug();
};
String dbg_type(c_Stack7**p){return "Stack";}
int bb_math_Max(int,int);
Float bb_math_Max2(Float,Float);
class c_TryStmt : public c_Stmt{
	public:
	c_BlockDecl* m_block;
	Array<c_CatchStmt* > m_catches;
	c_TryStmt();
	c_TryStmt* m_new(c_BlockDecl*,Array<c_CatchStmt* >);
	c_TryStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_TryStmt**p){return "TryStmt";}
class c_ThrowStmt : public c_Stmt{
	public:
	c_Expr* m_expr;
	c_ThrowStmt();
	c_ThrowStmt* m_new(c_Expr*);
	c_ThrowStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ThrowStmt**p){return "ThrowStmt";}
class c_ExprStmt : public c_Stmt{
	public:
	c_Expr* m_expr;
	c_ExprStmt();
	c_ExprStmt* m_new(c_Expr*);
	c_ExprStmt* m_new2();
	c_Stmt* p_OnCopy2(c_ScopeDecl*);
	int p_OnSemant();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_ExprStmt**p){return "ExprStmt";}
c_ModuleDecl* bb_parser_ParseModule(String,String,c_AppDecl*);
class c_Enumerator3 : public Object{
	public:
	c_List4* m__list;
	c_Node9* m__curr;
	c_Enumerator3();
	c_Enumerator3* m_new(c_List4*);
	c_Enumerator3* m_new2();
	bool p_HasNext();
	c_FuncDecl* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator3**p){return "Enumerator";}
extern c_StringList* bb_config__errStack;
int bb_config_PushErr(String);
class c_List8 : public Object{
	public:
	c_Node13* m__head;
	c_List8();
	c_List8* m_new();
	c_Node13* p_AddLast8(c_GlobalDecl*);
	c_List8* m_new2(Array<c_GlobalDecl* >);
	c_Enumerator7* p_ObjectEnumerator();
	void mark();
	String debug();
};
String dbg_type(c_List8**p){return "List";}
class c_Node13 : public Object{
	public:
	c_Node13* m__succ;
	c_Node13* m__pred;
	c_GlobalDecl* m__data;
	c_Node13();
	c_Node13* m_new(c_Node13*,c_Node13*,c_GlobalDecl*);
	c_Node13* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node13**p){return "Node";}
class c_HeadNode8 : public c_Node13{
	public:
	c_HeadNode8();
	c_HeadNode8* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode8**p){return "HeadNode";}
int bb_config_PopErr();
class c_InvokeMemberExpr : public c_Expr{
	public:
	c_Expr* m_expr;
	c_FuncDecl* m_decl;
	Array<c_Expr* > m_args;
	int m_isResize;
	c_InvokeMemberExpr();
	c_InvokeMemberExpr* m_new(c_Expr*,c_FuncDecl*,Array<c_Expr* >);
	c_InvokeMemberExpr* m_new2();
	c_Expr* p_Semant();
	String p_ToString();
	String p_Trans();
	String p_TransStmt();
	void mark();
	String debug();
};
String dbg_type(c_InvokeMemberExpr**p){return "InvokeMemberExpr";}
c_Expr* bb_preprocessor_EvalExpr(c_Toker*);
bool bb_preprocessor_EvalBool(c_Toker*);
String bb_preprocessor_EvalText(c_Toker*);
c_StringMap2* bb_config_GetConfigVars();
c_Type* bb_config_GetConfigVarType(String);
String bb_preprocessor_PreProcess(String,c_ModuleDecl*);
class c_Target : public Object{
	public:
	String m_dir;
	String m_name;
	String m_system;
	c_Builder* m_builder;
	c_Target();
	c_Target* m_new(String,String,String,c_Builder*);
	c_Target* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Target**p){return "Target";}
class c_Map6 : public Object{
	public:
	c_Node14* m_root;
	c_Map6();
	c_Map6* m_new();
	virtual int p_Compare(String,String)=0;
	int p_RotateLeft6(c_Node14*);
	int p_RotateRight6(c_Node14*);
	int p_InsertFixup6(c_Node14*);
	bool p_Set6(String,c_Target*);
	c_Node14* p_FirstNode();
	c_NodeEnumerator2* p_ObjectEnumerator();
	c_Node14* p_FindNode(String);
	c_Target* p_Get(String);
	void mark();
	String debug();
};
String dbg_type(c_Map6**p){return "Map";}
class c_StringMap6 : public c_Map6{
	public:
	c_StringMap6();
	c_StringMap6* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap6**p){return "StringMap";}
class c_Node14 : public Object{
	public:
	String m_key;
	c_Node14* m_right;
	c_Node14* m_left;
	c_Target* m_value;
	int m_color;
	c_Node14* m_parent;
	c_Node14();
	c_Node14* m_new(String,c_Target*,int,c_Node14*);
	c_Node14* m_new2();
	c_Node14* p_NextNode();
	String p_Key();
	void mark();
	String debug();
};
String dbg_type(c_Node14**p){return "Node";}
void bb_config_PopConfigScope();
class c_NodeEnumerator2 : public Object{
	public:
	c_Node14* m_node;
	c_NodeEnumerator2();
	c_NodeEnumerator2* m_new(c_Node14*);
	c_NodeEnumerator2* m_new2();
	bool p_HasNext();
	c_Node14* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_NodeEnumerator2**p){return "NodeEnumerator";}
extern String bb_config_ENV_HOST;
extern String bb_config_ENV_CONFIG;
extern String bb_config_ENV_TARGET;
extern String bb_config_ENV_LANG;
String bb_os_StripAll(String);
c_AppDecl* bb_parser_ParseApp(String);
class c_Reflector : public Object{
	public:
	bool m_debug;
	c_ModuleDecl* m_refmod;
	c_ModuleDecl* m_langmod;
	c_ModuleDecl* m_boxesmod;
	c_StringMap7* m_munged;
	c_StringMap2* m_modexprs;
	c_StringSet* m_refmods;
	c_Stack8* m_classdecls;
	c_StringMap7* m_classids;
	c_StringStack* m_output;
	c_Reflector();
	c_Reflector* m_new();
	static bool m_MatchPath(String,String);
	String p_Mung(String);
	bool p_ValidClass(c_ClassDecl*);
	String p_TypeExpr(c_Type*,bool);
	String p_DeclExpr(c_Decl*,bool);
	int p_Emit(String);
	bool p_ValidType(c_Type*);
	String p_TypeInfo(c_Type*);
	int p_Attrs(c_Decl*);
	String p_Box(c_Type*,String);
	String p_Emit2(c_ConstDecl*);
	String p_Unbox(c_Type*,String);
	String p_Emit3(c_ClassDecl*);
	String p_Emit4(c_FuncDecl*);
	String p_Emit5(c_FieldDecl*);
	String p_Emit6(c_GlobalDecl*);
	int p_Semant3(c_AppDecl*);
	void mark();
	String debug();
};
String dbg_type(c_Reflector**p){return "Reflector";}
class c_MapValues : public Object{
	public:
	c_Map5* m_map;
	c_MapValues();
	c_MapValues* m_new(c_Map5*);
	c_MapValues* m_new2();
	c_ValueEnumerator* p_ObjectEnumerator();
	void mark();
	String debug();
};
String dbg_type(c_MapValues**p){return "MapValues";}
class c_ValueEnumerator : public Object{
	public:
	c_Node7* m_node;
	c_ValueEnumerator();
	c_ValueEnumerator* m_new(c_Node7*);
	c_ValueEnumerator* m_new2();
	bool p_HasNext();
	c_ModuleDecl* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_ValueEnumerator**p){return "ValueEnumerator";}
class c_Map7 : public Object{
	public:
	c_Node15* m_root;
	c_Map7();
	c_Map7* m_new();
	virtual int p_Compare(String,String)=0;
	c_Node15* p_FindNode(String);
	bool p_Contains(String);
	int p_Get(String);
	int p_RotateLeft7(c_Node15*);
	int p_RotateRight7(c_Node15*);
	int p_InsertFixup7(c_Node15*);
	bool p_Set7(String,int);
	void mark();
	String debug();
};
String dbg_type(c_Map7**p){return "Map";}
class c_StringMap7 : public c_Map7{
	public:
	c_StringMap7();
	c_StringMap7* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap7**p){return "StringMap";}
class c_Node15 : public Object{
	public:
	String m_key;
	c_Node15* m_right;
	c_Node15* m_left;
	int m_value;
	int m_color;
	c_Node15* m_parent;
	c_Node15();
	c_Node15* m_new(String,int,int,c_Node15*);
	c_Node15* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node15**p){return "Node";}
class c_Enumerator4 : public Object{
	public:
	c_List6* m__list;
	c_Node11* m__curr;
	c_Enumerator4();
	c_Enumerator4* m_new(c_List6*);
	c_Enumerator4* m_new2();
	bool p_HasNext();
	c_ClassDecl* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator4**p){return "Enumerator";}
class c_Stack8 : public Object{
	public:
	Array<c_ClassDecl* > m_data;
	int m_length;
	c_Stack8();
	c_Stack8* m_new();
	c_Stack8* m_new2(Array<c_ClassDecl* >);
	static c_ClassDecl* m_NIL;
	void p_Length(int);
	int p_Length2();
	void p_Push22(c_ClassDecl*);
	void p_Push23(Array<c_ClassDecl* >,int,int);
	void p_Push24(Array<c_ClassDecl* >,int);
	c_ClassDecl* p_Get2(int);
	void mark();
	String debug();
};
String dbg_type(c_Stack8**p){return "Stack";}
int bb_parser_ParseSource(String,c_AppDecl*,c_ModuleDecl*,int);
class c_Translator : public Object{
	public:
	c_Translator();
	virtual String p_TransApp(c_AppDecl*)=0;
	c_Translator* m_new();
	virtual String p_TransInvokeExpr(c_InvokeExpr*)=0;
	virtual String p_TransStmtExpr(c_StmtExpr*)=0;
	virtual String p_TransMemberVarExpr(c_MemberVarExpr*)=0;
	virtual String p_TransVarExpr(c_VarExpr*)=0;
	virtual String p_TransUnaryExpr(c_UnaryExpr*)=0;
	virtual String p_TransArrayExpr(c_ArrayExpr*)=0;
	virtual String p_TransConstExpr(c_ConstExpr*)=0;
	virtual String p_TransNewArrayExpr(c_NewArrayExpr*)=0;
	virtual String p_TransNewObjectExpr(c_NewObjectExpr*)=0;
	virtual String p_TransCastExpr(c_CastExpr*)=0;
	virtual String p_TransSelfExpr(c_SelfExpr*)=0;
	virtual String p_TransInvokeSuperExpr(c_InvokeSuperExpr*)=0;
	virtual String p_TransSliceExpr(c_SliceExpr*)=0;
	virtual String p_TransIndexExpr(c_IndexExpr*)=0;
	virtual String p_TransBinaryExpr(c_BinaryExpr*)=0;
	virtual String p_TransDeclStmt(c_DeclStmt*)=0;
	virtual String p_TransReturnStmt(c_ReturnStmt*)=0;
	virtual String p_TransBreakStmt(c_BreakStmt*)=0;
	virtual String p_TransContinueStmt(c_ContinueStmt*)=0;
	virtual String p_TransIfStmt(c_IfStmt*)=0;
	virtual String p_TransWhileStmt(c_WhileStmt*)=0;
	virtual String p_TransRepeatStmt(c_RepeatStmt*)=0;
	virtual String p_TransBlock(c_BlockDecl*)=0;
	virtual String p_TransAssignStmt(c_AssignStmt*)=0;
	virtual String p_TransForStmt(c_ForStmt*)=0;
	virtual String p_TransTryStmt(c_TryStmt*)=0;
	virtual String p_TransThrowStmt(c_ThrowStmt*)=0;
	virtual String p_TransExprStmt(c_ExprStmt*)=0;
	virtual String p_TransInvokeMemberExpr(c_InvokeMemberExpr*)=0;
	void mark();
	String debug();
};
String dbg_type(c_Translator**p){return "Translator";}
extern c_Translator* bb_translator__trans;
int bb_os_DeleteDir(String,bool);
int bb_os_CopyDir(String,String,bool,bool);
int bbMain();
class c_CTranslator : public c_Translator{
	public:
	c_StringMap8* m_funcMungs;
	c_StringMap9* m_mungedFuncs;
	c_StringMap10* m_mungedScopes;
	String m_indent;
	c_StringStack* m_lines;
	bool m_emitDebugInfo;
	int m_unreachable;
	int m_broken;
	c_CTranslator();
	c_CTranslator* m_new();
	int p_MungMethodDecl(c_FuncDecl*);
	int p_MungDecl(c_Decl*);
	int p_Emit(String);
	String p_Bra(String);
	virtual int p_BeginLocalScope();
	virtual int p_BeginLoop();
	virtual int p_EmitEnter(c_FuncDecl*);
	virtual int p_EmitEnterBlock();
	virtual int p_EmitSetErr(String);
	virtual String p_TransLocalDecl(String,c_Expr*)=0;
	String p_CreateLocal(c_Expr*);
	String p_TransExprNS(c_Expr*);
	virtual int p_EmitLeave();
	virtual String p_TransValue(c_Type*,String)=0;
	virtual int p_EmitLeaveBlock();
	int p_EmitBlock(c_BlockDecl*,bool);
	virtual int p_EndLoop();
	virtual int p_EndLocalScope();
	virtual String p_TransField(c_FieldDecl*,c_Expr*)=0;
	int p_ExprPri(c_Expr*);
	String p_TransSubExpr(c_Expr*,int);
	virtual String p_TransGlobal(c_GlobalDecl*)=0;
	String p_JoinLines();
	String p_Enquote(String);
	String p_TransStmtExpr(c_StmtExpr*);
	virtual String p_TransIntrinsicExpr(c_Decl*,c_Expr*,Array<c_Expr* >)=0;
	String p_TransVarExpr(c_VarExpr*);
	String p_TransMemberVarExpr(c_MemberVarExpr*);
	virtual String p_TransFunc(c_FuncDecl*,Array<c_Expr* >,c_Expr*)=0;
	String p_TransInvokeExpr(c_InvokeExpr*);
	String p_TransInvokeMemberExpr(c_InvokeMemberExpr*);
	virtual String p_TransSuperFunc(c_FuncDecl*,Array<c_Expr* >)=0;
	String p_TransInvokeSuperExpr(c_InvokeSuperExpr*);
	String p_TransExprStmt(c_ExprStmt*);
	String p_TransAssignOp(String);
	virtual String p_TransAssignStmt2(c_AssignStmt*);
	String p_TransAssignStmt(c_AssignStmt*);
	String p_TransReturnStmt(c_ReturnStmt*);
	String p_TransContinueStmt(c_ContinueStmt*);
	String p_TransBreakStmt(c_BreakStmt*);
	String p_TransBlock(c_BlockDecl*);
	String p_TransDeclStmt(c_DeclStmt*);
	String p_TransIfStmt(c_IfStmt*);
	String p_TransWhileStmt(c_WhileStmt*);
	String p_TransRepeatStmt(c_RepeatStmt*);
	String p_TransForStmt(c_ForStmt*);
	String p_TransTryStmt(c_TryStmt*);
	String p_TransThrowStmt(c_ThrowStmt*);
	String p_TransUnaryOp(String);
	String p_TransBinaryOp(String,String);
	void mark();
	String debug();
};
String dbg_type(c_CTranslator**p){return "CTranslator";}
class c_CppTranslator : public c_CTranslator{
	public:
	int m_gc_mode;
	bool m_unsafe;
	c_Stack10* m_dbgLocals;
	String m_lastDbgInfo;
	int m_pure;
	c_CppTranslator();
	c_CppTranslator* m_new();
	String p_TransType(c_Type*);
	String p_TransRefType(c_Type*);
	int p_EmitFuncProto(c_FuncDecl*);
	int p_EmitClassProto(c_ClassDecl*);
	int p_BeginLocalScope();
	int p_BeginLoop();
	int p_EndLoop();
	int p_EndLocalScope();
	int p_EmitFuncDecl(c_FuncDecl*);
	String p_TransField(c_FieldDecl*,c_Expr*);
	int p_EmitMark(String,c_Type*,bool);
	bool p_IsDebuggable(c_Type*);
	int p_EmitClassDecl(c_ClassDecl*);
	String p_TransStatic(c_Decl*);
	String p_TransGlobal(c_GlobalDecl*);
	String p_TransApp(c_AppDecl*);
	String p_TransValue(c_Type*,String);
	c_Expr* p_Uncast(c_Expr*);
	bool p_IsGcObject(c_Expr*);
	String p_GcRetain(c_Expr*,String);
	String p_TransLocalDecl(String,c_Expr*);
	int p_EmitEnter(c_FuncDecl*);
	int p_EmitEnterBlock();
	int p_EmitSetErr(String);
	int p_EmitLeaveBlock();
	int p_CheckSafe(c_Decl*);
	String p_TransArgs(Array<c_Expr* >,c_FuncDecl*);
	String p_TransFunc(c_FuncDecl*,Array<c_Expr* >,c_Expr*);
	String p_TransSuperFunc(c_FuncDecl*,Array<c_Expr* >);
	String p_TransConstExpr(c_ConstExpr*);
	String p_TransNewObjectExpr(c_NewObjectExpr*);
	String p_TransNewArrayExpr(c_NewArrayExpr*);
	String p_TransSelfExpr(c_SelfExpr*);
	String p_TransCastExpr(c_CastExpr*);
	String p_TransUnaryExpr(c_UnaryExpr*);
	String p_TransBinaryExpr(c_BinaryExpr*);
	String p_TransIndexExpr(c_IndexExpr*);
	String p_TransSliceExpr(c_SliceExpr*);
	String p_TransArrayExpr(c_ArrayExpr*);
	String p_TransIntrinsicExpr(c_Decl*,c_Expr*,Array<c_Expr* >);
	String p_TransTryStmt(c_TryStmt*);
	String p_TransDeclStmt(c_DeclStmt*);
	bool p_IsLocalVar(c_Expr*);
	String p_TransAssignStmt2(c_AssignStmt*);
	void mark();
	String debug();
};
String dbg_type(c_CppTranslator**p){return "CppTranslator";}
String bb_transcc_ReplaceBlock(String,String,String,String);
class c_NodeEnumerator3 : public Object{
	public:
	c_Node2* m_node;
	c_NodeEnumerator3();
	c_NodeEnumerator3* m_new(c_Node2*);
	c_NodeEnumerator3* m_new2();
	bool p_HasNext();
	c_Node2* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_NodeEnumerator3**p){return "NodeEnumerator";}
class c_JavaTranslator : public c_CTranslator{
	public:
	int m_unsafe;
	c_JavaTranslator();
	c_JavaTranslator* m_new();
	String p_TransType(c_Type*);
	String p_TransValue(c_Type*,String);
	String p_TransLocalDecl(String,c_Expr*);
	int p_EmitEnter(c_FuncDecl*);
	int p_EmitSetErr(String);
	int p_EmitLeave();
	String p_TransStatic(c_Decl*);
	String p_TransGlobal(c_GlobalDecl*);
	String p_TransField(c_FieldDecl*,c_Expr*);
	int p_EmitFuncDecl(c_FuncDecl*);
	String p_TransDecl(c_Decl*);
	int p_EmitClassDecl(c_ClassDecl*);
	String p_TransApp(c_AppDecl*);
	String p_TransArgs2(Array<c_Expr* >);
	String p_TransFunc(c_FuncDecl*,Array<c_Expr* >,c_Expr*);
	String p_TransSuperFunc(c_FuncDecl*,Array<c_Expr* >);
	String p_TransConstExpr(c_ConstExpr*);
	String p_TransNewObjectExpr(c_NewObjectExpr*);
	String p_TransNewArrayExpr(c_NewArrayExpr*);
	String p_TransSelfExpr(c_SelfExpr*);
	String p_TransCastExpr(c_CastExpr*);
	String p_TransUnaryExpr(c_UnaryExpr*);
	String p_TransBinaryExpr(c_BinaryExpr*);
	String p_TransIndexExpr(c_IndexExpr*);
	String p_TransSliceExpr(c_SliceExpr*);
	String p_TransArrayExpr(c_ArrayExpr*);
	String p_TransIntrinsicExpr(c_Decl*,c_Expr*,Array<c_Expr* >);
	String p_TransTryStmt(c_TryStmt*);
	void mark();
	String debug();
};
String dbg_type(c_JavaTranslator**p){return "JavaTranslator";}
bool bb_transcc_MatchPathAlt(String,String);
bool bb_transcc_MatchPath(String,String);
String bb_config_Enquote(String,String);
class c_JsTranslator : public c_CTranslator{
	public:
	c_JsTranslator();
	c_JsTranslator* m_new();
	String p_TransValue(c_Type*,String);
	String p_TransLocalDecl(String,c_Expr*);
	int p_EmitEnter(c_FuncDecl*);
	int p_EmitSetErr(String);
	int p_EmitLeave();
	String p_TransStatic(c_Decl*);
	String p_TransGlobal(c_GlobalDecl*);
	String p_TransField(c_FieldDecl*,c_Expr*);
	int p_EmitFuncDecl(c_FuncDecl*);
	int p_EmitClassDecl(c_ClassDecl*);
	String p_TransApp(c_AppDecl*);
	String p_TransArgs3(Array<c_Expr* >,String);
	String p_TransFunc(c_FuncDecl*,Array<c_Expr* >,c_Expr*);
	String p_TransSuperFunc(c_FuncDecl*,Array<c_Expr* >);
	String p_TransConstExpr(c_ConstExpr*);
	String p_TransNewObjectExpr(c_NewObjectExpr*);
	String p_TransNewArrayExpr(c_NewArrayExpr*);
	String p_TransSelfExpr(c_SelfExpr*);
	String p_TransCastExpr(c_CastExpr*);
	String p_TransUnaryExpr(c_UnaryExpr*);
	String p_TransBinaryExpr(c_BinaryExpr*);
	String p_TransIndexExpr(c_IndexExpr*);
	String p_TransSliceExpr(c_SliceExpr*);
	String p_TransArrayExpr(c_ArrayExpr*);
	String p_TransTryStmt(c_TryStmt*);
	String p_TransIntrinsicExpr(c_Decl*,c_Expr*,Array<c_Expr* >);
	void mark();
	String debug();
};
String dbg_type(c_JsTranslator**p){return "JsTranslator";}
extern int bb_html5_Info_Width;
extern int bb_html5_Info_Height;
class c_Stream : public Object{
	public:
	c_Stream();
	c_Stream* m_new();
	virtual int p_Read(c_DataBuffer*,int,int)=0;
	virtual void p_Close()=0;
	virtual int p_Eof()=0;
	virtual int p_Position()=0;
	virtual int p_Seek(int)=0;
	void mark();
	String debug();
};
String dbg_type(c_Stream**p){return "Stream";}
class c_FileStream : public c_Stream{
	public:
	BBFileStream* m__stream;
	c_FileStream();
	static BBFileStream* m_OpenStream(String,String);
	c_FileStream* m_new(String,String);
	c_FileStream* m_new2(BBFileStream*);
	c_FileStream* m_new3();
	static c_FileStream* m_Open(String,String);
	int p_Read(c_DataBuffer*,int,int);
	void p_Close();
	int p_Eof();
	int p_Position();
	int p_Seek(int);
	void mark();
	String debug();
};
String dbg_type(c_FileStream**p){return "FileStream";}
class c_DataBuffer : public BBDataBuffer{
	public:
	c_DataBuffer();
	c_DataBuffer* m_new(int);
	c_DataBuffer* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_DataBuffer**p){return "DataBuffer";}
int bb_html5_GetInfo_PNG(String);
int bb_html5_GetInfo_JPG(String);
int bb_html5_GetInfo_GIF(String);
class c_AsTranslator : public c_CTranslator{
	public:
	c_AsTranslator();
	c_AsTranslator* m_new();
	String p_TransValue(c_Type*,String);
	String p_TransType(c_Type*);
	String p_TransLocalDecl(String,c_Expr*);
	int p_EmitEnter(c_FuncDecl*);
	int p_EmitSetErr(String);
	int p_EmitLeave();
	String p_TransStatic(c_Decl*);
	String p_TransGlobal(c_GlobalDecl*);
	String p_TransField(c_FieldDecl*,c_Expr*);
	String p_TransValDecl(c_ValDecl*);
	int p_EmitFuncDecl(c_FuncDecl*);
	int p_EmitClassDecl(c_ClassDecl*);
	String p_TransApp(c_AppDecl*);
	String p_TransArgs2(Array<c_Expr* >);
	String p_TransFunc(c_FuncDecl*,Array<c_Expr* >,c_Expr*);
	String p_TransSuperFunc(c_FuncDecl*,Array<c_Expr* >);
	String p_TransConstExpr(c_ConstExpr*);
	String p_TransNewObjectExpr(c_NewObjectExpr*);
	String p_TransNewArrayExpr(c_NewArrayExpr*);
	String p_TransSelfExpr(c_SelfExpr*);
	String p_TransCastExpr(c_CastExpr*);
	String p_TransUnaryExpr(c_UnaryExpr*);
	String p_TransBinaryExpr(c_BinaryExpr*);
	String p_TransIndexExpr(c_IndexExpr*);
	String p_TransSliceExpr(c_SliceExpr*);
	String p_TransArrayExpr(c_ArrayExpr*);
	String p_TransIntrinsicExpr(c_Decl*,c_Expr*,Array<c_Expr* >);
	String p_TransTryStmt(c_TryStmt*);
	void mark();
	String debug();
};
String dbg_type(c_AsTranslator**p){return "AsTranslator";}
class c_CsTranslator : public c_CTranslator{
	public:
	c_CsTranslator();
	c_CsTranslator* m_new();
	String p_TransType(c_Type*);
	String p_TransValue(c_Type*,String);
	String p_TransLocalDecl(String,c_Expr*);
	int p_EmitEnter(c_FuncDecl*);
	int p_EmitSetErr(String);
	int p_EmitLeave();
	String p_TransStatic(c_Decl*);
	String p_TransGlobal(c_GlobalDecl*);
	String p_TransField(c_FieldDecl*,c_Expr*);
	int p_EmitFuncDecl(c_FuncDecl*);
	String p_TransDecl(c_Decl*);
	int p_EmitClassDecl(c_ClassDecl*);
	String p_TransApp(c_AppDecl*);
	String p_TransArgs2(Array<c_Expr* >);
	String p_TransFunc(c_FuncDecl*,Array<c_Expr* >,c_Expr*);
	String p_TransSuperFunc(c_FuncDecl*,Array<c_Expr* >);
	String p_TransConstExpr(c_ConstExpr*);
	String p_TransNewObjectExpr(c_NewObjectExpr*);
	String p_TransNewArrayExpr(c_NewArrayExpr*);
	String p_TransSelfExpr(c_SelfExpr*);
	String p_TransCastExpr(c_CastExpr*);
	String p_TransUnaryExpr(c_UnaryExpr*);
	String p_TransBinaryExpr(c_BinaryExpr*);
	String p_TransIndexExpr(c_IndexExpr*);
	String p_TransSliceExpr(c_SliceExpr*);
	String p_TransArrayExpr(c_ArrayExpr*);
	String p_TransIntrinsicExpr(c_Decl*,c_Expr*,Array<c_Expr* >);
	String p_TransTryStmt(c_TryStmt*);
	void mark();
	String debug();
};
String dbg_type(c_CsTranslator**p){return "CsTranslator";}
class c_List9 : public Object{
	public:
	c_Node16* m__head;
	c_List9();
	c_List9* m_new();
	c_Node16* p_AddLast9(c_ModuleDecl*);
	c_List9* m_new2(Array<c_ModuleDecl* >);
	bool p_IsEmpty();
	c_ModuleDecl* p_RemoveLast();
	bool p_Equals4(c_ModuleDecl*,c_ModuleDecl*);
	c_Node16* p_FindLast7(c_ModuleDecl*,c_Node16*);
	c_Node16* p_FindLast8(c_ModuleDecl*);
	void p_RemoveLast5(c_ModuleDecl*);
	void mark();
	String debug();
};
String dbg_type(c_List9**p){return "List";}
class c_Node16 : public Object{
	public:
	c_Node16* m__succ;
	c_Node16* m__pred;
	c_ModuleDecl* m__data;
	c_Node16();
	c_Node16* m_new(c_Node16*,c_Node16*,c_ModuleDecl*);
	c_Node16* m_new2();
	int p_Remove();
	void mark();
	String debug();
};
String dbg_type(c_Node16**p){return "Node";}
class c_HeadNode9 : public c_Node16{
	public:
	c_HeadNode9();
	c_HeadNode9* m_new();
	void mark();
	String debug();
};
String dbg_type(c_HeadNode9**p){return "HeadNode";}
class c_Enumerator5 : public Object{
	public:
	c_List5* m__list;
	c_Node10* m__curr;
	c_Enumerator5();
	c_Enumerator5* m_new(c_List5*);
	c_Enumerator5* m_new2();
	bool p_HasNext();
	c_Stmt* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator5**p){return "Enumerator";}
class c_InvokeExpr : public c_Expr{
	public:
	c_FuncDecl* m_decl;
	Array<c_Expr* > m_args;
	c_InvokeExpr();
	c_InvokeExpr* m_new(c_FuncDecl*,Array<c_Expr* >);
	c_InvokeExpr* m_new2();
	c_Expr* p_Semant();
	String p_ToString();
	String p_Trans();
	String p_TransStmt();
	void mark();
	String debug();
};
String dbg_type(c_InvokeExpr**p){return "InvokeExpr";}
class c_StmtExpr : public c_Expr{
	public:
	c_Stmt* m_stmt;
	c_Expr* m_expr;
	c_StmtExpr();
	c_StmtExpr* m_new(c_Stmt*,c_Expr*);
	c_StmtExpr* m_new2();
	c_Expr* p_Semant();
	c_Expr* p_Copy();
	String p_ToString();
	String p_Trans();
	void mark();
	String debug();
};
String dbg_type(c_StmtExpr**p){return "StmtExpr";}
class c_MemberVarExpr : public c_Expr{
	public:
	c_Expr* m_expr;
	c_VarDecl* m_decl;
	c_MemberVarExpr();
	c_MemberVarExpr* m_new(c_Expr*,c_VarDecl*);
	c_MemberVarExpr* m_new2();
	c_Expr* p_Semant();
	String p_ToString();
	bool p_SideEffects();
	c_Expr* p_SemantSet(String,c_Expr*);
	String p_Trans();
	String p_TransVar();
	void mark();
	String debug();
};
String dbg_type(c_MemberVarExpr**p){return "MemberVarExpr";}
class c_VarExpr : public c_Expr{
	public:
	c_VarDecl* m_decl;
	c_VarExpr();
	c_VarExpr* m_new(c_VarDecl*);
	c_VarExpr* m_new2();
	c_Expr* p_Semant();
	String p_ToString();
	bool p_SideEffects();
	c_Expr* p_SemantSet(String,c_Expr*);
	String p_Trans();
	String p_TransVar();
	void mark();
	String debug();
};
String dbg_type(c_VarExpr**p){return "VarExpr";}
extern int bb_decl__loopnest;
class c_Map8 : public Object{
	public:
	c_Node17* m_root;
	c_Map8();
	c_Map8* m_new();
	virtual int p_Compare(String,String)=0;
	c_Node17* p_FindNode(String);
	c_FuncDeclList* p_Get(String);
	int p_RotateLeft8(c_Node17*);
	int p_RotateRight8(c_Node17*);
	int p_InsertFixup8(c_Node17*);
	bool p_Set8(String,c_FuncDeclList*);
	void mark();
	String debug();
};
String dbg_type(c_Map8**p){return "Map";}
class c_StringMap8 : public c_Map8{
	public:
	c_StringMap8();
	c_StringMap8* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap8**p){return "StringMap";}
class c_Node17 : public Object{
	public:
	String m_key;
	c_Node17* m_right;
	c_Node17* m_left;
	c_FuncDeclList* m_value;
	int m_color;
	c_Node17* m_parent;
	c_Node17();
	c_Node17* m_new(String,c_FuncDeclList*,int,c_Node17*);
	c_Node17* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node17**p){return "Node";}
class c_Map9 : public Object{
	public:
	c_Node18* m_root;
	c_Map9();
	c_Map9* m_new();
	virtual int p_Compare(String,String)=0;
	c_Node18* p_FindNode(String);
	bool p_Contains(String);
	int p_RotateLeft9(c_Node18*);
	int p_RotateRight9(c_Node18*);
	int p_InsertFixup9(c_Node18*);
	bool p_Set9(String,c_FuncDecl*);
	void mark();
	String debug();
};
String dbg_type(c_Map9**p){return "Map";}
class c_StringMap9 : public c_Map9{
	public:
	c_StringMap9();
	c_StringMap9* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap9**p){return "StringMap";}
class c_Node18 : public Object{
	public:
	String m_key;
	c_Node18* m_right;
	c_Node18* m_left;
	c_FuncDecl* m_value;
	int m_color;
	c_Node18* m_parent;
	c_Node18();
	c_Node18* m_new(String,c_FuncDecl*,int,c_Node18*);
	c_Node18* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node18**p){return "Node";}
class c_Map10 : public Object{
	public:
	c_Node19* m_root;
	c_Map10();
	c_Map10* m_new();
	virtual int p_Compare(String,String)=0;
	c_Node19* p_FindNode(String);
	c_StringSet* p_Get(String);
	int p_RotateLeft10(c_Node19*);
	int p_RotateRight10(c_Node19*);
	int p_InsertFixup10(c_Node19*);
	bool p_Set10(String,c_StringSet*);
	void mark();
	String debug();
};
String dbg_type(c_Map10**p){return "Map";}
class c_StringMap10 : public c_Map10{
	public:
	c_StringMap10();
	c_StringMap10* m_new();
	int p_Compare(String,String);
	void mark();
	String debug();
};
String dbg_type(c_StringMap10**p){return "StringMap";}
class c_Node19 : public Object{
	public:
	String m_key;
	c_Node19* m_right;
	c_Node19* m_left;
	c_StringSet* m_value;
	int m_color;
	c_Node19* m_parent;
	c_Node19();
	c_Node19* m_new(String,c_StringSet*,int,c_Node19*);
	c_Node19* m_new2();
	void mark();
	String debug();
};
String dbg_type(c_Node19**p){return "Node";}
class c_Stack9 : public Object{
	public:
	Array<c_FuncDecl* > m_data;
	int m_length;
	c_Stack9();
	c_Stack9* m_new();
	c_Stack9* m_new2(Array<c_FuncDecl* >);
	void p_Push25(c_FuncDecl*);
	void p_Push26(Array<c_FuncDecl* >,int,int);
	void p_Push27(Array<c_FuncDecl* >,int);
	c_Enumerator6* p_ObjectEnumerator();
	static c_FuncDecl* m_NIL;
	void p_Length(int);
	int p_Length2();
	void mark();
	String debug();
};
String dbg_type(c_Stack9**p){return "Stack";}
class c_Enumerator6 : public Object{
	public:
	c_Stack9* m_stack;
	int m_index;
	c_Enumerator6();
	c_Enumerator6* m_new(c_Stack9*);
	c_Enumerator6* m_new2();
	bool p_HasNext();
	c_FuncDecl* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator6**p){return "Enumerator";}
class c_Stack10 : public Object{
	public:
	Array<c_LocalDecl* > m_data;
	int m_length;
	c_Stack10();
	c_Stack10* m_new();
	c_Stack10* m_new2(Array<c_LocalDecl* >);
	void p_Push28(c_LocalDecl*);
	void p_Push29(Array<c_LocalDecl* >,int,int);
	void p_Push30(Array<c_LocalDecl* >,int);
	static c_LocalDecl* m_NIL;
	void p_Clear();
	c_Enumerator8* p_ObjectEnumerator();
	void p_Length(int);
	int p_Length2();
	void mark();
	String debug();
};
String dbg_type(c_Stack10**p){return "Stack";}
class c_Enumerator7 : public Object{
	public:
	c_List8* m__list;
	c_Node13* m__curr;
	c_Enumerator7();
	c_Enumerator7* m_new(c_List8*);
	c_Enumerator7* m_new2();
	bool p_HasNext();
	c_GlobalDecl* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator7**p){return "Enumerator";}
class c_Enumerator8 : public Object{
	public:
	c_Stack10* m_stack;
	int m_index;
	c_Enumerator8();
	c_Enumerator8* m_new(c_Stack10*);
	c_Enumerator8* m_new2();
	bool p_HasNext();
	c_LocalDecl* p_NextObject();
	void mark();
	String debug();
};
String dbg_type(c_Enumerator8**p){return "Enumerator";}
c_TransCC::c_TransCC(){
	m_args=Array<String >();
	m_monkeydir=String();
	m_opt_srcpath=String();
	m_opt_safe=false;
	m_opt_clean=false;
	m_opt_check=false;
	m_opt_update=false;
	m_opt_build=false;
	m_opt_run=false;
	m_opt_cfgfile=String();
	m_opt_output=String();
	m_opt_config=String();
	m_opt_target=String();
	m_opt_modpath=String();
	m_opt_builddir=String();
	m_ANDROID_PATH=String();
	m_ANDROID_NDK_PATH=String();
	m_JDK_PATH=String();
	m_ANT_PATH=String();
	m_FLEX_PATH=String();
	m_MINGW_PATH=String();
	m_PSM_PATH=String();
	m_MSBUILD_PATH=String();
	m_HTML_PLAYER=String();
	m_FLASH_PLAYER=String();
	m__builders=(new c_StringMap3)->m_new();
	m__targets=(new c_StringMap6)->m_new();
	m_target=0;
}
c_TransCC* c_TransCC::m_new(){
	DBG_ENTER("TransCC.new")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<131>");
	return this;
}
void c_TransCC::p_ParseArgs(){
	DBG_ENTER("TransCC.ParseArgs")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<276>");
	if(m_args.Length()>1){
		DBG_BLOCK();
		m_opt_srcpath=bb_transcc_StripQuotes(m_args.At(m_args.Length()-1).Trim());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<278>");
	for(int t_i=1;t_i<m_args.Length()-1;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<280>");
		String t_arg=m_args.At(t_i).Trim();
		String t_rhs=String();
		DBG_LOCAL(t_arg,"arg")
		DBG_LOCAL(t_rhs,"rhs")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<281>");
		int t_j=t_arg.Find(String(L"=",1),0);
		DBG_LOCAL(t_j,"j")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<282>");
		if(t_j!=-1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<283>");
			t_rhs=bb_transcc_StripQuotes(t_arg.Slice(t_j+1));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<284>");
			t_arg=t_arg.Slice(0,t_j);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<287>");
		if(t_j==-1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<288>");
			String t_1=t_arg.ToLower();
			DBG_LOCAL(t_1,"1")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<289>");
			if(t_1==String(L"-safe",5)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<290>");
				m_opt_safe=true;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<291>");
				if(t_1==String(L"-clean",6)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<292>");
					m_opt_clean=true;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<293>");
					if(t_1==String(L"-check",6)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<294>");
						m_opt_check=true;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<295>");
						if(t_1==String(L"-update",7)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<296>");
							m_opt_check=true;
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<297>");
							m_opt_update=true;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<298>");
							if(t_1==String(L"-build",6)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<299>");
								m_opt_check=true;
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<300>");
								m_opt_update=true;
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<301>");
								m_opt_build=true;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<302>");
								if(t_1==String(L"-run",4)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<303>");
									m_opt_check=true;
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<304>");
									m_opt_update=true;
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<305>");
									m_opt_build=true;
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<306>");
									m_opt_run=true;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<308>");
									bb_transcc_Die(String(L"Unrecognized command line option: ",34)+t_arg);
								}
							}
						}
					}
				}
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<310>");
			if(t_arg.StartsWith(String(L"-",1))){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<311>");
				String t_2=t_arg.ToLower();
				DBG_LOCAL(t_2,"2")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<312>");
				if(t_2==String(L"-cfgfile",8)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<313>");
					m_opt_cfgfile=t_rhs;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<314>");
					if(t_2==String(L"-output",7)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<315>");
						m_opt_output=t_rhs;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<316>");
						if(t_2==String(L"-config",7)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<317>");
							m_opt_config=t_rhs.ToLower();
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<318>");
							if(t_2==String(L"-target",7)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<319>");
								m_opt_target=t_rhs;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<320>");
								if(t_2==String(L"-modpath",8)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<321>");
									m_opt_modpath=t_rhs;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<322>");
									if(t_2==String(L"-builddir",9)){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<323>");
										m_opt_builddir=t_rhs;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<325>");
										bb_transcc_Die(String(L"Unrecognized command line option: ",34)+t_arg);
									}
								}
							}
						}
					}
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<327>");
				if(t_arg.StartsWith(String(L"+",1))){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<328>");
					bb_config_SetConfigVar2(t_arg.Slice(1),t_rhs);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<330>");
					bb_transcc_Die(String(L"Command line arg error: ",24)+t_arg);
				}
			}
		}
	}
}
void c_TransCC::p_LoadConfig(){
	DBG_ENTER("TransCC.LoadConfig")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<338>");
	String t_cfgpath=m_monkeydir+String(L"/bin/",5);
	DBG_LOCAL(t_cfgpath,"cfgpath")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<339>");
	if((m_opt_cfgfile).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<340>");
		t_cfgpath=t_cfgpath+m_opt_cfgfile;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<342>");
		t_cfgpath=t_cfgpath+(String(L"config.",7)+HostOS()+String(L".txt",4));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<344>");
	if(FileType(t_cfgpath)!=1){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Failed to open config file",26));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<346>");
	String t_cfg=LoadString(t_cfgpath);
	DBG_LOCAL(t_cfg,"cfg")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<348>");
	Array<String > t_=t_cfg.Split(String(L"\n",1));
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_line=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_line,"line")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<350>");
		t_line=t_line.Trim();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<351>");
		if(!((t_line).Length()!=0) || t_line.StartsWith(String(L"'",1))){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<353>");
		int t_i=t_line.Find(String(L"=",1),0);
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<354>");
		if(t_i==-1){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Error in config file, line=",27)+t_line);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<356>");
		String t_lhs=t_line.Slice(0,t_i).Trim();
		DBG_LOCAL(t_lhs,"lhs")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<357>");
		String t_rhs=t_line.Slice(t_i+1).Trim();
		DBG_LOCAL(t_rhs,"rhs")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<359>");
		t_rhs=bb_transcc_ReplaceEnv(t_rhs);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<361>");
		String t_path=bb_transcc_StripQuotes(t_rhs);
		DBG_LOCAL(t_path,"path")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<363>");
		while(t_path.EndsWith(String(L"/",1)) || t_path.EndsWith(String(L"\\",1))){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<364>");
			t_path=t_path.Slice(0,-1);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<367>");
		String t_3=t_lhs;
		DBG_LOCAL(t_3,"3")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<368>");
		if(t_3==String(L"MODPATH",7)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<369>");
			if(!((m_opt_modpath).Length()!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<370>");
				m_opt_modpath=t_path;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<372>");
			if(t_3==String(L"ANDROID_PATH",12)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<373>");
				if(!((m_ANDROID_PATH).Length()!=0) && FileType(t_path)==2){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<374>");
					m_ANDROID_PATH=t_path;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<376>");
				if(t_3==String(L"ANDROID_NDK_PATH",16)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<377>");
					if(!((m_ANDROID_NDK_PATH).Length()!=0) && FileType(t_path)==2){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<378>");
						m_ANDROID_NDK_PATH=t_path;
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<380>");
					if(t_3==String(L"JDK_PATH",8)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<381>");
						if(!((m_JDK_PATH).Length()!=0) && FileType(t_path)==2){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<382>");
							m_JDK_PATH=t_path;
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<384>");
						if(t_3==String(L"ANT_PATH",8)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<385>");
							if(!((m_ANT_PATH).Length()!=0) && FileType(t_path)==2){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<386>");
								m_ANT_PATH=t_path;
							}
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<388>");
							if(t_3==String(L"FLEX_PATH",9)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<389>");
								if(!((m_FLEX_PATH).Length()!=0) && FileType(t_path)==2){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<390>");
									m_FLEX_PATH=t_path;
								}
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<392>");
								if(t_3==String(L"MINGW_PATH",10)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<393>");
									if(!((m_MINGW_PATH).Length()!=0) && FileType(t_path)==2){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<394>");
										m_MINGW_PATH=t_path;
									}
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<396>");
									if(t_3==String(L"PSM_PATH",8)){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<397>");
										if(!((m_PSM_PATH).Length()!=0) && FileType(t_path)==2){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<398>");
											m_PSM_PATH=t_path;
										}
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<400>");
										if(t_3==String(L"MSBUILD_PATH",12)){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<401>");
											if(!((m_MSBUILD_PATH).Length()!=0) && FileType(t_path)==1){
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<402>");
												m_MSBUILD_PATH=t_path;
											}
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<404>");
											if(t_3==String(L"HTML_PLAYER",11)){
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<405>");
												m_HTML_PLAYER=t_rhs;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<406>");
												if(t_3==String(L"FLASH_PLAYER",12)){
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<407>");
													m_FLASH_PLAYER=t_rhs;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<409>");
													bbPrint(String(L"Trans: ignoring unrecognized config var: ",41)+t_lhs);
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<414>");
	String t_4=HostOS();
	DBG_LOCAL(t_4,"4")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<415>");
	if(t_4==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<416>");
		String t_path2=GetEnv(String(L"PATH",4));
		DBG_LOCAL(t_path2,"path")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<418>");
		if((m_ANDROID_PATH).Length()!=0){
			DBG_BLOCK();
			t_path2=t_path2+(String(L";",1)+m_ANDROID_PATH+String(L"/tools",6));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<419>");
		if((m_ANDROID_PATH).Length()!=0){
			DBG_BLOCK();
			t_path2=t_path2+(String(L";",1)+m_ANDROID_PATH+String(L"/platform-tools",15));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<420>");
		if((m_JDK_PATH).Length()!=0){
			DBG_BLOCK();
			t_path2=t_path2+(String(L";",1)+m_JDK_PATH+String(L"/bin",4));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<421>");
		if((m_ANT_PATH).Length()!=0){
			DBG_BLOCK();
			t_path2=t_path2+(String(L";",1)+m_ANT_PATH+String(L"/bin",4));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<422>");
		if((m_FLEX_PATH).Length()!=0){
			DBG_BLOCK();
			t_path2=t_path2+(String(L";",1)+m_FLEX_PATH+String(L"/bin",4));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<424>");
		if((m_MINGW_PATH).Length()!=0){
			DBG_BLOCK();
			t_path2=m_MINGW_PATH+String(L"/bin;",5)+t_path2;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<426>");
		SetEnv(String(L"PATH",4),t_path2);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<428>");
		if((m_JDK_PATH).Length()!=0){
			DBG_BLOCK();
			SetEnv(String(L"JAVA_HOME",9),m_JDK_PATH);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<430>");
		if(t_4==String(L"macos",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<435>");
			String t_path3=GetEnv(String(L"PATH",4));
			DBG_LOCAL(t_path3,"path")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<437>");
			if((m_ANDROID_PATH).Length()!=0){
				DBG_BLOCK();
				t_path3=t_path3+(String(L":",1)+m_ANDROID_PATH+String(L"/tools",6));
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<438>");
			if((m_ANDROID_PATH).Length()!=0){
				DBG_BLOCK();
				t_path3=t_path3+(String(L":",1)+m_ANDROID_PATH+String(L"/platform-tools",15));
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<439>");
			if((m_ANT_PATH).Length()!=0){
				DBG_BLOCK();
				t_path3=t_path3+(String(L":",1)+m_ANT_PATH+String(L"/bin",4));
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<440>");
			if((m_FLEX_PATH).Length()!=0){
				DBG_BLOCK();
				t_path3=t_path3+(String(L":",1)+m_FLEX_PATH+String(L"/bin",4));
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<442>");
			SetEnv(String(L"PATH",4),t_path3);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<447>");
			if(t_4==String(L"linux",5)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<449>");
				String t_path4=GetEnv(String(L"PATH",4));
				DBG_LOCAL(t_path4,"path")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<451>");
				if((m_JDK_PATH).Length()!=0){
					DBG_BLOCK();
					t_path4=m_JDK_PATH+String(L"/bin:",5)+t_path4;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<452>");
				if((m_ANDROID_PATH).Length()!=0){
					DBG_BLOCK();
					t_path4=m_ANDROID_PATH+String(L"/platform-tools:",16)+t_path4;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<453>");
				if((m_FLEX_PATH).Length()!=0){
					DBG_BLOCK();
					t_path4=m_FLEX_PATH+String(L"/bin:",5)+t_path4;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<455>");
				SetEnv(String(L"PATH",4),t_path4);
			}
		}
	}
}
void c_TransCC::p_EnumBuilders(){
	DBG_ENTER("TransCC.EnumBuilders")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<238>");
	c_NodeEnumerator* t_=bb_builders_Builders(this)->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node3* t_it=t_->p_NextObject();
		DBG_LOCAL(t_it,"it")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<239>");
		if(t_it->p_Value()->p_IsValid()){
			DBG_BLOCK();
			m__builders->p_Set3(t_it->p_Key(),t_it->p_Value());
		}
	}
}
void c_TransCC::p_EnumTargets(String t_dir){
	DBG_ENTER("TransCC.EnumTargets")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_dir,"dir")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<245>");
	String t_p=m_monkeydir+String(L"/",1)+t_dir;
	DBG_LOCAL(t_p,"p")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<247>");
	Array<String > t_=LoadDir(t_p);
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_f=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_f,"f")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<248>");
		String t_t=t_p+String(L"/",1)+t_f+String(L"/TARGET.MONKEY",14);
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<249>");
		if(FileType(t_t)!=1){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<251>");
		bb_config_PushConfigScope();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<253>");
		bb_preprocessor_PreProcess(t_t,0);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<255>");
		String t_name=bb_config_GetConfigVar(String(L"TARGET_NAME",11));
		DBG_LOCAL(t_name,"name")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<256>");
		if((t_name).Length()!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<257>");
			String t_system=bb_config_GetConfigVar(String(L"TARGET_SYSTEM",13));
			DBG_LOCAL(t_system,"system")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<258>");
			if((t_system).Length()!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<259>");
				c_Builder* t_builder=m__builders->p_Get(bb_config_GetConfigVar(String(L"TARGET_BUILDER",14)));
				DBG_LOCAL(t_builder,"builder")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<260>");
				if((t_builder)!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<261>");
					String t_host=bb_config_GetConfigVar(String(L"TARGET_HOST",11));
					DBG_LOCAL(t_host,"host")
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<262>");
					if(!((t_host).Length()!=0) || t_host==HostOS()){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<263>");
						m__targets->p_Set6(t_name,(new c_Target)->m_new(t_f,t_name,t_system,t_builder));
					}
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<269>");
		bb_config_PopConfigScope();
	}
}
String c_TransCC::p_GetReleaseVersion(){
	DBG_ENTER("TransCC.GetReleaseVersion")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<229>");
	String t_f=LoadString(m_monkeydir+String(L"/VERSIONS.TXT",13));
	DBG_LOCAL(t_f,"f")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<230>");
	Array<String > t_=t_f.Split(String(L"\n",1));
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<231>");
		t_t=t_t.Trim();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<232>");
		if(t_t.StartsWith(String(L"***** v",7)) && t_t.EndsWith(String(L" *****",6))){
			DBG_BLOCK();
			String t_3=t_t.Slice(6,-6);
			return t_3;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<234>");
	return String();
}
void c_TransCC::p_Run(Array<String > t_args){
	DBG_ENTER("TransCC.Run")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<194>");
	gc_assign(this->m_args,t_args);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<196>");
	bbPrint(String(L"TRANS monkey compiler V1.85",27));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<198>");
	m_monkeydir=RealPath(bb_os_ExtractDir(AppPath())+String(L"/..",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<200>");
	SetEnv(String(L"MONKEYDIR",9),m_monkeydir);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<201>");
	SetEnv(String(L"TRANSDIR",8),m_monkeydir+String(L"/bin",4));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<203>");
	p_ParseArgs();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<205>");
	p_LoadConfig();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<207>");
	p_EnumBuilders();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<209>");
	p_EnumTargets(String(L"targets",7));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<211>");
	if(t_args.Length()<2){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<212>");
		String t_valid=String();
		DBG_LOCAL(t_valid,"valid")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<213>");
		c_NodeEnumerator2* t_=m__targets->p_ObjectEnumerator();
		while(t_->p_HasNext()){
			DBG_BLOCK();
			c_Node14* t_it=t_->p_NextObject();
			DBG_LOCAL(t_it,"it")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<214>");
			t_valid=t_valid+(String(L" ",1)+t_it->p_Key().Replace(String(L" ",1),String(L"_",1)));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<216>");
		bbPrint(String(L"TRANS Usage: transcc [-update] [-build] [-run] [-clean] [-config=...] [-target=...] [-cfgfile=...] [-modpath=...] <main_monkey_source_file>",139));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<217>");
		bbPrint(String(L"Valid targets:",14)+t_valid);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<218>");
		bbPrint(String(L"Valid configs: debug release",28));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<219>");
		ExitApp(0);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<222>");
	gc_assign(m_target,m__targets->p_Get(m_opt_target.Replace(String(L"_",1),String(L" ",1))));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<223>");
	if(!((m_target)!=0)){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Invalid target",14));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<225>");
	m_target->m_builder->p_Make();
}
bool c_TransCC::p_Execute(String t_cmd,bool t_failHard){
	DBG_ENTER("TransCC.Execute")
	c_TransCC *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_cmd,"cmd")
	DBG_LOCAL(t_failHard,"failHard")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<463>");
	int t_r=Execute(t_cmd);
	DBG_LOCAL(t_r,"r")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<464>");
	if(!((t_r)!=0)){
		DBG_BLOCK();
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<465>");
	if(t_failHard){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Error executing '",17)+t_cmd+String(L"', return code=",15)+String(t_r));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<466>");
	return false;
}
void c_TransCC::mark(){
	Object::mark();
	gc_mark_q(m_args);
	gc_mark_q(m__builders);
	gc_mark_q(m__targets);
	gc_mark_q(m_target);
}
String c_TransCC::debug(){
	String t="(TransCC)\n";
	t+=dbg_decl("opt_safe",&m_opt_safe);
	t+=dbg_decl("opt_clean",&m_opt_clean);
	t+=dbg_decl("opt_check",&m_opt_check);
	t+=dbg_decl("opt_update",&m_opt_update);
	t+=dbg_decl("opt_build",&m_opt_build);
	t+=dbg_decl("opt_run",&m_opt_run);
	t+=dbg_decl("opt_srcpath",&m_opt_srcpath);
	t+=dbg_decl("opt_cfgfile",&m_opt_cfgfile);
	t+=dbg_decl("opt_output",&m_opt_output);
	t+=dbg_decl("opt_config",&m_opt_config);
	t+=dbg_decl("opt_target",&m_opt_target);
	t+=dbg_decl("opt_modpath",&m_opt_modpath);
	t+=dbg_decl("opt_builddir",&m_opt_builddir);
	t+=dbg_decl("ANDROID_PATH",&m_ANDROID_PATH);
	t+=dbg_decl("ANDROID_NDK_PATH",&m_ANDROID_NDK_PATH);
	t+=dbg_decl("ANT_PATH",&m_ANT_PATH);
	t+=dbg_decl("JDK_PATH",&m_JDK_PATH);
	t+=dbg_decl("FLEX_PATH",&m_FLEX_PATH);
	t+=dbg_decl("MINGW_PATH",&m_MINGW_PATH);
	t+=dbg_decl("MSBUILD_PATH",&m_MSBUILD_PATH);
	t+=dbg_decl("PSM_PATH",&m_PSM_PATH);
	t+=dbg_decl("HTML_PLAYER",&m_HTML_PLAYER);
	t+=dbg_decl("FLASH_PLAYER",&m_FLASH_PLAYER);
	t+=dbg_decl("args",&m_args);
	t+=dbg_decl("monkeydir",&m_monkeydir);
	t+=dbg_decl("target",&m_target);
	t+=dbg_decl("_builders",&m__builders);
	t+=dbg_decl("_targets",&m__targets);
	return t;
}
String bb_os_ExtractDir(String t_path){
	DBG_ENTER("ExtractDir")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<141>");
	int t_i=t_path.FindLast(String(L"/",1));
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<142>");
	if(t_i==-1){
		DBG_BLOCK();
		t_i=t_path.FindLast(String(L"\\",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<143>");
	if(t_i!=-1){
		DBG_BLOCK();
		String t_=t_path.Slice(0,t_i);
		return t_;
	}
	return String();
}
String bb_transcc_StripQuotes(String t_str){
	DBG_ENTER("StripQuotes")
	DBG_LOCAL(t_str,"str")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<23>");
	if(t_str.Length()>=2 && t_str.StartsWith(String(L"\"",1)) && t_str.EndsWith(String(L"\"",1))){
		DBG_BLOCK();
		String t_=t_str.Slice(1,-1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<24>");
	return t_str;
}
int bb_transcc_Die(String t_msg){
	DBG_ENTER("Die")
	DBG_LOCAL(t_msg,"msg")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<18>");
	bbPrint(String(L"TRANS FAILED: ",14)+t_msg);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<19>");
	ExitApp(-1);
	return 0;
}
c_Type::c_Type(){
	m_arrayOf=0;
}
c_Type* c_Type::m_new(){
	DBG_ENTER("Type.new")
	c_Type *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<9>");
	return this;
}
c_StringType* c_Type::m_stringType;
c_IntType* c_Type::m_intType;
c_FloatType* c_Type::m_floatType;
c_BoolType* c_Type::m_boolType;
c_VoidType* c_Type::m_voidType;
c_IdentType* c_Type::m_objectType;
c_IdentType* c_Type::m_throwableType;
c_ArrayType* c_Type::p_ArrayOf(){
	DBG_ENTER("Type.ArrayOf")
	c_Type *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<32>");
	if(!((m_arrayOf)!=0)){
		DBG_BLOCK();
		gc_assign(m_arrayOf,(new c_ArrayType)->m_new(this));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<33>");
	return m_arrayOf;
}
c_ArrayType* c_Type::m_emptyArrayType;
c_IdentType* c_Type::m_nullObjectType;
String c_Type::p_ToString(){
	DBG_ENTER("Type.ToString")
	c_Type *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<28>");
	return String(L"??Type??",8);
}
int c_Type::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("Type.EqualsType")
	c_Type *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<12>");
	return 0;
}
c_Type* c_Type::p_Semant(){
	DBG_ENTER("Type.Semant")
	c_Type *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<20>");
	return this;
}
int c_Type::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("Type.ExtendsType")
	c_Type *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<16>");
	int t_=p_EqualsType(t_ty);
	return t_;
}
c_ClassDecl* c_Type::p_GetClass(){
	DBG_ENTER("Type.GetClass")
	c_Type *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<24>");
	return 0;
}
void c_Type::mark(){
	Object::mark();
	gc_mark_q(m_arrayOf);
}
String c_Type::debug(){
	String t="(Type)\n";
	t+=dbg_decl("voidType",&c_Type::m_voidType);
	t+=dbg_decl("boolType",&c_Type::m_boolType);
	t+=dbg_decl("intType",&c_Type::m_intType);
	t+=dbg_decl("floatType",&c_Type::m_floatType);
	t+=dbg_decl("stringType",&c_Type::m_stringType);
	t+=dbg_decl("emptyArrayType",&c_Type::m_emptyArrayType);
	t+=dbg_decl("objectType",&c_Type::m_objectType);
	t+=dbg_decl("throwableType",&c_Type::m_throwableType);
	t+=dbg_decl("nullObjectType",&c_Type::m_nullObjectType);
	t+=dbg_decl("arrayOf",&m_arrayOf);
	return t;
}
c_StringType::c_StringType(){
}
c_StringType* c_StringType::m_new(){
	DBG_ENTER("StringType.new")
	c_StringType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<142>");
	c_Type::m_new();
	return this;
}
int c_StringType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("StringType.EqualsType")
	c_StringType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<145>");
	int t_=((dynamic_cast<c_StringType*>(t_ty)!=0)?1:0);
	return t_;
}
int c_StringType::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("StringType.ExtendsType")
	c_StringType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<149>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<150>");
		c_Expr* t_expr=((new c_ConstExpr)->m_new((this),String()))->p_Semant();
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<151>");
		c_Expr* t_[]={t_expr};
		c_FuncDecl* t_ctor=t_ty->p_GetClass()->p_FindFuncDecl(String(L"new",3),Array<c_Expr* >(t_,1),1);
		DBG_LOCAL(t_ctor,"ctor")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<152>");
		int t_2=((((t_ctor)!=0) && t_ctor->p_IsCtor())?1:0);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<154>");
	int t_3=p_EqualsType(t_ty);
	return t_3;
}
c_ClassDecl* c_StringType::p_GetClass(){
	DBG_ENTER("StringType.GetClass")
	c_StringType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<158>");
	c_ClassDecl* t_=dynamic_cast<c_ClassDecl*>(bb_decl__env->p_FindDecl(String(L"string",6)));
	return t_;
}
String c_StringType::p_ToString(){
	DBG_ENTER("StringType.ToString")
	c_StringType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<162>");
	return String(L"String",6);
}
void c_StringType::mark(){
	c_Type::mark();
}
String c_StringType::debug(){
	String t="(StringType)\n";
	t=c_Type::debug()+t;
	return t;
}
c_Decl::c_Decl(){
	m_errInfo=String();
	m_ident=String();
	m_munged=String();
	m_attrs=0;
	m_scope=0;
}
c_Decl* c_Decl::m_new(){
	DBG_ENTER("Decl.new")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<51>");
	m_errInfo=bb_config__errInfo;
	return this;
}
int c_Decl::p_IsSemanted(){
	DBG_ENTER("Decl.IsSemanted")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<88>");
	int t_=(((m_attrs&1048576)!=0)?1:0);
	return t_;
}
int c_Decl::p_IsPublic(){
	DBG_ENTER("Decl.IsPublic")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<68>");
	int t_=(((m_attrs&16896)==0)?1:0);
	return t_;
}
c_ModuleDecl* c_Decl::p_ModuleScope(){
	DBG_ENTER("Decl.ModuleScope")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<106>");
	if((dynamic_cast<c_ModuleDecl*>(this))!=0){
		DBG_BLOCK();
		c_ModuleDecl* t_=dynamic_cast<c_ModuleDecl*>(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<107>");
	if((m_scope)!=0){
		DBG_BLOCK();
		c_ModuleDecl* t_2=m_scope->p_ModuleScope();
		return t_2;
	}
	return 0;
}
int c_Decl::p_IsProtected(){
	DBG_ENTER("Decl.IsProtected")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<76>");
	int t_=(((m_attrs&16384)!=0)?1:0);
	return t_;
}
c_ClassDecl* c_Decl::p_ClassScope(){
	DBG_ENTER("Decl.ClassScope")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<101>");
	if((dynamic_cast<c_ClassDecl*>(this))!=0){
		DBG_BLOCK();
		c_ClassDecl* t_=dynamic_cast<c_ClassDecl*>(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<102>");
	if((m_scope)!=0){
		DBG_BLOCK();
		c_ClassDecl* t_2=m_scope->p_ClassScope();
		return t_2;
	}
	return 0;
}
c_FuncDecl* c_Decl::p_FuncScope(){
	DBG_ENTER("Decl.FuncScope")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<96>");
	if((dynamic_cast<c_FuncDecl*>(this))!=0){
		DBG_BLOCK();
		c_FuncDecl* t_=dynamic_cast<c_FuncDecl*>(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<97>");
	if((m_scope)!=0){
		DBG_BLOCK();
		c_FuncDecl* t_2=m_scope->p_FuncScope();
		return t_2;
	}
	return 0;
}
int c_Decl::p_CheckAccess(){
	DBG_ENTER("Decl.CheckAccess")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<118>");
	if(!((bb_decl__env)!=0)){
		DBG_BLOCK();
		return 1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<121>");
	if((p_IsPublic())!=0){
		DBG_BLOCK();
		return 1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<123>");
	c_ModuleDecl* t_mdecl=p_ModuleScope();
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<124>");
	if((t_mdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<125>");
		c_ModuleDecl* t_mdecl2=bb_decl__env->p_ModuleScope();
		DBG_LOCAL(t_mdecl2,"mdecl2")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<126>");
		if(t_mdecl==t_mdecl2){
			DBG_BLOCK();
			return 1;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<127>");
		if(((t_mdecl2)!=0) && t_mdecl->m_friends->p_Contains(t_mdecl2->m_rmodpath)){
			DBG_BLOCK();
			return 1;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<134>");
	if((p_IsProtected())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<135>");
		c_ClassDecl* t_thisClass=p_ClassScope();
		DBG_LOCAL(t_thisClass,"thisClass")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<136>");
		c_ClassDecl* t_currentClass=bb_decl__env->p_ClassScope();
		DBG_LOCAL(t_currentClass,"currentClass")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<137>");
		while((t_currentClass)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<138>");
			if(t_currentClass==t_thisClass){
				DBG_BLOCK();
				return 1;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<139>");
			t_currentClass=t_currentClass->m_superClass;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<144>");
	c_FuncDecl* t_fdecl=bb_decl__env->p_FuncScope();
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<145>");
	if(((t_fdecl)!=0) && ((t_fdecl->m_attrs&8388608)!=0)){
		DBG_BLOCK();
		return 1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<147>");
	return 0;
}
int c_Decl::p_IsExtern(){
	DBG_ENTER("Decl.IsExtern")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<64>");
	int t_=(((m_attrs&256)!=0)?1:0);
	return t_;
}
int c_Decl::p_IsAbstract(){
	DBG_ENTER("Decl.IsAbstract")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<84>");
	int t_=(((m_attrs&1024)!=0)?1:0);
	return t_;
}
String c_Decl::p_ToString(){
	DBG_ENTER("Decl.ToString")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<59>");
	if((dynamic_cast<c_ClassDecl*>(m_scope))!=0){
		DBG_BLOCK();
		String t_=m_scope->p_ToString()+String(L".",1)+m_ident;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<60>");
	return m_ident;
}
int c_Decl::p_IsSemanting(){
	DBG_ENTER("Decl.IsSemanting")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<92>");
	int t_=(((m_attrs&2097152)!=0)?1:0);
	return t_;
}
c_AppDecl* c_Decl::p_AppScope(){
	DBG_ENTER("Decl.AppScope")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<111>");
	if((dynamic_cast<c_AppDecl*>(this))!=0){
		DBG_BLOCK();
		c_AppDecl* t_=dynamic_cast<c_AppDecl*>(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<112>");
	if((m_scope)!=0){
		DBG_BLOCK();
		c_AppDecl* t_2=m_scope->p_AppScope();
		return t_2;
	}
	return 0;
}
int c_Decl::p_Semant(){
	DBG_ENTER("Decl.Semant")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<166>");
	if((p_IsSemanted())!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<168>");
	if((p_IsSemanting())!=0){
		DBG_BLOCK();
		bb_config_Err(String(L"Cyclic declaration of '",23)+m_ident+String(L"'.",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<170>");
	c_ClassDecl* t_cscope=dynamic_cast<c_ClassDecl*>(m_scope);
	DBG_LOCAL(t_cscope,"cscope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<172>");
	if((t_cscope)!=0){
		DBG_BLOCK();
		t_cscope->m_attrs&=-5;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<174>");
	bb_config_PushErr(m_errInfo);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<176>");
	if((m_scope)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<177>");
		bb_decl_PushEnv(m_scope);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<180>");
	m_attrs|=2097152;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<184>");
	p_OnSemant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<186>");
	m_attrs&=-2097153;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<188>");
	m_attrs|=1048576;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<190>");
	if((m_scope)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<191>");
		if((p_IsExtern())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<192>");
			if((dynamic_cast<c_ModuleDecl*>(m_scope))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<193>");
				p_AppScope()->m_allSemantedDecls->p_AddLast3(this);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<197>");
			m_scope->m_semanted->p_AddLast3(this);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<199>");
			if((dynamic_cast<c_GlobalDecl*>(this))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<200>");
				p_AppScope()->m_semantedGlobals->p_AddLast8(dynamic_cast<c_GlobalDecl*>(this));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<203>");
			if((dynamic_cast<c_ModuleDecl*>(m_scope))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<204>");
				p_AppScope()->m_semanted->p_AddLast3(this);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<205>");
				p_AppScope()->m_allSemantedDecls->p_AddLast3(this);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<210>");
		bb_decl_PopEnv();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<213>");
	bb_config_PopErr();
	return 0;
}
int c_Decl::p_IsPrivate(){
	DBG_ENTER("Decl.IsPrivate")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<72>");
	int t_=(((m_attrs&512)!=0)?1:0);
	return t_;
}
int c_Decl::p_AssertAccess(){
	DBG_ENTER("Decl.AssertAccess")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<152>");
	if((p_CheckAccess())!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<153>");
	if((p_IsPrivate())!=0){
		DBG_BLOCK();
		bb_config_Err(p_ToString()+String(L" is private.",12));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<154>");
	if((p_IsProtected())!=0){
		DBG_BLOCK();
		bb_config_Err(p_ToString()+String(L" is protected.",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<155>");
	bb_config_Err(p_ToString()+String(L" is inaccessible.",17));
	return 0;
}
c_Decl* c_Decl::p_Copy(){
	DBG_ENTER("Decl.Copy")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<159>");
	c_Decl* t_t=p_OnCopy();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<160>");
	t_t->m_munged=m_munged;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<161>");
	t_t->m_errInfo=m_errInfo;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<162>");
	return t_t;
}
int c_Decl::p_IsFinal(){
	DBG_ENTER("Decl.IsFinal")
	c_Decl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<80>");
	int t_=(((m_attrs&2048)!=0)?1:0);
	return t_;
}
void c_Decl::mark(){
	Object::mark();
	gc_mark_q(m_scope);
}
String c_Decl::debug(){
	String t="(Decl)\n";
	t+=dbg_decl("ident",&m_ident);
	t+=dbg_decl("attrs",&m_attrs);
	t+=dbg_decl("munged",&m_munged);
	t+=dbg_decl("errInfo",&m_errInfo);
	t+=dbg_decl("scope",&m_scope);
	return t;
}
c_ScopeDecl::c_ScopeDecl(){
	m_decls=(new c_List3)->m_new();
	m_declsMap=(new c_StringMap4)->m_new();
	m_semanted=(new c_List3)->m_new();
}
c_ScopeDecl* c_ScopeDecl::m_new(){
	DBG_ENTER("ScopeDecl.new")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<369>");
	c_Decl::m_new();
	return this;
}
int c_ScopeDecl::p_InsertDecl(c_Decl* t_decl){
	DBG_ENTER("ScopeDecl.InsertDecl")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<432>");
	if((t_decl->m_scope)!=0){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<434>");
	String t_ident=t_decl->m_ident;
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<435>");
	if(!((t_ident).Length()!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<437>");
	gc_assign(t_decl->m_scope,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<438>");
	m_decls->p_AddLast3(t_decl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<440>");
	c_StringMap4* t_decls=0;
	DBG_LOCAL(t_decls,"decls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<441>");
	Object* t_tdecl=m_declsMap->p_Get(t_ident);
	DBG_LOCAL(t_tdecl,"tdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<443>");
	if((dynamic_cast<c_FuncDecl*>(t_decl))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<444>");
		c_FuncDeclList* t_funcs=dynamic_cast<c_FuncDeclList*>(t_tdecl);
		DBG_LOCAL(t_funcs,"funcs")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<445>");
		if(((t_funcs)!=0) || !((t_tdecl)!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<446>");
			if(!((t_funcs)!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<447>");
				t_funcs=(new c_FuncDeclList)->m_new();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<448>");
				m_declsMap->p_Insert2(t_ident,(t_funcs));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<450>");
			t_funcs->p_AddLast4(dynamic_cast<c_FuncDecl*>(t_decl));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<452>");
			bb_config_Err(String(L"Duplicate identifier '",22)+t_ident+String(L"'.",2));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<454>");
		if(!((t_tdecl)!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<455>");
			m_declsMap->p_Insert2(t_ident,(t_decl));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<457>");
			bb_config_Err(String(L"Duplicate identifier '",22)+t_ident+String(L"'.",2));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<460>");
	if((t_decl->p_IsSemanted())!=0){
		DBG_BLOCK();
		m_semanted->p_AddLast3(t_decl);
	}
	return 0;
}
Object* c_ScopeDecl::p_GetDecl(String t_ident){
	DBG_ENTER("ScopeDecl.GetDecl")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<472>");
	Object* t_decl=m_declsMap->p_Get(t_ident);
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<473>");
	if(!((t_decl)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<475>");
	c_AliasDecl* t_adecl=dynamic_cast<c_AliasDecl*>(t_decl);
	DBG_LOCAL(t_adecl,"adecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<476>");
	if(!((t_adecl)!=0)){
		DBG_BLOCK();
		return t_decl;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<478>");
	if((t_adecl->p_CheckAccess())!=0){
		DBG_BLOCK();
		return t_adecl->m_decl;
	}
	return 0;
}
Object* c_ScopeDecl::p_FindDecl(String t_ident){
	DBG_ENTER("ScopeDecl.FindDecl")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<483>");
	if(bb_decl__env!=this){
		DBG_BLOCK();
		Object* t_=p_GetDecl(t_ident);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<485>");
	c_ScopeDecl* t_tscope=this;
	DBG_LOCAL(t_tscope,"tscope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<486>");
	while((t_tscope)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<487>");
		Object* t_decl=t_tscope->p_GetDecl(t_ident);
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<488>");
		if((t_decl)!=0){
			DBG_BLOCK();
			return t_decl;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<489>");
		t_tscope=t_tscope->m_scope;
	}
	return 0;
}
int c_ScopeDecl::p_InsertDecls(c_List3* t_decls){
	DBG_ENTER("ScopeDecl.InsertDecls")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decls,"decls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<465>");
	c_Enumerator2* t_=t_decls->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<466>");
		p_InsertDecl(t_decl);
	}
	return 0;
}
c_FuncDecl* c_ScopeDecl::p_FindFuncDecl(String t_ident,Array<c_Expr* > t_argExprs,int t_explicit){
	DBG_ENTER("ScopeDecl.FindFuncDecl")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_argExprs,"argExprs")
	DBG_LOCAL(t_explicit,"explicit")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<549>");
	c_FuncDeclList* t_funcs=dynamic_cast<c_FuncDeclList*>(p_FindDecl(t_ident));
	DBG_LOCAL(t_funcs,"funcs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<550>");
	if(!((t_funcs)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<552>");
	c_Enumerator3* t_=t_funcs->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_FuncDecl* t_func=t_->p_NextObject();
		DBG_LOCAL(t_func,"func")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<553>");
		t_func->p_Semant();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<556>");
	c_FuncDecl* t_match=0;
	int t_isexact=0;
	String t_err=String();
	DBG_LOCAL(t_match,"match")
	DBG_LOCAL(t_isexact,"isexact")
	DBG_LOCAL(t_err,"err")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<558>");
	c_Enumerator3* t_2=t_funcs->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_FuncDecl* t_func2=t_2->p_NextObject();
		DBG_LOCAL(t_func2,"func")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<561>");
		Array<c_ArgDecl* > t_argDecls=t_func2->m_argDecls;
		DBG_LOCAL(t_argDecls,"argDecls")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<563>");
		if(t_argExprs.Length()>t_argDecls.Length()){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<565>");
		int t_exact=1;
		DBG_LOCAL(t_exact,"exact")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<566>");
		int t_possible=1;
		DBG_LOCAL(t_possible,"possible")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<568>");
		for(int t_i=0;t_i<t_argDecls.Length();t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<570>");
			if(t_i<t_argExprs.Length() && ((t_argExprs.At(t_i))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<572>");
				c_Type* t_declTy=t_argDecls.At(t_i)->m_type;
				DBG_LOCAL(t_declTy,"declTy")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<573>");
				c_Type* t_exprTy=t_argExprs.At(t_i)->m_exprType;
				DBG_LOCAL(t_exprTy,"exprTy")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<575>");
				if((t_exprTy->p_EqualsType(t_declTy))!=0){
					DBG_BLOCK();
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<577>");
				t_exact=0;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<579>");
				if(!((t_explicit)!=0) && ((t_exprTy->p_ExtendsType(t_declTy))!=0)){
					DBG_BLOCK();
					continue;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<581>");
				if((t_argDecls.At(t_i)->m_init)!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<583>");
					if(!((t_explicit)!=0)){
						DBG_BLOCK();
						continue;
					}
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<587>");
			t_possible=0;
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<588>");
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<591>");
		if(!((t_possible)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<593>");
		if((t_exact)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<594>");
			if((t_isexact)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<595>");
				bb_config_Err(String(L"Unable to determine overload to use: ",37)+t_match->p_ToString()+String(L" or ",4)+t_func2->p_ToString()+String(L".",1));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<597>");
				t_err=String();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<598>");
				t_match=t_func2;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<599>");
				t_isexact=1;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<602>");
			if(!((t_isexact)!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<603>");
				if((t_match)!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<604>");
					t_err=String(L"Unable to determine overload to use: ",37)+t_match->p_ToString()+String(L" or ",4)+t_func2->p_ToString()+String(L".",1);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<606>");
					t_match=t_func2;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<613>");
	if(!((t_isexact)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<614>");
		if((t_err).Length()!=0){
			DBG_BLOCK();
			bb_config_Err(t_err);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<615>");
		if((t_explicit)!=0){
			DBG_BLOCK();
			return 0;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<618>");
	if(!((t_match)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<619>");
		String t_t=String();
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<620>");
		for(int t_i2=0;t_i2<t_argExprs.Length();t_i2=t_i2+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i2,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<621>");
			if((t_t).Length()!=0){
				DBG_BLOCK();
				t_t=t_t+String(L",",1);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<622>");
			if((t_argExprs.At(t_i2))!=0){
				DBG_BLOCK();
				t_t=t_t+t_argExprs.At(t_i2)->m_exprType->p_ToString();
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<624>");
		bb_config_Err(String(L"Unable to find overload for ",28)+t_ident+String(L"(",1)+t_t+String(L").",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<627>");
	t_match->p_AssertAccess();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<629>");
	return t_match;
}
c_List3* c_ScopeDecl::p_Decls(){
	DBG_ENTER("ScopeDecl.Decls")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<384>");
	return m_decls;
}
c_Type* c_ScopeDecl::p_FindType(String t_ident,Array<c_Type* > t_args){
	DBG_ENTER("ScopeDecl.FindType")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<502>");
	Object* t_decl=p_GetDecl(t_ident);
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<503>");
	if((t_decl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<504>");
		c_Type* t_type=dynamic_cast<c_Type*>(t_decl);
		DBG_LOCAL(t_type,"type")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<505>");
		if((t_type)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<506>");
			if((t_args.Length())!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Wrong number of type arguments",30));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<507>");
			return t_type;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<509>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<510>");
		if((t_cdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<511>");
			t_cdecl->p_AssertAccess();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<512>");
			t_cdecl=t_cdecl->p_GenClassInstance(t_args);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<513>");
			t_cdecl->p_Semant();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<514>");
			c_Type* t_=(t_cdecl->m_objectType);
			return t_;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<517>");
	if((m_scope)!=0){
		DBG_BLOCK();
		c_Type* t_2=m_scope->p_FindType(t_ident,t_args);
		return t_2;
	}
	return 0;
}
c_List4* c_ScopeDecl::p_MethodDecls(String t_id){
	DBG_ENTER("ScopeDecl.MethodDecls")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<402>");
	c_List4* t_fdecls=(new c_List4)->m_new();
	DBG_LOCAL(t_fdecls,"fdecls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<403>");
	c_Enumerator2* t_=m_decls->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<404>");
		if(((t_id).Length()!=0) && t_decl->m_ident!=t_id){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<405>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<406>");
		if(((t_fdecl)!=0) && t_fdecl->p_IsMethod()){
			DBG_BLOCK();
			t_fdecls->p_AddLast4(t_fdecl);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<408>");
	return t_fdecls;
}
c_List3* c_ScopeDecl::p_Semanted(){
	DBG_ENTER("ScopeDecl.Semanted")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<388>");
	return m_semanted;
}
c_List4* c_ScopeDecl::p_SemantedMethods(String t_id){
	DBG_ENTER("ScopeDecl.SemantedMethods")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<422>");
	c_List4* t_fdecls=(new c_List4)->m_new();
	DBG_LOCAL(t_fdecls,"fdecls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<423>");
	c_Enumerator2* t_=m_semanted->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<424>");
		if(((t_id).Length()!=0) && t_decl->m_ident!=t_id){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<425>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<426>");
		if(((t_fdecl)!=0) && t_fdecl->p_IsMethod()){
			DBG_BLOCK();
			t_fdecls->p_AddLast4(t_fdecl);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<428>");
	return t_fdecls;
}
c_ValDecl* c_ScopeDecl::p_FindValDecl(String t_ident){
	DBG_ENTER("ScopeDecl.FindValDecl")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<494>");
	c_ValDecl* t_decl=dynamic_cast<c_ValDecl*>(p_FindDecl(t_ident));
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<495>");
	if(!((t_decl)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<496>");
	t_decl->p_AssertAccess();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<497>");
	t_decl->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<498>");
	return t_decl;
}
c_Decl* c_ScopeDecl::p_OnCopy(){
	DBG_ENTER("ScopeDecl.OnCopy")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<380>");
	bb_config_InternalErr(String(L"Internal error",14));
	return 0;
}
int c_ScopeDecl::p_OnSemant(){
	DBG_ENTER("ScopeDecl.OnSemant")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
c_List4* c_ScopeDecl::p_SemantedFuncs(String t_id){
	DBG_ENTER("ScopeDecl.SemantedFuncs")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<412>");
	c_List4* t_fdecls=(new c_List4)->m_new();
	DBG_LOCAL(t_fdecls,"fdecls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<413>");
	c_Enumerator2* t_=m_semanted->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<414>");
		if(((t_id).Length()!=0) && t_decl->m_ident!=t_id){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<415>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<416>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			t_fdecls->p_AddLast4(t_fdecl);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<418>");
	return t_fdecls;
}
c_ModuleDecl* c_ScopeDecl::p_FindModuleDecl(String t_ident){
	DBG_ENTER("ScopeDecl.FindModuleDecl")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<538>");
	c_ModuleDecl* t_decl=dynamic_cast<c_ModuleDecl*>(p_GetDecl(t_ident));
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<539>");
	if((t_decl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<540>");
		t_decl->p_AssertAccess();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<541>");
		t_decl->p_Semant();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<542>");
		return t_decl;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<544>");
	if((m_scope)!=0){
		DBG_BLOCK();
		c_ModuleDecl* t_=m_scope->p_FindModuleDecl(t_ident);
		return t_;
	}
	return 0;
}
c_List4* c_ScopeDecl::p_FuncDecls(String t_id){
	DBG_ENTER("ScopeDecl.FuncDecls")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<392>");
	c_List4* t_fdecls=(new c_List4)->m_new();
	DBG_LOCAL(t_fdecls,"fdecls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<393>");
	c_Enumerator2* t_=m_decls->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<394>");
		if(((t_id).Length()!=0) && t_decl->m_ident!=t_id){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<395>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<396>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			t_fdecls->p_AddLast4(t_fdecl);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<398>");
	return t_fdecls;
}
c_ScopeDecl* c_ScopeDecl::p_FindScopeDecl(String t_ident){
	DBG_ENTER("ScopeDecl.FindScopeDecl")
	c_ScopeDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<521>");
	Object* t_decl=p_FindDecl(t_ident);
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<522>");
	c_Type* t_type=dynamic_cast<c_Type*>(t_decl);
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<523>");
	if((t_type)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<524>");
		if(!((dynamic_cast<c_ObjectType*>(t_type))!=0)){
			DBG_BLOCK();
			return 0;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<525>");
		c_ScopeDecl* t_=(t_type->p_GetClass());
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<527>");
	c_ScopeDecl* t_scope=dynamic_cast<c_ScopeDecl*>(t_decl);
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<528>");
	if((t_scope)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<529>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_scope);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<530>");
		if(((t_cdecl)!=0) && ((t_cdecl->m_args).Length()!=0)){
			DBG_BLOCK();
			return 0;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<531>");
		t_scope->p_AssertAccess();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<532>");
		t_scope->p_Semant();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<533>");
		return t_scope;
	}
	return 0;
}
void c_ScopeDecl::mark(){
	c_Decl::mark();
	gc_mark_q(m_decls);
	gc_mark_q(m_declsMap);
	gc_mark_q(m_semanted);
}
String c_ScopeDecl::debug(){
	String t="(ScopeDecl)\n";
	t=c_Decl::debug()+t;
	t+=dbg_decl("decls",&m_decls);
	t+=dbg_decl("semanted",&m_semanted);
	t+=dbg_decl("declsMap",&m_declsMap);
	return t;
}
c_ConfigScope::c_ConfigScope(){
	m_cdecls=(new c_StringMap)->m_new();
	m_vars=(new c_StringMap2)->m_new();
}
c_ConfigScope* c_ConfigScope::m_new(){
	DBG_ENTER("ConfigScope.new")
	c_ConfigScope *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<18>");
	c_ScopeDecl::m_new();
	return this;
}
c_ValDecl* c_ConfigScope::p_FindValDecl(String t_ident){
	DBG_ENTER("ConfigScope.FindValDecl")
	c_ConfigScope *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<24>");
	if(m_cdecls->p_Contains(t_ident)){
		DBG_BLOCK();
		c_ValDecl* t_=(m_cdecls->p_Get(t_ident));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<25>");
	c_ValDecl* t_2=((new c_ConstDecl)->m_new(t_ident,1048576,(c_Type::m_boolType),0));
	return t_2;
}
void c_ConfigScope::mark(){
	c_ScopeDecl::mark();
	gc_mark_q(m_cdecls);
	gc_mark_q(m_vars);
}
String c_ConfigScope::debug(){
	String t="(ConfigScope)\n";
	t=c_ScopeDecl::debug()+t;
	t+=dbg_decl("vars",&m_vars);
	t+=dbg_decl("cdecls",&m_cdecls);
	return t;
}
String bb_config__errInfo;
c_ConfigScope* bb_config__cfgScope;
c_ValDecl::c_ValDecl(){
	m_type=0;
	m_init=0;
}
c_ValDecl* c_ValDecl::m_new(){
	DBG_ENTER("ValDecl.new")
	c_ValDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<218>");
	c_Decl::m_new();
	return this;
}
String c_ValDecl::p_ToString(){
	DBG_ENTER("ValDecl.ToString")
	c_ValDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<224>");
	String t_t=c_Decl::p_ToString();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<225>");
	if((m_type)!=0){
		DBG_BLOCK();
		String t_=t_t+String(L":",1)+m_type->p_ToString();
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<226>");
	return t_t;
}
int c_ValDecl::p_OnSemant(){
	DBG_ENTER("ValDecl.OnSemant")
	c_ValDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<234>");
	if((m_type)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<235>");
		gc_assign(m_type,m_type->p_Semant());
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<236>");
		if((m_init)!=0){
			DBG_BLOCK();
			gc_assign(m_init,m_init->p_Semant2(m_type,0));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<237>");
		if((m_init)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<238>");
			gc_assign(m_init,m_init->p_Semant());
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<239>");
			gc_assign(m_type,m_init->m_exprType);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<241>");
			bb_config_InternalErr(String(L"Internal error",14));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<243>");
	if((dynamic_cast<c_VoidType*>(m_type))!=0){
		DBG_BLOCK();
		bb_config_Err(String(L"Declaration has void type.",26));
	}
	return 0;
}
c_Expr* c_ValDecl::p_CopyInit(){
	DBG_ENTER("ValDecl.CopyInit")
	c_ValDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<230>");
	if((m_init)!=0){
		DBG_BLOCK();
		c_Expr* t_=m_init->p_Copy();
		return t_;
	}
	return 0;
}
void c_ValDecl::mark(){
	c_Decl::mark();
	gc_mark_q(m_type);
	gc_mark_q(m_init);
}
String c_ValDecl::debug(){
	String t="(ValDecl)\n";
	t=c_Decl::debug()+t;
	t+=dbg_decl("type",&m_type);
	t+=dbg_decl("init",&m_init);
	return t;
}
c_ConstDecl::c_ConstDecl(){
	m_value=String();
}
c_ConstDecl* c_ConstDecl::m_new(String t_ident,int t_attrs,c_Type* t_type,c_Expr* t_init){
	DBG_ENTER("ConstDecl.new")
	c_ConstDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_type,"type")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<251>");
	c_ValDecl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<252>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<253>");
	this->m_munged=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<254>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<255>");
	gc_assign(this->m_type,t_type);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<256>");
	gc_assign(this->m_init,t_init);
	return this;
}
c_ConstDecl* c_ConstDecl::m_new2(){
	DBG_ENTER("ConstDecl.new")
	c_ConstDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<248>");
	c_ValDecl::m_new();
	return this;
}
c_Decl* c_ConstDecl::p_OnCopy(){
	DBG_ENTER("ConstDecl.OnCopy")
	c_ConstDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<260>");
	c_Decl* t_=((new c_ConstDecl)->m_new(m_ident,m_attrs,m_type,p_CopyInit()));
	return t_;
}
int c_ConstDecl::p_OnSemant(){
	DBG_ENTER("ConstDecl.OnSemant")
	c_ConstDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<264>");
	c_ValDecl::p_OnSemant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<265>");
	if(!((p_IsExtern())!=0)){
		DBG_BLOCK();
		m_value=m_init->p_Eval();
	}
	return 0;
}
void c_ConstDecl::mark(){
	c_ValDecl::mark();
}
String c_ConstDecl::debug(){
	String t="(ConstDecl)\n";
	t=c_ValDecl::debug()+t;
	t+=dbg_decl("value",&m_value);
	return t;
}
c_Map::c_Map(){
	m_root=0;
}
c_Map* c_Map::m_new(){
	DBG_ENTER("Map.new")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
c_Node* c_Map::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
c_ConstDecl* c_Map::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
int c_Map::p_RotateLeft(c_Node* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map::p_RotateRight(c_Node* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map::p_InsertFixup(c_Node* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map::p_Set(String t_key,c_ConstDecl* t_value){
	DBG_ENTER("Map.Set")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
bool c_Map::p_Contains(String t_key){
	DBG_ENTER("Map.Contains")
	c_Map *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<25>");
	bool t_=p_FindNode(t_key)!=0;
	return t_;
}
void c_Map::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap::c_StringMap(){
}
c_StringMap* c_StringMap::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map::m_new();
	return this;
}
int c_StringMap::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap::mark(){
	c_Map::mark();
}
String c_StringMap::debug(){
	String t="(StringMap)\n";
	t=c_Map::debug()+t;
	return t;
}
c_Node::c_Node(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node* c_Node::m_new(String t_key,c_ConstDecl* t_value,int t_color,c_Node* t_parent){
	DBG_ENTER("Node.new")
	c_Node *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node* c_Node::m_new2(){
	DBG_ENTER("Node.new")
	c_Node *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
void c_Node::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
c_Expr::c_Expr(){
	m_exprType=0;
}
c_Expr* c_Expr::m_new(){
	DBG_ENTER("Expr.new")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<9>");
	return this;
}
c_Expr* c_Expr::p_Semant(){
	DBG_ENTER("Expr.Semant")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<21>");
	bb_config_InternalErr(String(L"Internal error",14));
	return 0;
}
Array<c_Expr* > c_Expr::p_SemantArgs(Array<c_Expr* > t_args){
	DBG_ENTER("Expr.SemantArgs")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<74>");
	t_args=t_args.Slice(0);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<75>");
	for(int t_i=0;t_i<t_args.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<76>");
		if((t_args.At(t_i))!=0){
			DBG_BLOCK();
			gc_assign(t_args.At(t_i),t_args.At(t_i)->p_Semant());
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<78>");
	return t_args;
}
c_Expr* c_Expr::p_Cast(c_Type* t_ty,int t_castFlags){
	DBG_ENTER("Expr.Cast")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_castFlags,"castFlags")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<69>");
	if((m_exprType->p_EqualsType(t_ty))!=0){
		DBG_BLOCK();
		return this;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<70>");
	c_Expr* t_=((new c_CastExpr)->m_new(t_ty,this,t_castFlags))->p_Semant();
	return t_;
}
Array<c_Expr* > c_Expr::p_CastArgs(Array<c_Expr* > t_args,c_FuncDecl* t_funcDecl){
	DBG_ENTER("Expr.CastArgs")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_funcDecl,"funcDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<82>");
	if(t_args.Length()>t_funcDecl->m_argDecls.Length()){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<84>");
	t_args=t_args.Resize(t_funcDecl->m_argDecls.Length());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<86>");
	for(int t_i=0;t_i<t_args.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<87>");
		if((t_args.At(t_i))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<88>");
			gc_assign(t_args.At(t_i),t_args.At(t_i)->p_Cast(t_funcDecl->m_argDecls.At(t_i)->m_type,0));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<89>");
			if((t_funcDecl->m_argDecls.At(t_i)->m_init)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<90>");
				gc_assign(t_args.At(t_i),t_funcDecl->m_argDecls.At(t_i)->m_init);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<92>");
				bb_config_Err(String(L"Missing function argument '",27)+t_funcDecl->m_argDecls.At(t_i)->m_ident+String(L"'.",2));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<95>");
	return t_args;
}
String c_Expr::p_ToString(){
	DBG_ENTER("Expr.ToString")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<13>");
	return String(L"<Expr>",6);
}
String c_Expr::p_Eval(){
	DBG_ENTER("Expr.Eval")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<37>");
	bb_config_Err(p_ToString()+String(L" cannot be statically evaluated.",32));
	return String();
}
c_Expr* c_Expr::p_EvalConst(){
	DBG_ENTER("Expr.EvalConst")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<41>");
	c_Expr* t_=((new c_ConstExpr)->m_new(m_exprType,p_Eval()))->p_Semant();
	return t_;
}
c_Expr* c_Expr::p_Semant2(c_Type* t_ty,int t_castFlags){
	DBG_ENTER("Expr.Semant")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_castFlags,"castFlags")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<62>");
	c_Expr* t_expr=p_Semant();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<63>");
	if((t_expr->m_exprType->p_EqualsType(t_ty))!=0){
		DBG_BLOCK();
		return t_expr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<64>");
	c_Expr* t_=((new c_CastExpr)->m_new(t_ty,t_expr,t_castFlags))->p_Semant();
	return t_;
}
c_Expr* c_Expr::p_Copy(){
	DBG_ENTER("Expr.Copy")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<17>");
	bb_config_InternalErr(String(L"Internal error",14));
	return 0;
}
c_Expr* c_Expr::p_CopyExpr(c_Expr* t_expr){
	DBG_ENTER("Expr.CopyExpr")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<108>");
	if(!((t_expr)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<109>");
	c_Expr* t_=t_expr->p_Copy();
	return t_;
}
Array<c_Expr* > c_Expr::p_CopyArgs(Array<c_Expr* > t_exprs){
	DBG_ENTER("Expr.CopyArgs")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_exprs,"exprs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<113>");
	t_exprs=t_exprs.Slice(0);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<114>");
	for(int t_i=0;t_i<t_exprs.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<115>");
		gc_assign(t_exprs.At(t_i),p_CopyExpr(t_exprs.At(t_i)));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<117>");
	return t_exprs;
}
c_Type* c_Expr::p_BalanceTypes(c_Type* t_lhs,c_Type* t_rhs){
	DBG_ENTER("Expr.BalanceTypes")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<99>");
	if(((dynamic_cast<c_StringType*>(t_lhs))!=0) || ((dynamic_cast<c_StringType*>(t_rhs))!=0)){
		DBG_BLOCK();
		c_Type* t_=(c_Type::m_stringType);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<100>");
	if(((dynamic_cast<c_FloatType*>(t_lhs))!=0) || ((dynamic_cast<c_FloatType*>(t_rhs))!=0)){
		DBG_BLOCK();
		c_Type* t_2=(c_Type::m_floatType);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<101>");
	if(((dynamic_cast<c_IntType*>(t_lhs))!=0) || ((dynamic_cast<c_IntType*>(t_rhs))!=0)){
		DBG_BLOCK();
		c_Type* t_3=(c_Type::m_intType);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<102>");
	if((t_lhs->p_ExtendsType(t_rhs))!=0){
		DBG_BLOCK();
		return t_rhs;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<103>");
	if((t_rhs->p_ExtendsType(t_lhs))!=0){
		DBG_BLOCK();
		return t_lhs;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<104>");
	bb_config_Err(String(L"Can't balance types ",20)+t_lhs->p_ToString()+String(L" and ",5)+t_rhs->p_ToString()+String(L".",1));
	return 0;
}
c_Expr* c_Expr::p_SemantSet(String t_op,c_Expr* t_rhs){
	DBG_ENTER("Expr.SemantSet")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<25>");
	bb_config_Err(p_ToString()+String(L" cannot be assigned to.",23));
	return 0;
}
c_ScopeDecl* c_Expr::p_SemantScope(){
	DBG_ENTER("Expr.SemantScope")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<33>");
	return 0;
}
c_Expr* c_Expr::p_SemantFunc(Array<c_Expr* > t_args){
	DBG_ENTER("Expr.SemantFunc")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<29>");
	bb_config_Err(p_ToString()+String(L" cannot be invoked.",19));
	return 0;
}
bool c_Expr::p_SideEffects(){
	DBG_ENTER("Expr.SideEffects")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<45>");
	return true;
}
String c_Expr::p_Trans(){
	DBG_ENTER("Expr.Trans")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<49>");
	bb_config_Err(String(L"TODO!",5));
	return String();
}
String c_Expr::p_TransStmt(){
	DBG_ENTER("Expr.TransStmt")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<53>");
	String t_=p_Trans();
	return t_;
}
String c_Expr::p_TransVar(){
	DBG_ENTER("Expr.TransVar")
	c_Expr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<57>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
void c_Expr::mark(){
	Object::mark();
	gc_mark_q(m_exprType);
}
String c_Expr::debug(){
	String t="(Expr)\n";
	t+=dbg_decl("exprType",&m_exprType);
	return t;
}
c_BoolType::c_BoolType(){
}
c_BoolType* c_BoolType::m_new(){
	DBG_ENTER("BoolType.new")
	c_BoolType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<64>");
	c_Type::m_new();
	return this;
}
int c_BoolType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("BoolType.EqualsType")
	c_BoolType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<67>");
	int t_=((dynamic_cast<c_BoolType*>(t_ty)!=0)?1:0);
	return t_;
}
int c_BoolType::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("BoolType.ExtendsType")
	c_BoolType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<71>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<72>");
		c_Expr* t_expr=((new c_ConstExpr)->m_new((this),String()))->p_Semant();
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<73>");
		c_Expr* t_[]={t_expr};
		c_FuncDecl* t_ctor=t_ty->p_GetClass()->p_FindFuncDecl(String(L"new",3),Array<c_Expr* >(t_,1),1);
		DBG_LOCAL(t_ctor,"ctor")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<74>");
		int t_2=((((t_ctor)!=0) && t_ctor->p_IsCtor())?1:0);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<76>");
	int t_3=((dynamic_cast<c_IntType*>(t_ty)!=0 || dynamic_cast<c_BoolType*>(t_ty)!=0)?1:0);
	return t_3;
}
c_ClassDecl* c_BoolType::p_GetClass(){
	DBG_ENTER("BoolType.GetClass")
	c_BoolType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<80>");
	c_ClassDecl* t_=dynamic_cast<c_ClassDecl*>(bb_decl__env->p_FindDecl(String(L"bool",4)));
	return t_;
}
String c_BoolType::p_ToString(){
	DBG_ENTER("BoolType.ToString")
	c_BoolType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<84>");
	return String(L"Bool",4);
}
void c_BoolType::mark(){
	c_Type::mark();
}
String c_BoolType::debug(){
	String t="(BoolType)\n";
	t=c_Type::debug()+t;
	return t;
}
c_Map2::c_Map2(){
	m_root=0;
}
c_Map2* c_Map2::m_new(){
	DBG_ENTER("Map.new")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
int c_Map2::p_RotateLeft2(c_Node2* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node2* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map2::p_RotateRight2(c_Node2* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node2* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map2::p_InsertFixup2(c_Node2* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node2* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft2(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight2(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node2* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight2(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft2(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map2::p_Set2(String t_key,String t_value){
	DBG_ENTER("Map.Set")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node2* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node2* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				t_node->m_value=t_value;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node2)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup2(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
c_Node2* c_Map2::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node2* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
String c_Map2::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node2* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return String();
}
bool c_Map2::p_Contains(String t_key){
	DBG_ENTER("Map.Contains")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<25>");
	bool t_=p_FindNode(t_key)!=0;
	return t_;
}
c_Node2* c_Map2::p_FirstNode(){
	DBG_ENTER("Map.FirstNode")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<125>");
	if(!((m_root)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<127>");
	c_Node2* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<128>");
	while((t_node->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<129>");
		t_node=t_node->m_left;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<131>");
	return t_node;
}
c_NodeEnumerator3* c_Map2::p_ObjectEnumerator(){
	DBG_ENTER("Map.ObjectEnumerator")
	c_Map2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<121>");
	c_NodeEnumerator3* t_=(new c_NodeEnumerator3)->m_new(p_FirstNode());
	return t_;
}
void c_Map2::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map2::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap2::c_StringMap2(){
}
c_StringMap2* c_StringMap2::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map2::m_new();
	return this;
}
int c_StringMap2::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap2::mark(){
	c_Map2::mark();
}
String c_StringMap2::debug(){
	String t="(StringMap)\n";
	t=c_Map2::debug()+t;
	return t;
}
c_Node2::c_Node2(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=String();
	m_color=0;
	m_parent=0;
}
c_Node2* c_Node2::m_new(String t_key,String t_value,int t_color,c_Node2* t_parent){
	DBG_ENTER("Node.new")
	c_Node2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	this->m_value=t_value;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node2* c_Node2::m_new2(){
	DBG_ENTER("Node.new")
	c_Node2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
c_Node2* c_Node2::p_NextNode(){
	DBG_ENTER("Node.NextNode")
	c_Node2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<385>");
	c_Node2* t_node=0;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<386>");
	if((m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<387>");
		t_node=m_right;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<388>");
		while((t_node->m_left)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<389>");
			t_node=t_node->m_left;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<391>");
		return t_node;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<393>");
	t_node=this;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<394>");
	c_Node2* t_parent=this->m_parent;
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<395>");
	while(((t_parent)!=0) && t_node==t_parent->m_right){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<396>");
		t_node=t_parent;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<397>");
		t_parent=t_parent->m_parent;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<399>");
	return t_parent;
}
String c_Node2::p_Key(){
	DBG_ENTER("Node.Key")
	c_Node2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<377>");
	return m_key;
}
String c_Node2::p_Value(){
	DBG_ENTER("Node.Value")
	c_Node2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<381>");
	return m_value;
}
void c_Node2::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_parent);
}
String c_Node2::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
int bb_config_SetConfigVar(String t_key,String t_val,c_Type* t_type){
	DBG_ENTER("SetConfigVar")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_val,"val")
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<53>");
	c_ConstDecl* t_decl=bb_config__cfgScope->m_cdecls->p_Get(t_key);
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<54>");
	if((t_decl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<55>");
		gc_assign(t_decl->m_type,t_type);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<57>");
		t_decl=(new c_ConstDecl)->m_new(t_key,1048576,t_type,0);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<58>");
		bb_config__cfgScope->m_cdecls->p_Set(t_key,t_decl);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<60>");
	t_decl->m_value=t_val;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<61>");
	if((dynamic_cast<c_BoolType*>(t_type))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<62>");
		if((t_val).Length()!=0){
			DBG_BLOCK();
			t_val=String(L"1",1);
		}else{
			DBG_BLOCK();
			t_val=String(L"0",1);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<64>");
	bb_config__cfgScope->m_vars->p_Set2(t_key,t_val);
	return 0;
}
int bb_config_SetConfigVar2(String t_key,String t_val){
	DBG_ENTER("SetConfigVar")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_val,"val")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<49>");
	bb_config_SetConfigVar(t_key,t_val,(c_Type::m_stringType));
	return 0;
}
c_Stack::c_Stack(){
	m_data=Array<String >();
	m_length=0;
}
c_Stack* c_Stack::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack* c_Stack::m_new2(Array<String > t_data){
	DBG_ENTER("Stack.new")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack::p_Push(String t_value){
	DBG_ENTER("Stack.Push")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	m_data.At(m_length)=t_value;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack::p_Push2(Array<String > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push(t_values.At(t_offset+t_i));
	}
}
void c_Stack::p_Push3(Array<String > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push2(t_values,t_offset,t_values.Length()-t_offset);
}
bool c_Stack::p_IsEmpty(){
	DBG_ENTER("Stack.IsEmpty")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<60>");
	bool t_=m_length==0;
	return t_;
}
Array<String > c_Stack::p_ToArray(){
	DBG_ENTER("Stack.ToArray")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<18>");
	Array<String > t_t=Array<String >(m_length);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<19>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<20>");
		t_t.At(t_i)=m_data.At(t_i);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<22>");
	return t_t;
}
String c_Stack::m_NIL;
void c_Stack::p_Length(int t_newlength){
	DBG_ENTER("Stack.Length")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_newlength,"newlength")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<45>");
	if(t_newlength<m_length){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<46>");
		for(int t_i=t_newlength;t_i<m_length;t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<47>");
			m_data.At(t_i)=m_NIL;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<49>");
		if(t_newlength>m_data.Length()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<50>");
			gc_assign(m_data,m_data.Resize(bb_math_Max(m_length*2+10,t_newlength)));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<52>");
	m_length=t_newlength;
}
int c_Stack::p_Length2(){
	DBG_ENTER("Stack.Length")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<56>");
	return m_length;
}
String c_Stack::p_Get2(int t_index){
	DBG_ENTER("Stack.Get")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_index,"index")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<104>");
	return m_data.At(t_index);
}
String c_Stack::p_Pop(){
	DBG_ENTER("Stack.Pop")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<89>");
	m_length-=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<90>");
	String t_v=m_data.At(m_length);
	DBG_LOCAL(t_v,"v")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<91>");
	m_data.At(m_length)=m_NIL;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<92>");
	return t_v;
}
void c_Stack::p_Clear(){
	DBG_ENTER("Stack.Clear")
	c_Stack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<34>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<35>");
		m_data.At(t_i)=m_NIL;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<37>");
	m_length=0;
}
void c_Stack::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("NIL",&c_Stack::m_NIL);
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_StringStack::c_StringStack(){
}
c_StringStack* c_StringStack::m_new(Array<String > t_data){
	DBG_ENTER("StringStack.new")
	c_StringStack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<355>");
	c_Stack::m_new2(t_data);
	return this;
}
c_StringStack* c_StringStack::m_new2(){
	DBG_ENTER("StringStack.new")
	c_StringStack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<352>");
	c_Stack::m_new();
	return this;
}
String c_StringStack::p_Join(String t_separator){
	DBG_ENTER("StringStack.Join")
	c_StringStack *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_separator,"separator")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<359>");
	String t_=t_separator.Join(p_ToArray());
	return t_;
}
void c_StringStack::mark(){
	c_Stack::mark();
}
String c_StringStack::debug(){
	String t="(StringStack)\n";
	t=c_Stack::debug()+t;
	return t;
}
String bb_config_GetConfigVar(String t_key){
	DBG_ENTER("GetConfigVar")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<68>");
	String t_=bb_config__cfgScope->m_vars->p_Get(t_key);
	return t_;
}
String bb_transcc_ReplaceEnv(String t_str){
	DBG_ENTER("ReplaceEnv")
	DBG_LOCAL(t_str,"str")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<28>");
	c_StringStack* t_bits=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_bits,"bits")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<30>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<31>");
		int t_i=t_str.Find(String(L"${",2),0);
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<32>");
		if(t_i==-1){
			DBG_BLOCK();
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<34>");
		int t_e=t_str.Find(String(L"}",1),t_i+2);
		DBG_LOCAL(t_e,"e")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<35>");
		if(t_e==-1){
			DBG_BLOCK();
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<37>");
		if(t_i>=2 && t_str.Slice(t_i-2,t_i)==String(L"//",2)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<38>");
			t_bits->p_Push(t_str.Slice(0,t_e+1));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<39>");
			t_str=t_str.Slice(t_e+1);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<40>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<43>");
		String t_t=t_str.Slice(t_i+2,t_e);
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<45>");
		String t_v=bb_config_GetConfigVar(t_t);
		DBG_LOCAL(t_v,"v")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<46>");
		if(!((t_v).Length()!=0)){
			DBG_BLOCK();
			t_v=GetEnv(t_t);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<48>");
		t_bits->p_Push(t_str.Slice(0,t_i));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<49>");
		t_bits->p_Push(t_v);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<51>");
		t_str=t_str.Slice(t_e+1);
	}while(!(false));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<53>");
	if(t_bits->p_IsEmpty()){
		DBG_BLOCK();
		return t_str;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<55>");
	t_bits->p_Push(t_str);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<56>");
	String t_=t_bits->p_Join(String());
	return t_;
}
c_Builder::c_Builder(){
	m_tcc=0;
	m_casedConfig=String();
	m_app=0;
	m_transCode=String();
	m_TEXT_FILES=String();
	m_IMAGE_FILES=String();
	m_SOUND_FILES=String();
	m_MUSIC_FILES=String();
	m_BINARY_FILES=String();
	m_DATA_FILES=String();
	m_syncData=false;
	m_dataFiles=(new c_StringMap2)->m_new();
}
c_Builder* c_Builder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("Builder.new")
	c_Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<8>");
	gc_assign(this->m_tcc,t_tcc);
	return this;
}
c_Builder* c_Builder::m_new2(){
	DBG_ENTER("Builder.new")
	c_Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<5>");
	return this;
}
void c_Builder::p_Make(){
	DBG_ENTER("Builder.Make")
	c_Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<19>");
	String t_1=m_tcc->m_opt_config;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<20>");
	if(t_1==String() || t_1==String(L"debug",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<21>");
		m_tcc->m_opt_config=String(L"debug",5);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<22>");
		m_casedConfig=String(L"Debug",5);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<23>");
		if(t_1==String(L"release",7)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<24>");
			m_casedConfig=String(L"Release",7);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<26>");
			bb_transcc_Die(String(L"Invalid config",14));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<29>");
	if(FileType(m_tcc->m_opt_srcpath)!=1){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Invalid source file",19));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<30>");
	m_tcc->m_opt_srcpath=RealPath(m_tcc->m_opt_srcpath);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<32>");
	if(!((m_tcc->m_opt_modpath).Length()!=0)){
		DBG_BLOCK();
		m_tcc->m_opt_modpath=m_tcc->m_monkeydir+String(L"/modules",8);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<34>");
	m_tcc->m_opt_modpath=String(L".;",2)+bb_os_ExtractDir(m_tcc->m_opt_srcpath)+String(L";",1)+m_tcc->m_opt_modpath+String(L";",1)+m_tcc->m_monkeydir+String(L"/targets/",9)+m_tcc->m_target->m_dir+String(L"/modules",8);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<36>");
	if(!m_tcc->m_opt_check){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<37>");
		m_tcc->m_opt_check=true;
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<38>");
		m_tcc->m_opt_update=true;
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<39>");
		m_tcc->m_opt_build=true;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<42>");
	bb_config_ENV_HOST=HostOS();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<43>");
	bb_config_ENV_CONFIG=m_tcc->m_opt_config;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<44>");
	bb_config_ENV_SAFEMODE=((m_tcc->m_opt_safe)?1:0);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<45>");
	bb_config_ENV_MODPATH=m_tcc->m_opt_modpath;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<46>");
	bb_config_ENV_TARGET=m_tcc->m_target->m_system;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<48>");
	this->p_Begin();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<51>");
	if(!m_tcc->m_opt_check){
		DBG_BLOCK();
		return;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<53>");
	bbPrint(String(L"Parsing...",10));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<55>");
	bb_config_SetConfigVar2(String(L"HOST",4),bb_config_ENV_HOST);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<56>");
	bb_config_SetConfigVar2(String(L"LANG",4),bb_config_ENV_LANG);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<57>");
	bb_config_SetConfigVar2(String(L"TARGET",6),bb_config_ENV_TARGET);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<58>");
	bb_config_SetConfigVar2(String(L"CONFIG",6),bb_config_ENV_CONFIG);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<59>");
	bb_config_SetConfigVar2(String(L"SAFEMODE",8),String(bb_config_ENV_SAFEMODE));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<61>");
	gc_assign(m_app,bb_parser_ParseApp(m_tcc->m_opt_srcpath));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<63>");
	bbPrint(String(L"Semanting...",12));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<64>");
	if((bb_config_GetConfigVar(String(L"REFLECTION_FILTER",17))).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<65>");
		c_Reflector* t_r=(new c_Reflector)->m_new();
		DBG_LOCAL(t_r,"r")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<66>");
		t_r->p_Semant3(m_app);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<68>");
		m_app->p_Semant();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<71>");
	bbPrint(String(L"Translating...",14));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<72>");
	c_StringStack* t_transbuf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_transbuf,"transbuf")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<73>");
	c_Enumerator* t_=m_app->m_fileImports->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		String t_file=t_->p_NextObject();
		DBG_LOCAL(t_file,"file")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<74>");
		if(bb_os_ExtractExt(t_file).ToLower()==bb_config_ENV_LANG){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<75>");
			t_transbuf->p_Push(LoadString(t_file));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<76>");
			t_transbuf->p_Push(String(L"\n",1));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<79>");
	t_transbuf->p_Push(bb_translator__trans->p_TransApp(m_app));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<82>");
	if(!m_tcc->m_opt_update){
		DBG_BLOCK();
		return;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<84>");
	bbPrint(String(L"Building...",11));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<86>");
	m_transCode=t_transbuf->p_Join(String());
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<88>");
	String t_buildPath=String();
	DBG_LOCAL(t_buildPath,"buildPath")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<90>");
	if((m_tcc->m_opt_builddir).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<91>");
		t_buildPath=bb_os_ExtractDir(m_tcc->m_opt_srcpath)+String(L"/",1)+m_tcc->m_opt_builddir;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<93>");
		t_buildPath=bb_os_StripExt(m_tcc->m_opt_srcpath)+String(L".build",6)+m_tcc->p_GetReleaseVersion();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<96>");
	String t_targetPath=t_buildPath+String(L"/",1)+m_tcc->m_target->m_dir;
	DBG_LOCAL(t_targetPath,"targetPath")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<98>");
	if(m_tcc->m_opt_clean){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<99>");
		bb_os_DeleteDir(t_targetPath,true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<100>");
		if(FileType(t_targetPath)!=0){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to clean target dir",26));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<103>");
	if(FileType(t_targetPath)==0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<104>");
		if(FileType(t_buildPath)==0){
			DBG_BLOCK();
			CreateDir(t_buildPath);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<105>");
		if(FileType(t_buildPath)!=2){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to create build dir: ",28)+t_buildPath);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<106>");
		if(!((bb_os_CopyDir(m_tcc->m_monkeydir+String(L"/targets/",9)+m_tcc->m_target->m_dir+String(L"/template",9),t_targetPath,true,false))!=0)){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to copy target dir",25));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<108>");
	if(FileType(t_targetPath)!=2){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Failed to create target dir: ",29)+t_targetPath);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<110>");
	String t_cfgPath=t_targetPath+String(L"/CONFIG.MONKEY",14);
	DBG_LOCAL(t_cfgPath,"cfgPath")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<111>");
	if(FileType(t_cfgPath)==1){
		DBG_BLOCK();
		bb_preprocessor_PreProcess(t_cfgPath,0);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<113>");
	m_TEXT_FILES=bb_config_GetConfigVar(String(L"TEXT_FILES",10));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<114>");
	m_IMAGE_FILES=bb_config_GetConfigVar(String(L"IMAGE_FILES",11));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<115>");
	m_SOUND_FILES=bb_config_GetConfigVar(String(L"SOUND_FILES",11));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<116>");
	m_MUSIC_FILES=bb_config_GetConfigVar(String(L"MUSIC_FILES",11));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<117>");
	m_BINARY_FILES=bb_config_GetConfigVar(String(L"BINARY_FILES",12));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<119>");
	m_DATA_FILES=m_TEXT_FILES;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<120>");
	if((m_IMAGE_FILES).Length()!=0){
		DBG_BLOCK();
		m_DATA_FILES=m_DATA_FILES+(String(L"|",1)+m_IMAGE_FILES);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<121>");
	if((m_SOUND_FILES).Length()!=0){
		DBG_BLOCK();
		m_DATA_FILES=m_DATA_FILES+(String(L"|",1)+m_SOUND_FILES);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<122>");
	if((m_MUSIC_FILES).Length()!=0){
		DBG_BLOCK();
		m_DATA_FILES=m_DATA_FILES+(String(L"|",1)+m_MUSIC_FILES);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<123>");
	if((m_BINARY_FILES).Length()!=0){
		DBG_BLOCK();
		m_DATA_FILES=m_DATA_FILES+(String(L"|",1)+m_BINARY_FILES);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<124>");
	m_DATA_FILES=m_DATA_FILES.Replace(String(L";",1),String(L"|",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<126>");
	m_syncData=bb_config_GetConfigVar(String(L"FAST_SYNC_PROJECT_DATA",22))==String(L"1",1);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<128>");
	String t_cd=CurrentDir();
	DBG_LOCAL(t_cd,"cd")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<130>");
	ChangeDir(t_targetPath);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<131>");
	this->p_MakeTarget();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<132>");
	ChangeDir(t_cd);
}
bool c_Builder::p_Execute(String t_cmd,bool t_failHard){
	DBG_ENTER("Builder.Execute")
	c_Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_cmd,"cmd")
	DBG_LOCAL(t_failHard,"failHard")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<150>");
	bool t_=m_tcc->p_Execute(t_cmd,t_failHard);
	return t_;
}
void c_Builder::p_CCopyFile(String t_src,String t_dst){
	DBG_ENTER("Builder.CCopyFile")
	c_Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_src,"src")
	DBG_LOCAL(t_dst,"dst")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<154>");
	if(FileTime(t_src)>FileTime(t_dst) || FileSize(t_src)!=FileSize(t_dst)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<155>");
		DeleteFile(t_dst);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<156>");
		CopyFile(t_src,t_dst);
	}
}
void c_Builder::p_CreateDataDir(String t_dir){
	DBG_ENTER("Builder.CreateDataDir")
	c_Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_dir,"dir")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<162>");
	t_dir=RealPath(t_dir);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<164>");
	if(!m_syncData){
		DBG_BLOCK();
		bb_os_DeleteDir(t_dir,true);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<165>");
	CreateDir(t_dir);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<167>");
	if(FileType(t_dir)!=2){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Failed to create target project data dir: ",42)+t_dir);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<169>");
	String t_dataPath=bb_os_StripExt(m_tcc->m_opt_srcpath)+String(L".data",5);
	DBG_LOCAL(t_dataPath,"dataPath")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<170>");
	if(FileType(t_dataPath)!=2){
		DBG_BLOCK();
		t_dataPath=String();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<173>");
	c_StringSet* t_udata=(new c_StringSet)->m_new();
	DBG_LOCAL(t_udata,"udata")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<176>");
	if((t_dataPath).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<178>");
		c_StringStack* t_srcs=(new c_StringStack)->m_new2();
		DBG_LOCAL(t_srcs,"srcs")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<179>");
		t_srcs->p_Push(t_dataPath);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<181>");
		while(!t_srcs->p_IsEmpty()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<183>");
			String t_src=t_srcs->p_Pop();
			DBG_LOCAL(t_src,"src")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<185>");
			Array<String > t_=LoadDir(t_src);
			int t_2=0;
			while(t_2<t_.Length()){
				DBG_BLOCK();
				String t_f=t_.At(t_2);
				t_2=t_2+1;
				DBG_LOCAL(t_f,"f")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<186>");
				if(t_f.StartsWith(String(L".",1))){
					DBG_BLOCK();
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<188>");
				String t_p=t_src+String(L"/",1)+t_f;
				DBG_LOCAL(t_p,"p")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<189>");
				String t_r=t_p.Slice(t_dataPath.Length()+1);
				DBG_LOCAL(t_r,"r")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<190>");
				String t_t=t_dir+String(L"/",1)+t_r;
				DBG_LOCAL(t_t,"t")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<192>");
				int t_22=FileType(t_p);
				DBG_LOCAL(t_22,"2")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<193>");
				if(t_22==1){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<194>");
					if(bb_transcc_MatchPath(t_r,m_DATA_FILES)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<195>");
						p_CCopyFile(t_p,t_t);
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<196>");
						t_udata->p_Insert(t_t);
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<197>");
						m_dataFiles->p_Set2(t_p,t_r);
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<199>");
					if(t_22==2){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<200>");
						CreateDir(t_t);
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<201>");
						t_srcs->p_Push(t_p);
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<210>");
	c_Enumerator* t_3=m_app->m_fileImports->p_ObjectEnumerator();
	while(t_3->p_HasNext()){
		DBG_BLOCK();
		String t_p2=t_3->p_NextObject();
		DBG_LOCAL(t_p2,"p")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<211>");
		String t_r2=bb_os_StripDir(t_p2);
		DBG_LOCAL(t_r2,"r")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<212>");
		String t_t2=t_dir+String(L"/",1)+t_r2;
		DBG_LOCAL(t_t2,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<213>");
		if(bb_transcc_MatchPath(t_r2,m_DATA_FILES)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<214>");
			p_CCopyFile(t_p2,t_t2);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<215>");
			t_udata->p_Insert(t_t2);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<216>");
			m_dataFiles->p_Set2(t_p2,t_r2);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<221>");
	if((t_dataPath).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<223>");
		c_StringStack* t_dsts=(new c_StringStack)->m_new2();
		DBG_LOCAL(t_dsts,"dsts")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<224>");
		t_dsts->p_Push(t_dir);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<226>");
		while(!t_dsts->p_IsEmpty()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<228>");
			String t_dst=t_dsts->p_Pop();
			DBG_LOCAL(t_dst,"dst")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<230>");
			Array<String > t_4=LoadDir(t_dst);
			int t_5=0;
			while(t_5<t_4.Length()){
				DBG_BLOCK();
				String t_f2=t_4.At(t_5);
				t_5=t_5+1;
				DBG_LOCAL(t_f2,"f")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<231>");
				if(t_f2.StartsWith(String(L".",1))){
					DBG_BLOCK();
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<233>");
				String t_p3=t_dst+String(L"/",1)+t_f2;
				DBG_LOCAL(t_p3,"p")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<234>");
				String t_r3=t_p3.Slice(t_dir.Length()+1);
				DBG_LOCAL(t_r3,"r")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<235>");
				String t_t3=t_dataPath+String(L"/",1)+t_r3;
				DBG_LOCAL(t_t3,"t")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<237>");
				int t_32=FileType(t_p3);
				DBG_LOCAL(t_32,"3")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<238>");
				if(t_32==1){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<239>");
					if(!t_udata->p_Contains(t_p3)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<240>");
						DeleteFile(t_p3);
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<242>");
					if(t_32==2){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<243>");
						if(FileType(t_t3)==2){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<244>");
							t_dsts->p_Push(t_p3);
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builder.monkey<246>");
							bb_os_DeleteDir(t_p3,true);
						}
					}
				}
			}
		}
	}
}
void c_Builder::mark(){
	Object::mark();
	gc_mark_q(m_tcc);
	gc_mark_q(m_app);
	gc_mark_q(m_dataFiles);
}
String c_Builder::debug(){
	String t="(Builder)\n";
	t+=dbg_decl("tcc",&m_tcc);
	t+=dbg_decl("app",&m_app);
	t+=dbg_decl("transCode",&m_transCode);
	t+=dbg_decl("casedConfig",&m_casedConfig);
	t+=dbg_decl("dataFiles",&m_dataFiles);
	t+=dbg_decl("syncData",&m_syncData);
	t+=dbg_decl("DATA_FILES",&m_DATA_FILES);
	t+=dbg_decl("TEXT_FILES",&m_TEXT_FILES);
	t+=dbg_decl("IMAGE_FILES",&m_IMAGE_FILES);
	t+=dbg_decl("SOUND_FILES",&m_SOUND_FILES);
	t+=dbg_decl("MUSIC_FILES",&m_MUSIC_FILES);
	t+=dbg_decl("BINARY_FILES",&m_BINARY_FILES);
	return t;
}
c_Map3::c_Map3(){
	m_root=0;
}
c_Map3* c_Map3::m_new(){
	DBG_ENTER("Map.new")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
int c_Map3::p_RotateLeft3(c_Node3* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node3* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map3::p_RotateRight3(c_Node3* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node3* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map3::p_InsertFixup3(c_Node3* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node3* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft3(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight3(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node3* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight3(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft3(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map3::p_Set3(String t_key,c_Builder* t_value){
	DBG_ENTER("Map.Set")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node3* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node3* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node3)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup3(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
c_Node3* c_Map3::p_FirstNode(){
	DBG_ENTER("Map.FirstNode")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<125>");
	if(!((m_root)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<127>");
	c_Node3* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<128>");
	while((t_node->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<129>");
		t_node=t_node->m_left;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<131>");
	return t_node;
}
c_NodeEnumerator* c_Map3::p_ObjectEnumerator(){
	DBG_ENTER("Map.ObjectEnumerator")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<121>");
	c_NodeEnumerator* t_=(new c_NodeEnumerator)->m_new(p_FirstNode());
	return t_;
}
c_Node3* c_Map3::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node3* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
c_Builder* c_Map3::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node3* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
void c_Map3::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map3::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap3::c_StringMap3(){
}
c_StringMap3* c_StringMap3::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map3::m_new();
	return this;
}
int c_StringMap3::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap3::mark(){
	c_Map3::mark();
}
String c_StringMap3::debug(){
	String t="(StringMap)\n";
	t=c_Map3::debug()+t;
	return t;
}
c_AmigaBuilder::c_AmigaBuilder(){
}
c_AmigaBuilder* c_AmigaBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("AmigaBuilder.new")
	c_AmigaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_AmigaBuilder* c_AmigaBuilder::m_new2(){
	DBG_ENTER("AmigaBuilder.new")
	c_AmigaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_AmigaBuilder::p_IsValid(){
	DBG_ENTER("AmigaBuilder.IsValid")
	c_AmigaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<19>");
	String t_1=HostOS();
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<20>");
	if(t_1==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<21>");
		if((m_tcc->m_MINGW_PATH).Length()!=0){
			DBG_BLOCK();
			return true;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<23>");
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<25>");
	return false;
}
void c_AmigaBuilder::p_Begin(){
	DBG_ENTER("AmigaBuilder.Begin")
	c_AmigaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<29>");
	bb_config_ENV_LANG=String(L"cpp",3);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<30>");
	gc_assign(bb_translator__trans,((new c_CppTranslator)->m_new()));
}
String c_AmigaBuilder::p_Config(){
	DBG_ENTER("AmigaBuilder.Config")
	c_AmigaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<13>");
		t_config->p_Push(String(L"#define CFG_",12)+t_kv->p_Key()+String(L" ",1)+t_kv->p_Value());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_AmigaBuilder::p_MakeTarget(){
	DBG_ENTER("AmigaBuilder.MakeTarget")
	c_AmigaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<35>");
	String t_2=bb_config_ENV_CONFIG;
	DBG_LOCAL(t_2,"2")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<36>");
	if(t_2==String(L"debug",5)){
		DBG_BLOCK();
		bb_config_SetConfigVar2(String(L"DEBUG",5),String(L"1",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<37>");
		if(t_2==String(L"release",7)){
			DBG_BLOCK();
			bb_config_SetConfigVar2(String(L"RELEASE",7),String(L"1",1));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<38>");
			if(t_2==String(L"profile",7)){
				DBG_BLOCK();
				bb_config_SetConfigVar2(String(L"PROFILE",7),String(L"1",1));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<41>");
	String t_main=LoadString(String(L"main.cpp",8));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<43>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<44>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<46>");
	SaveString(t_main,String(L"main.cpp",8));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<48>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<50>");
		String t_out=String(L"main_",5)+HostOS();
		DBG_LOCAL(t_out,"out")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<51>");
		DeleteFile(t_out);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<53>");
		String t_OPTS=String();
		String t_LIBS=String();
		DBG_LOCAL(t_OPTS,"OPTS")
		DBG_LOCAL(t_LIBS,"LIBS")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<55>");
		String t_3=bb_config_ENV_HOST;
		DBG_LOCAL(t_3,"3")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<56>");
		if(t_3==String(L"winnt",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<57>");
			t_OPTS=t_OPTS+String(L" -Wno-free-nonheap-object",25);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<58>");
			t_LIBS=t_LIBS+String(L" -lwinmm -lws2_32",17);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<59>");
			if(t_3==String(L"macos",5)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<60>");
				t_OPTS=t_OPTS+String(L" -Wno-parentheses -Wno-dangling-else",36);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<61>");
				t_OPTS=t_OPTS+String(L" -mmacosx-version-min=10.6",26);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<62>");
				if(t_3==String(L"linux",5)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<63>");
					t_OPTS=t_OPTS+String(L" -Wno-unused-result",19);
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<64>");
					t_LIBS=t_LIBS+String(L" -lpthread",10);
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<67>");
		String t_4=bb_config_ENV_CONFIG;
		DBG_LOCAL(t_4,"4")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<68>");
		if(t_4==String(L"debug",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<69>");
			t_OPTS=t_OPTS+String(L" -O0",4);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<70>");
			if(t_4==String(L"release",7)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<71>");
				t_OPTS=t_OPTS+String(L" -O3 -DNDEBUG",13);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<74>");
		String t_cc_opts=bb_config_GetConfigVar(String(L"CC_OPTS",7));
		DBG_LOCAL(t_cc_opts,"cc_opts")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<75>");
		if((t_cc_opts).Length()!=0){
			DBG_BLOCK();
			t_OPTS=t_OPTS+(String(L" ",1)+t_cc_opts.Replace(String(L";",1),String(L" ",1)));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<77>");
		String t_cc_libs=bb_config_GetConfigVar(String(L"CC_LIBS",7));
		DBG_LOCAL(t_cc_libs,"cc_libs")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<78>");
		if((t_cc_libs).Length()!=0){
			DBG_BLOCK();
			t_LIBS=t_LIBS+(String(L" ",1)+t_cc_libs.Replace(String(L";",1),String(L" ",1)));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<80>");
		p_Execute(String(L"g++",3)+t_OPTS+String(L" -o ",4)+t_out+String(L" main.cpp",9)+t_LIBS,true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<82>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/amiga.monkey<83>");
			p_Execute(String(L"\"",1)+RealPath(t_out)+String(L"\"",1),true);
		}
	}
}
void c_AmigaBuilder::mark(){
	c_Builder::mark();
}
String c_AmigaBuilder::debug(){
	String t="(AmigaBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_Node3::c_Node3(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node3* c_Node3::m_new(String t_key,c_Builder* t_value,int t_color,c_Node3* t_parent){
	DBG_ENTER("Node.new")
	c_Node3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node3* c_Node3::m_new2(){
	DBG_ENTER("Node.new")
	c_Node3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
c_Node3* c_Node3::p_NextNode(){
	DBG_ENTER("Node.NextNode")
	c_Node3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<385>");
	c_Node3* t_node=0;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<386>");
	if((m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<387>");
		t_node=m_right;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<388>");
		while((t_node->m_left)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<389>");
			t_node=t_node->m_left;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<391>");
		return t_node;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<393>");
	t_node=this;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<394>");
	c_Node3* t_parent=this->m_parent;
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<395>");
	while(((t_parent)!=0) && t_node==t_parent->m_right){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<396>");
		t_node=t_parent;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<397>");
		t_parent=t_parent->m_parent;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<399>");
	return t_parent;
}
c_Builder* c_Node3::p_Value(){
	DBG_ENTER("Node.Value")
	c_Node3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<381>");
	return m_value;
}
String c_Node3::p_Key(){
	DBG_ENTER("Node.Key")
	c_Node3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<377>");
	return m_key;
}
void c_Node3::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node3::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
c_AndroidBuilder::c_AndroidBuilder(){
}
c_AndroidBuilder* c_AndroidBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("AndroidBuilder.new")
	c_AndroidBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_AndroidBuilder* c_AndroidBuilder::m_new2(){
	DBG_ENTER("AndroidBuilder.new")
	c_AndroidBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_AndroidBuilder::p_IsValid(){
	DBG_ENTER("AndroidBuilder.IsValid")
	c_AndroidBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<19>");
	bool t_=m_tcc->m_ANDROID_PATH!=String();
	return t_;
}
void c_AndroidBuilder::p_Begin(){
	DBG_ENTER("AndroidBuilder.Begin")
	c_AndroidBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<23>");
	bb_config_ENV_LANG=String(L"java",4);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<24>");
	gc_assign(bb_translator__trans,((new c_JavaTranslator)->m_new()));
}
String c_AndroidBuilder::p_Config(){
	DBG_ENTER("AndroidBuilder.Config")
	c_AndroidBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<13>");
		t_config->p_Push(String(L"static final String ",20)+t_kv->p_Key()+String(L"=",1)+bb_config_Enquote(t_kv->p_Value(),String(L"java",4))+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
bool c_AndroidBuilder::p_CreateDirRecursive(String t_path){
	DBG_ENTER("AndroidBuilder.CreateDirRecursive")
	c_AndroidBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<28>");
	int t_i=0;
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<29>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<30>");
		t_i=t_path.Find(String(L"/",1),t_i);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<31>");
		if(t_i==-1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<32>");
			CreateDir(t_path);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<33>");
			bool t_=FileType(t_path)==2;
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<35>");
		String t_t=t_path.Slice(0,t_i);
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<36>");
		CreateDir(t_t);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<37>");
		if(FileType(t_t)!=2){
			DBG_BLOCK();
			return false;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<38>");
		t_i+=1;
	}while(!(false));
}
void c_AndroidBuilder::p_MakeTarget(){
	DBG_ENTER("AndroidBuilder.MakeTarget")
	c_AndroidBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<45>");
	p_CreateDataDir(String(L"assets/monkey",13));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<47>");
	String t_app_label=bb_config_GetConfigVar(String(L"ANDROID_APP_LABEL",17));
	DBG_LOCAL(t_app_label,"app_label")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<48>");
	String t_app_package=bb_config_GetConfigVar(String(L"ANDROID_APP_PACKAGE",19));
	DBG_LOCAL(t_app_package,"app_package")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<50>");
	SetEnv(String(L"ANDROID_SDK_DIR",15),m_tcc->m_ANDROID_PATH.Replace(String(L"\\",1),String(L"\\\\",2)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<52>");
	bb_config_SetConfigVar2(String(L"ANDROID_MANIFEST_MAIN",21),bb_config_GetConfigVar(String(L"ANDROID_MANIFEST_MAIN",21)).Replace(String(L";",1),String(L"\n",1))+String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<53>");
	bb_config_SetConfigVar2(String(L"ANDROID_MANIFEST_APPLICATION",28),bb_config_GetConfigVar(String(L"ANDROID_MANIFEST_APPLICATION",28)).Replace(String(L";",1),String(L"\n",1))+String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<54>");
	bb_config_SetConfigVar2(String(L"ANDROID_MANIFEST_ACTIVITY",25),bb_config_GetConfigVar(String(L"ANDROID_MANIFEST_ACTIVITY",25)).Replace(String(L";",1),String(L"\n",1))+String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<57>");
	String t_jpath=String(L"src",3);
	DBG_LOCAL(t_jpath,"jpath")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<58>");
	bb_os_DeleteDir(t_jpath,true);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<59>");
	CreateDir(t_jpath);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<60>");
	Array<String > t_=t_app_package.Split(String(L".",1));
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<61>");
		t_jpath=t_jpath+(String(L"/",1)+t_t);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<62>");
		CreateDir(t_jpath);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<64>");
	t_jpath=t_jpath+String(L"/MonkeyGame.java",16);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<67>");
	Array<String > t_3=bb_os_LoadDir(String(L"templates",9),true,false);
	int t_4=0;
	while(t_4<t_3.Length()){
		DBG_BLOCK();
		String t_file=t_3.At(t_4);
		t_4=t_4+1;
		DBG_LOCAL(t_file,"file")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<70>");
		int t_i=0;
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<71>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<72>");
			t_i=t_file.Find(String(L"/",1),t_i);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<73>");
			if(t_i==-1){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<74>");
			CreateDir(t_file.Slice(0,t_i));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<75>");
			if(FileType(t_file.Slice(0,t_i))!=2){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<76>");
				t_file=String();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<77>");
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<79>");
			t_i+=1;
		}while(!(false));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<81>");
		if(!((t_file).Length()!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<83>");
		String t_1=bb_os_ExtractExt(t_file).ToLower();
		DBG_LOCAL(t_1,"1")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<84>");
		if(t_1==String(L"xml",3) || t_1==String(L"properties",10) || t_1==String(L"java",4)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<85>");
			String t_str=LoadString(String(L"templates/",10)+t_file);
			DBG_LOCAL(t_str,"str")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<86>");
			t_str=bb_transcc_ReplaceEnv(t_str);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<87>");
			SaveString(t_str,t_file);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<89>");
			CopyFile(String(L"templates/",10)+t_file,t_file);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<94>");
	String t_main=LoadString(String(L"MonkeyGame.java",15));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<95>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<96>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<99>");
	c_StringStack* t_imps=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_imps,"imps")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<100>");
	c_StringSet* t_done=(new c_StringSet)->m_new();
	DBG_LOCAL(t_done,"done")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<101>");
	c_StringStack* t_out=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_out,"out")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<102>");
	Array<String > t_5=t_main.Split(String(L"\n",1));
	int t_6=0;
	while(t_6<t_5.Length()){
		DBG_BLOCK();
		String t_line=t_5.At(t_6);
		t_6=t_6+1;
		DBG_LOCAL(t_line,"line")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<103>");
		if(t_line.StartsWith(String(L"import ",7))){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<104>");
			int t_i2=t_line.Find(String(L";",1),7);
			DBG_LOCAL(t_i2,"i")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<105>");
			if(t_i2!=-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<106>");
				String t_id=t_line.Slice(7,t_i2+1);
				DBG_LOCAL(t_id,"id")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<107>");
				if(!t_done->p_Contains(t_id)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<108>");
					t_done->p_Insert(t_id);
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<109>");
					t_imps->p_Push(String(L"import ",7)+t_id);
				}
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<113>");
			t_out->p_Push(t_line);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<116>");
	t_main=t_out->p_Join(String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<118>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"IMPORTS",7),t_imps->p_Join(String(L"\n",1)),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<119>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"PACKAGE",7),String(L"package ",8)+t_app_package+String(L";",1),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<121>");
	SaveString(t_main,t_jpath);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<124>");
	Array<String > t_7=bb_config_GetConfigVar(String(L"LIBS",4)).Split(String(L";",1));
	int t_8=0;
	while(t_8<t_7.Length()){
		DBG_BLOCK();
		String t_lib=t_7.At(t_8);
		t_8=t_8+1;
		DBG_LOCAL(t_lib,"lib")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<125>");
		String t_22=bb_os_ExtractExt(t_lib);
		DBG_LOCAL(t_22,"2")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<126>");
		if(t_22==String(L"jar",3) || t_22==String(L"so",2)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<127>");
			String t_tdir=String();
			DBG_LOCAL(t_tdir,"tdir")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<128>");
			if(t_lib.Contains(String(L"/",1))){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<129>");
				t_tdir=bb_os_ExtractDir(t_lib);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<130>");
				if(t_tdir.Contains(String(L"/",1))){
					DBG_BLOCK();
					t_tdir=bb_os_StripDir(t_tdir);
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<131>");
				String t_32=t_tdir;
				DBG_LOCAL(t_32,"3")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<132>");
				if(t_32==String(L"x86",3) || t_32==String(L"mips",4) || t_32==String(L"armeabi",7) || t_32==String(L"armeabi-v7a",11)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<133>");
					CreateDir(String(L"libs/",5)+t_tdir);
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<134>");
					t_tdir=t_tdir+String(L"/",1);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<136>");
					t_tdir=String();
				}
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<139>");
			CopyFile(t_lib,String(L"libs/",5)+t_tdir+bb_os_StripDir(t_lib));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<144>");
	Array<String > t_9=bb_config_GetConfigVar(String(L"SRCS",4)).Split(String(L";",1));
	int t_10=0;
	while(t_10<t_9.Length()){
		DBG_BLOCK();
		String t_src=t_9.At(t_10);
		t_10=t_10+1;
		DBG_LOCAL(t_src,"src")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<145>");
		String t_42=bb_os_ExtractExt(t_src);
		DBG_LOCAL(t_42,"4")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<146>");
		if(t_42==String(L"java",4) || t_42==String(L"aidl",4)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<147>");
			int t_i3=t_src.FindLast(String(L"/src/",5));
			DBG_LOCAL(t_i3,"i")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<148>");
			if(t_i3!=-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<149>");
				String t_dst=t_src.Slice(t_i3+1);
				DBG_LOCAL(t_dst,"dst")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<150>");
				if(p_CreateDirRecursive(bb_os_ExtractDir(t_dst))){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<151>");
					CopyFile(t_src,t_dst);
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<157>");
	if(bb_config_GetConfigVar(String(L"ANDROID_NATIVE_GL_ENABLED",25))==String(L"1",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<158>");
		bb_os_CopyDir(String(L"nativegl/libs",13),String(L"libs",4),true,false);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<159>");
		CreateDir(String(L"src/com",7));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<160>");
		CreateDir(String(L"src/com/monkey",14));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<161>");
		CopyFile(String(L"nativegl/NativeGL.java",22),String(L"src/com/monkey/NativeGL.java",28));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<164>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<166>");
		String t_antcfg=String(L"debug",5);
		DBG_LOCAL(t_antcfg,"antcfg")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<168>");
		if(bb_config_GetConfigVar(String(L"ANDROID_SIGN_APP",16))==String(L"1",1)){
			DBG_BLOCK();
			t_antcfg=String(L"release",7);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<170>");
		String t_ant=String(L"ant",3);
		DBG_LOCAL(t_ant,"ant")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<171>");
		if((m_tcc->m_ANT_PATH).Length()!=0){
			DBG_BLOCK();
			t_ant=String(L"\"",1)+m_tcc->m_ANT_PATH+String(L"/bin/ant\"",9);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<173>");
		if(!(p_Execute(t_ant+String(L" clean",6),false) && p_Execute(t_ant+String(L" ",1)+t_antcfg+String(L" install",8),false))){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<175>");
			bb_transcc_Die(String(L"Android build failed.",21));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<177>");
			if(m_tcc->m_opt_run){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<179>");
				String t_adb=String(L"adb",3);
				DBG_LOCAL(t_adb,"adb")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<180>");
				if((m_tcc->m_ANDROID_PATH).Length()!=0){
					DBG_BLOCK();
					t_adb=String(L"\"",1)+m_tcc->m_ANDROID_PATH+String(L"/platform-tools/adb\"",20);
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<182>");
				p_Execute(t_adb+String(L" logcat -c",10),false);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<183>");
				p_Execute(t_adb+String(L" shell am start -n ",19)+t_app_package+String(L"/",1)+t_app_package+String(L".MonkeyGame",11),false);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android.monkey<184>");
				p_Execute(t_adb+String(L" logcat [Monkey]:I *:E",22),false);
			}
		}
	}
}
void c_AndroidBuilder::mark(){
	c_Builder::mark();
}
String c_AndroidBuilder::debug(){
	String t="(AndroidBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_AndroidNdkBuilder::c_AndroidNdkBuilder(){
}
c_AndroidNdkBuilder* c_AndroidNdkBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("AndroidNdkBuilder.new")
	c_AndroidNdkBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_AndroidNdkBuilder* c_AndroidNdkBuilder::m_new2(){
	DBG_ENTER("AndroidNdkBuilder.new")
	c_AndroidNdkBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_AndroidNdkBuilder::p_IsValid(){
	DBG_ENTER("AndroidNdkBuilder.IsValid")
	c_AndroidNdkBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<19>");
	bool t_=m_tcc->m_ANDROID_PATH!=String() && m_tcc->m_ANDROID_NDK_PATH!=String();
	return t_;
}
void c_AndroidNdkBuilder::p_Begin(){
	DBG_ENTER("AndroidNdkBuilder.Begin")
	c_AndroidNdkBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<23>");
	bb_config_ENV_LANG=String(L"cpp",3);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<24>");
	gc_assign(bb_translator__trans,((new c_CppTranslator)->m_new()));
}
String c_AndroidNdkBuilder::p_Config(){
	DBG_ENTER("AndroidNdkBuilder.Config")
	c_AndroidNdkBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<13>");
		t_config->p_Push(String(L"#define CFG_",12)+t_kv->p_Key()+String(L" ",1)+t_kv->p_Value());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
bool c_AndroidNdkBuilder::p_CreateDirRecursive(String t_path){
	DBG_ENTER("AndroidNdkBuilder.CreateDirRecursive")
	c_AndroidNdkBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<28>");
	int t_i=0;
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<29>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<30>");
		t_i=t_path.Find(String(L"/",1),t_i);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<31>");
		if(t_i==-1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<32>");
			CreateDir(t_path);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<33>");
			bool t_=FileType(t_path)==2;
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<35>");
		String t_t=t_path.Slice(0,t_i);
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<36>");
		CreateDir(t_t);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<37>");
		if(FileType(t_t)!=2){
			DBG_BLOCK();
			return false;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<38>");
		t_i+=1;
	}while(!(false));
}
void c_AndroidNdkBuilder::p_MakeTarget(){
	DBG_ENTER("AndroidNdkBuilder.MakeTarget")
	c_AndroidNdkBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<44>");
	bb_config_SetConfigVar2(String(L"ANDROID_SDK_DIR",15),m_tcc->m_ANDROID_PATH.Replace(String(L"\\",1),String(L"\\\\",2)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<45>");
	bb_config_SetConfigVar2(String(L"ANDROID_MANIFEST_MAIN",21),bb_config_GetConfigVar(String(L"ANDROID_MANIFEST_MAIN",21)).Replace(String(L";",1),String(L"\n",1))+String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<46>");
	bb_config_SetConfigVar2(String(L"ANDROID_MANIFEST_APPLICATION",28),bb_config_GetConfigVar(String(L"ANDROID_MANIFEST_APPLICATION",28)).Replace(String(L";",1),String(L"\n",1))+String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<47>");
	bb_config_SetConfigVar2(String(L"ANDROID_MANIFEST_ACTIVITY",25),bb_config_GetConfigVar(String(L"ANDROID_MAINFEST_ACTIVITY",25)).Replace(String(L";",1),String(L"\n",1))+String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<50>");
	p_CreateDataDir(String(L"assets/monkey",13));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<52>");
	String t_app_label=bb_config_GetConfigVar(String(L"ANDROID_APP_LABEL",17));
	DBG_LOCAL(t_app_label,"app_label")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<53>");
	String t_app_package=bb_config_GetConfigVar(String(L"ANDROID_APP_PACKAGE",19));
	DBG_LOCAL(t_app_package,"app_package")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<56>");
	String t_main=LoadString(String(L"jni/main.cpp",12));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<57>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<58>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<59>");
	SaveString(t_main,String(L"jni/main.cpp",12));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<61>");
	bb_os_DeleteDir(String(L"src",3),true);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<64>");
	String t_jmain=LoadString(String(L"MonkeyGame.java",15));
	DBG_LOCAL(t_jmain,"jmain")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<65>");
	t_jmain=bb_transcc_ReplaceBlock(t_jmain,String(L"PACKAGE",7),String(L"package ",8)+t_app_package+String(L";",1),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<66>");
	String t_dir=String(L"src/",4)+t_app_package.Replace(String(L".",1),String(L"/",1));
	DBG_LOCAL(t_dir,"dir")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<67>");
	if(!p_CreateDirRecursive(t_dir)){
		DBG_BLOCK();
		bbError(String(L"Failed to create dir:",21)+t_dir);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<68>");
	SaveString(t_jmain,t_dir+String(L"/MonkeyGame.java",16));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<71>");
	Array<String > t_=bb_config_GetConfigVar(String(L"LIBS",4)).Split(String(L";",1));
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_lib=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_lib,"lib")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<72>");
		String t_1=bb_os_ExtractExt(t_lib);
		DBG_LOCAL(t_1,"1")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<73>");
		if(t_1==String(L"jar",3) || t_1==String(L"so",2)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<74>");
			String t_tdir=String();
			DBG_LOCAL(t_tdir,"tdir")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<75>");
			if(t_lib.Contains(String(L"/",1))){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<76>");
				t_tdir=bb_os_ExtractDir(t_lib);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<77>");
				if(t_tdir.Contains(String(L"/",1))){
					DBG_BLOCK();
					t_tdir=bb_os_StripDir(t_tdir);
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<78>");
				String t_22=t_tdir;
				DBG_LOCAL(t_22,"2")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<79>");
				if(t_22==String(L"x86",3) || t_22==String(L"mips",4) || t_22==String(L"armeabi",7) || t_22==String(L"armeabi-v7a",11)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<80>");
					CreateDir(String(L"libs/",5)+t_tdir);
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<81>");
					t_tdir=t_tdir+String(L"/",1);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<83>");
					t_tdir=String();
				}
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<86>");
			CopyFile(t_lib,String(L"libs/",5)+t_tdir+bb_os_StripDir(t_lib));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<91>");
	Array<String > t_3=bb_config_GetConfigVar(String(L"SRCS",4)).Split(String(L";",1));
	int t_4=0;
	while(t_4<t_3.Length()){
		DBG_BLOCK();
		String t_src=t_3.At(t_4);
		t_4=t_4+1;
		DBG_LOCAL(t_src,"src")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<92>");
		String t_32=bb_os_ExtractExt(t_src);
		DBG_LOCAL(t_32,"3")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<93>");
		if(t_32==String(L"java",4) || t_32==String(L"aidl",4)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<94>");
			int t_i=t_src.FindLast(String(L"/src/",5));
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<95>");
			if(t_i!=-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<96>");
				String t_dst=t_src.Slice(t_i+1);
				DBG_LOCAL(t_dst,"dst")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<97>");
				if(!p_CreateDirRecursive(bb_os_ExtractDir(t_dst))){
					DBG_BLOCK();
					bbError(String(L"Failed to create dir:",21)+bb_os_ExtractDir(t_dst));
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<98>");
				CopyFile(t_src,t_dst);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<104>");
	Array<String > t_5=bb_os_LoadDir(String(L"templates",9),true,false);
	int t_6=0;
	while(t_6<t_5.Length()){
		DBG_BLOCK();
		String t_file=t_5.At(t_6);
		t_6=t_6+1;
		DBG_LOCAL(t_file,"file")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<107>");
		int t_i2=0;
		DBG_LOCAL(t_i2,"i")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<108>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<109>");
			t_i2=t_file.Find(String(L"/",1),t_i2);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<110>");
			if(t_i2==-1){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<111>");
			CreateDir(t_file.Slice(0,t_i2));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<112>");
			if(FileType(t_file.Slice(0,t_i2))!=2){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<113>");
				t_file=String();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<114>");
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<116>");
			t_i2+=1;
		}while(!(false));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<118>");
		if(!((t_file).Length()!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<120>");
		String t_42=bb_os_ExtractExt(t_file).ToLower();
		DBG_LOCAL(t_42,"4")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<121>");
		if(t_42==String(L"xml",3) || t_42==String(L"properties",10) || t_42==String(L"java",4)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<122>");
			String t_str=LoadString(String(L"templates/",10)+t_file);
			DBG_LOCAL(t_str,"str")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<123>");
			t_str=bb_transcc_ReplaceEnv(t_str);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<124>");
			SaveString(t_str,t_file);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<126>");
			CopyFile(String(L"templates/",10)+t_file,t_file);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<130>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<132>");
		if(!p_Execute(m_tcc->m_ANDROID_NDK_PATH+String(L"/ndk-build",10),true)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<133>");
			bb_transcc_Die(String(L"Failed to build native code",27));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<136>");
		bool t_r=p_Execute(String(L"ant clean",9),false) && p_Execute(String(L"ant debug install",17),false);
		DBG_LOCAL(t_r,"r")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<138>");
		if(!t_r){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<139>");
			bb_transcc_Die(String(L"Android build failed.",21));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<140>");
			if(m_tcc->m_opt_run){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<142>");
				p_Execute(String(L"adb logcat -c",13),false);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<144>");
				p_Execute(String(L"adb shell am start -n ",22)+t_app_package+String(L"/",1)+t_app_package+String(L".MonkeyGame",11),false);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/android_ndk.monkey<147>");
				p_Execute(String(L"adb logcat [Monkey]:I *:E",25),false);
			}
		}
	}
}
void c_AndroidNdkBuilder::mark(){
	c_Builder::mark();
}
String c_AndroidNdkBuilder::debug(){
	String t="(AndroidNdkBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_GlfwBuilder::c_GlfwBuilder(){
}
c_GlfwBuilder* c_GlfwBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("GlfwBuilder.new")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_GlfwBuilder* c_GlfwBuilder::m_new2(){
	DBG_ENTER("GlfwBuilder.new")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_GlfwBuilder::p_IsValid(){
	DBG_ENTER("GlfwBuilder.IsValid")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<164>");
	String t_2=HostOS();
	DBG_LOCAL(t_2,"2")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<165>");
	if(t_2==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<166>");
		if(((m_tcc->m_MINGW_PATH).Length()!=0) || ((m_tcc->m_MSBUILD_PATH).Length()!=0)){
			DBG_BLOCK();
			return true;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<168>");
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<170>");
	return false;
}
void c_GlfwBuilder::p_Begin(){
	DBG_ENTER("GlfwBuilder.Begin")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<174>");
	bb_config_ENV_LANG=String(L"cpp",3);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<175>");
	gc_assign(bb_translator__trans,((new c_CppTranslator)->m_new()));
}
String c_GlfwBuilder::p_Config(){
	DBG_ENTER("GlfwBuilder.Config")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<13>");
		t_config->p_Push(String(L"#define CFG_",12)+t_kv->p_Key()+String(L" ",1)+t_kv->p_Value());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_GlfwBuilder::p_MakeGcc(){
	DBG_ENTER("GlfwBuilder.MakeGcc")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<21>");
	String t_dst=String(L"gcc_",4)+HostOS();
	DBG_LOCAL(t_dst,"dst")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<23>");
	CreateDir(t_dst+String(L"/",1)+m_casedConfig);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<24>");
	CreateDir(t_dst+String(L"/",1)+m_casedConfig+String(L"/internal",9));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<25>");
	CreateDir(t_dst+String(L"/",1)+m_casedConfig+String(L"/external",9));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<27>");
	p_CreateDataDir(t_dst+String(L"/",1)+m_casedConfig+String(L"/data",5));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<29>");
	String t_main=LoadString(String(L"main.cpp",8));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<31>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<32>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<34>");
	SaveString(t_main,String(L"main.cpp",8));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<36>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<38>");
		ChangeDir(t_dst);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<39>");
		CreateDir(String(L"build",5));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<40>");
		CreateDir(String(L"build/",6)+m_casedConfig);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<42>");
		String t_ccopts=String();
		DBG_LOCAL(t_ccopts,"ccopts")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<43>");
		String t_1=bb_config_ENV_CONFIG;
		DBG_LOCAL(t_1,"1")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<44>");
		if(t_1==String(L"debug",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<45>");
			t_ccopts=t_ccopts+String(L" -O0",4);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<46>");
			if(t_1==String(L"release",7)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<47>");
				t_ccopts=t_ccopts+String(L" -O3 -DNDEBUG",13);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<50>");
		String t_cmd=String(L"make",4);
		DBG_LOCAL(t_cmd,"cmd")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<51>");
		if(HostOS()==String(L"winnt",5) && ((FileType(m_tcc->m_MINGW_PATH+String(L"/bin/mingw32-make.exe",21)))!=0)){
			DBG_BLOCK();
			t_cmd=String(L"mingw32-make",12);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<53>");
		p_Execute(t_cmd+String(L" CCOPTS=\"",9)+t_ccopts+String(L"\" OUT=\"",7)+m_casedConfig+String(L"/MonkeyGame\"",12),true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<55>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<57>");
			ChangeDir(m_casedConfig);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<59>");
			if(HostOS()==String(L"winnt",5)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<60>");
				p_Execute(String(L"MonkeyGame",10),true);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<62>");
				p_Execute(String(L"./MonkeyGame",12),true);
			}
		}
	}
}
void c_GlfwBuilder::p_MakeVc2010(){
	DBG_ENTER("GlfwBuilder.MakeVc2010")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<72>");
	CreateDir(String(L"vc2010/",7)+m_casedConfig);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<73>");
	CreateDir(String(L"vc2010/",7)+m_casedConfig+String(L"/internal",9));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<74>");
	CreateDir(String(L"vc2010/",7)+m_casedConfig+String(L"/external",9));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<76>");
	p_CreateDataDir(String(L"vc2010/",7)+m_casedConfig+String(L"/data",5));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<78>");
	String t_main=LoadString(String(L"main.cpp",8));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<80>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<81>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<83>");
	SaveString(t_main,String(L"main.cpp",8));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<85>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<87>");
		ChangeDir(String(L"vc2010",6));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<89>");
		p_Execute(String(L"\"",1)+m_tcc->m_MSBUILD_PATH+String(L"\" /p:Configuration=",19)+m_casedConfig+String(L" /p:Platform=Win32 MonkeyGame.sln",33),true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<91>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<93>");
			ChangeDir(m_casedConfig);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<95>");
			p_Execute(String(L"MonkeyGame",10),true);
		}
	}
}
void c_GlfwBuilder::p_MakeMsvc(){
	DBG_ENTER("GlfwBuilder.MakeMsvc")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<104>");
	CreateDir(String(L"msvc/",5)+m_casedConfig);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<105>");
	CreateDir(String(L"msvc/",5)+m_casedConfig+String(L"/internal",9));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<106>");
	CreateDir(String(L"msvc/",5)+m_casedConfig+String(L"/external",9));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<108>");
	p_CreateDataDir(String(L"msvc/",5)+m_casedConfig+String(L"/data",5));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<110>");
	String t_main=LoadString(String(L"main.cpp",8));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<112>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<113>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<115>");
	SaveString(t_main,String(L"main.cpp",8));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<117>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<119>");
		ChangeDir(String(L"msvc",4));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<121>");
		p_Execute(String(L"\"",1)+m_tcc->m_MSBUILD_PATH+String(L"\" /p:Configuration=",19)+m_casedConfig,true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<123>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<125>");
			ChangeDir(m_casedConfig);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<127>");
			p_Execute(String(L"MonkeyGame",10),true);
		}
	}
}
void c_GlfwBuilder::p_MakeXcode(){
	DBG_ENTER("GlfwBuilder.MakeXcode")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<136>");
	p_CreateDataDir(String(L"xcode/data",10));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<138>");
	String t_main=LoadString(String(L"main.cpp",8));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<140>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<141>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<143>");
	SaveString(t_main,String(L"main.cpp",8));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<145>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<147>");
		ChangeDir(String(L"xcode",5));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<150>");
		p_Execute(String(L"xcodebuild -configuration ",26)+m_casedConfig,true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<152>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<154>");
			ChangeDir(String(L"build/",6)+m_casedConfig);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<155>");
			ChangeDir(String(L"MonkeyGame.app/Contents/MacOS",29));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<157>");
			p_Execute(String(L"./MonkeyGame",12),true);
		}
	}
}
void c_GlfwBuilder::p_MakeTarget(){
	DBG_ENTER("GlfwBuilder.MakeTarget")
	c_GlfwBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<179>");
	String t_3=HostOS();
	DBG_LOCAL(t_3,"3")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<180>");
	if(t_3==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<181>");
		if(bb_config_GetConfigVar(String(L"GLFW_USE_MINGW",14))==String(L"1",1) && ((m_tcc->m_MINGW_PATH).Length()!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<182>");
			p_MakeGcc();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<183>");
			if(FileType(String(L"vc2010",6))==2){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<184>");
				p_MakeVc2010();
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<185>");
				if(FileType(String(L"msvc",4))==2){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<186>");
					p_MakeMsvc();
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<187>");
					if((m_tcc->m_MINGW_PATH).Length()!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<188>");
						p_MakeGcc();
					}
				}
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<190>");
		if(t_3==String(L"macos",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<191>");
			p_MakeXcode();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<192>");
			if(t_3==String(L"linux",5)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/glfw.monkey<193>");
				p_MakeGcc();
			}
		}
	}
}
void c_GlfwBuilder::mark(){
	c_Builder::mark();
}
String c_GlfwBuilder::debug(){
	String t="(GlfwBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_Html5Builder::c_Html5Builder(){
}
c_Html5Builder* c_Html5Builder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("Html5Builder.new")
	c_Html5Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<92>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_Html5Builder* c_Html5Builder::m_new2(){
	DBG_ENTER("Html5Builder.new")
	c_Html5Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<89>");
	c_Builder::m_new2();
	return this;
}
bool c_Html5Builder::p_IsValid(){
	DBG_ENTER("Html5Builder.IsValid")
	c_Html5Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<128>");
	return true;
}
void c_Html5Builder::p_Begin(){
	DBG_ENTER("Html5Builder.Begin")
	c_Html5Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<132>");
	bb_config_ENV_LANG=String(L"js",2);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<133>");
	gc_assign(bb_translator__trans,((new c_JsTranslator)->m_new()));
}
String c_Html5Builder::p_MetaData(){
	DBG_ENTER("Html5Builder.MetaData")
	c_Html5Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<104>");
	c_StringStack* t_meta=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_meta,"meta")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<105>");
	c_NodeEnumerator3* t_=m_dataFiles->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<106>");
		String t_src=t_kv->p_Key();
		DBG_LOCAL(t_src,"src")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<107>");
		String t_ext=bb_os_ExtractExt(t_src).ToLower();
		DBG_LOCAL(t_ext,"ext")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<108>");
		String t_3=t_ext;
		DBG_LOCAL(t_3,"3")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<109>");
		if(t_3==String(L"png",3) || t_3==String(L"jpg",3) || t_3==String(L"gif",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<110>");
			bb_html5_Info_Width=0;
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<111>");
			bb_html5_Info_Height=0;
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<112>");
			String t_4=t_ext;
			DBG_LOCAL(t_4,"4")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<113>");
			if(t_4==String(L"png",3)){
				DBG_BLOCK();
				bb_html5_GetInfo_PNG(t_src);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<114>");
				if(t_4==String(L"jpg",3)){
					DBG_BLOCK();
					bb_html5_GetInfo_JPG(t_src);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<115>");
					if(t_4==String(L"gif",3)){
						DBG_BLOCK();
						bb_html5_GetInfo_GIF(t_src);
					}
				}
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<117>");
			if(bb_html5_Info_Width==0 || bb_html5_Info_Height==0){
				DBG_BLOCK();
				bb_transcc_Die(String(L"Unable to load image file '",27)+t_src+String(L"'.",2));
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<118>");
			t_meta->p_Push(String(L"[",1)+t_kv->p_Value()+String(L"];type=image/",13)+t_ext+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<119>");
			t_meta->p_Push(String(L"width=",6)+String(bb_html5_Info_Width)+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<120>");
			t_meta->p_Push(String(L"height=",7)+String(bb_html5_Info_Height)+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<121>");
			t_meta->p_Push(String(L"\\n",2));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<124>");
	String t_2=t_meta->p_Join(String());
	return t_2;
}
String c_Html5Builder::p_Config(){
	DBG_ENTER("Html5Builder.Config")
	c_Html5Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<96>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<97>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<98>");
		t_config->p_Push(String(L"CFG_",4)+t_kv->p_Key()+String(L"=",1)+bb_config_Enquote(t_kv->p_Value(),String(L"js",2))+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<100>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_Html5Builder::p_MakeTarget(){
	DBG_ENTER("Html5Builder.MakeTarget")
	c_Html5Builder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<138>");
	p_CreateDataDir(String(L"data",4));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<140>");
	String t_meta=String(L"var META_DATA=\"",15)+p_MetaData()+String(L"\";\n",3);
	DBG_LOCAL(t_meta,"meta")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<142>");
	String t_main=LoadString(String(L"main.js",7));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<144>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<145>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"METADATA",8),t_meta,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<146>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<148>");
	SaveString(t_main,String(L"main.js",7));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<150>");
	if(m_tcc->m_opt_run){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<151>");
		String t_p=RealPath(String(L"MonkeyGame.html",15));
		DBG_LOCAL(t_p,"p")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<152>");
		String t_t=m_tcc->m_HTML_PLAYER+String(L" \"",2)+t_p+String(L"\"",1);
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<153>");
		p_Execute(t_t,false);
	}
}
void c_Html5Builder::mark(){
	c_Builder::mark();
}
String c_Html5Builder::debug(){
	String t="(Html5Builder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_IosBuilder::c_IosBuilder(){
	m__buildFiles=(new c_StringMap2)->m_new();
	m__nextFileId=0;
	m__fileRefs=(new c_StringMap2)->m_new();
}
c_IosBuilder* c_IosBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("IosBuilder.new")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<12>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_IosBuilder* c_IosBuilder::m_new2(){
	DBG_ENTER("IosBuilder.new")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_IosBuilder::p_IsValid(){
	DBG_ENTER("IosBuilder.IsValid")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<24>");
	String t_1=HostOS();
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<25>");
	if(t_1==String(L"macos",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<26>");
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<28>");
	return false;
}
void c_IosBuilder::p_Begin(){
	DBG_ENTER("IosBuilder.Begin")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<32>");
	bb_config_ENV_LANG=String(L"cpp",3);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<33>");
	gc_assign(bb_translator__trans,((new c_CppTranslator)->m_new()));
}
String c_IosBuilder::p_Config(){
	DBG_ENTER("IosBuilder.Config")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<16>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<17>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<18>");
		t_config->p_Push(String(L"#define CFG_",12)+t_kv->p_Key()+String(L" ",1)+t_kv->p_Value());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<20>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
String c_IosBuilder::p_FileId(String t_path,c_StringMap2* t_map){
	DBG_ENTER("IosBuilder.FileId")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_map,"map")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<37>");
	String t_id=t_map->p_Get(t_path);
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<38>");
	if((t_id).Length()!=0){
		DBG_BLOCK();
		return t_id;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<39>");
	m__nextFileId+=1;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<40>");
	t_id=String(L"1ACECAFEBABE",12)+(String(L"0000000000000000",16)+String(m__nextFileId)).Slice(-12);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<41>");
	t_map->p_Set2(t_path,t_id);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<42>");
	return t_id;
}
void c_IosBuilder::p_AddBuildFile(String t_path){
	DBG_ENTER("IosBuilder.AddBuildFile")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<126>");
	p_FileId(t_path,m__buildFiles);
}
int c_IosBuilder::p_FindEol(String t_str,String t_substr,int t_start){
	DBG_ENTER("IosBuilder.FindEol")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_str,"str")
	DBG_LOCAL(t_substr,"substr")
	DBG_LOCAL(t_start,"start")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<130>");
	int t_i=t_str.Find(t_substr,t_start);
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<131>");
	if(t_i==-1){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<132>");
		bbPrint(String(L"Can't find ",11)+t_substr);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<133>");
		return -1;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<135>");
	t_i+=t_substr.Length();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<136>");
	int t_eol=t_str.Find(String(L"\n",1),t_i)+1;
	DBG_LOCAL(t_eol,"eol")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<137>");
	if(t_eol==0){
		DBG_BLOCK();
		int t_=t_str.Length();
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<138>");
	return t_eol;
}
String c_IosBuilder::p_BuildFiles(){
	DBG_ENTER("IosBuilder.BuildFiles")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<46>");
	c_StringStack* t_buf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_buf,"buf")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<47>");
	c_NodeEnumerator3* t_=m__buildFiles->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_it=t_->p_NextObject();
		DBG_LOCAL(t_it,"it")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<48>");
		String t_path=t_it->p_Key();
		DBG_LOCAL(t_path,"path")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<49>");
		String t_id=t_it->p_Value();
		DBG_LOCAL(t_id,"id")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<50>");
		String t_fileRef=p_FileId(t_path,m__fileRefs);
		DBG_LOCAL(t_fileRef,"fileRef")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<51>");
		String t_dir=bb_os_ExtractDir(t_path);
		DBG_LOCAL(t_dir,"dir")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<52>");
		String t_name=bb_os_StripDir(t_path);
		DBG_LOCAL(t_name,"name")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<53>");
		String t_2=bb_os_ExtractExt(t_name);
		DBG_LOCAL(t_2,"2")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<54>");
		if(t_2==String(L"a",1) || t_2==String(L"framework",9)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<55>");
			t_buf->p_Push(String(L"\t\t",2)+t_id+String(L" = {isa = PBXBuildFile; fileRef = ",34)+t_fileRef+String(L"; };",4));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<58>");
	if((t_buf->p_Length2())!=0){
		DBG_BLOCK();
		t_buf->p_Push(String());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<59>");
	String t_3=t_buf->p_Join(String(L"\n",1));
	return t_3;
}
String c_IosBuilder::p_FileRefs(){
	DBG_ENTER("IosBuilder.FileRefs")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<63>");
	c_StringStack* t_buf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_buf,"buf")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<64>");
	c_NodeEnumerator3* t_=m__fileRefs->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_it=t_->p_NextObject();
		DBG_LOCAL(t_it,"it")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<65>");
		String t_path=t_it->p_Key();
		DBG_LOCAL(t_path,"path")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<66>");
		String t_id=t_it->p_Value();
		DBG_LOCAL(t_id,"id")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<67>");
		String t_dir=bb_os_ExtractDir(t_path);
		DBG_LOCAL(t_dir,"dir")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<68>");
		String t_name=bb_os_StripDir(t_path);
		DBG_LOCAL(t_name,"name")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<69>");
		String t_3=bb_os_ExtractExt(t_name);
		DBG_LOCAL(t_3,"3")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<70>");
		if(t_3==String(L"a",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<71>");
			t_buf->p_Push(String(L"\t\t",2)+t_id+String(L" = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = \"",68)+t_name+String(L"\"; sourceTree = \"<group>\"; };",29));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<72>");
			if(t_3==String(L"h",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<73>");
				t_buf->p_Push(String(L"\t\t",2)+t_id+String(L" = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ",89)+t_name+String(L"; sourceTree = \"<group>\"; };",28));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<74>");
				if(t_3==String(L"framework",9)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<75>");
					if((t_dir).Length()!=0){
						DBG_BLOCK();
						bb_transcc_Die(String(L"System frameworks only supported",32));
					}
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<76>");
					t_buf->p_Push(String(L"\t\t",2)+t_id+String(L" = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = ",74)+t_name+String(L"; path = System/Library/Frameworks/",35)+t_name+String(L"; sourceTree = SDKROOT; };",26));
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<79>");
	if((t_buf->p_Length2())!=0){
		DBG_BLOCK();
		t_buf->p_Push(String());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<80>");
	String t_2=t_buf->p_Join(String(L"\n",1));
	return t_2;
}
String c_IosBuilder::p_FrameworksBuildPhase(){
	DBG_ENTER("IosBuilder.FrameworksBuildPhase")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<84>");
	c_StringStack* t_buf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_buf,"buf")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<85>");
	c_NodeEnumerator3* t_=m__buildFiles->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_it=t_->p_NextObject();
		DBG_LOCAL(t_it,"it")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<86>");
		String t_path=t_it->p_Key();
		DBG_LOCAL(t_path,"path")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<87>");
		String t_id=t_it->p_Value();
		DBG_LOCAL(t_id,"id")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<88>");
		String t_4=bb_os_ExtractExt(t_path);
		DBG_LOCAL(t_4,"4")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<89>");
		if(t_4==String(L"a",1) || t_4==String(L"framework",9)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<90>");
			t_buf->p_Push(String(L"\t\t\t\t",4)+t_id);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<93>");
	if((t_buf->p_Length2())!=0){
		DBG_BLOCK();
		t_buf->p_Push(String());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<94>");
	String t_2=t_buf->p_Join(String(L",\n",2));
	return t_2;
}
String c_IosBuilder::p_FrameworksGroup(){
	DBG_ENTER("IosBuilder.FrameworksGroup")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<98>");
	c_StringStack* t_buf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_buf,"buf")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<99>");
	c_NodeEnumerator3* t_=m__fileRefs->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_it=t_->p_NextObject();
		DBG_LOCAL(t_it,"it")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<100>");
		String t_path=t_it->p_Key();
		DBG_LOCAL(t_path,"path")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<101>");
		String t_id=t_it->p_Value();
		DBG_LOCAL(t_id,"id")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<102>");
		String t_5=bb_os_ExtractExt(t_path);
		DBG_LOCAL(t_5,"5")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<103>");
		if(t_5==String(L"framework",9)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<104>");
			t_buf->p_Push(String(L"\t\t\t\t",4)+t_id);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<107>");
	if((t_buf->p_Length2())!=0){
		DBG_BLOCK();
		t_buf->p_Push(String());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<108>");
	String t_2=t_buf->p_Join(String(L",\n",2));
	return t_2;
}
String c_IosBuilder::p_LibsGroup(){
	DBG_ENTER("IosBuilder.LibsGroup")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<112>");
	c_StringStack* t_buf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_buf,"buf")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<113>");
	c_NodeEnumerator3* t_=m__fileRefs->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_it=t_->p_NextObject();
		DBG_LOCAL(t_it,"it")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<114>");
		String t_path=t_it->p_Key();
		DBG_LOCAL(t_path,"path")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<115>");
		String t_id=t_it->p_Value();
		DBG_LOCAL(t_id,"id")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<116>");
		String t_6=bb_os_ExtractExt(t_path);
		DBG_LOCAL(t_6,"6")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<117>");
		if(t_6==String(L"a",1) || t_6==String(L"h",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<118>");
			t_buf->p_Push(String(L"\t\t\t\t",4)+t_id);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<121>");
	if((t_buf->p_Length2())!=0){
		DBG_BLOCK();
		t_buf->p_Push(String());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<122>");
	String t_2=t_buf->p_Join(String(L",\n",2));
	return t_2;
}
String c_IosBuilder::p_MungProj(String t_proj){
	DBG_ENTER("IosBuilder.MungProj")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_proj,"proj")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<143>");
	int t_i=-1;
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<145>");
	t_i=p_FindEol(t_proj,String(L"/* Begin PBXBuildFile section */",32),0);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<146>");
	if(t_i==-1){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<147>");
	t_proj=t_proj.Slice(0,t_i)+p_BuildFiles()+t_proj.Slice(t_i);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<149>");
	t_i=p_FindEol(t_proj,String(L"/* Begin PBXFileReference section */",36),0);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<150>");
	if(t_i==-1){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<151>");
	t_proj=t_proj.Slice(0,t_i)+p_FileRefs()+t_proj.Slice(t_i);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<153>");
	t_i=p_FindEol(t_proj,String(L"/* Begin PBXFrameworksBuildPhase section */",43),0);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<154>");
	if(t_i!=-1){
		DBG_BLOCK();
		t_i=p_FindEol(t_proj,String(L"/* Frameworks */ = {",20),t_i);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<155>");
	if(t_i!=-1){
		DBG_BLOCK();
		t_i=p_FindEol(t_proj,String(L"files = (",9),t_i);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<156>");
	if(t_i==-1){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<157>");
	t_proj=t_proj.Slice(0,t_i)+p_FrameworksBuildPhase()+t_proj.Slice(t_i);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<159>");
	t_i=p_FindEol(t_proj,String(L"/* Begin PBXGroup section */",28),0);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<160>");
	if(t_i!=-1){
		DBG_BLOCK();
		t_i=p_FindEol(t_proj,String(L"/* Frameworks */ = {",20),t_i);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<161>");
	if(t_i!=-1){
		DBG_BLOCK();
		t_i=p_FindEol(t_proj,String(L"children = (",12),t_i);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<162>");
	if(t_i==-1){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<163>");
	t_proj=t_proj.Slice(0,t_i)+p_FrameworksGroup()+t_proj.Slice(t_i);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<167>");
	t_i=p_FindEol(t_proj,String(L"/* Begin PBXGroup section */",28),0);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<168>");
	if(t_i!=-1){
		DBG_BLOCK();
		t_i=p_FindEol(t_proj,String(L"/* libs */ = {",14),t_i);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<169>");
	if(t_i!=-1){
		DBG_BLOCK();
		t_i=p_FindEol(t_proj,String(L"children = (",12),t_i);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<170>");
	if(t_i==-1){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<171>");
	t_proj=t_proj.Slice(0,t_i)+p_LibsGroup()+t_proj.Slice(t_i);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<173>");
	return t_proj;
}
void c_IosBuilder::p_MungProj2(){
	DBG_ENTER("IosBuilder.MungProj")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<188>");
	String t_path=String(L"MonkeyGame.xcodeproj/project.pbxproj",36);
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<190>");
	String t_proj=LoadString(t_path);
	DBG_LOCAL(t_proj,"proj")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<193>");
	c_StringStack* t_buf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_buf,"buf")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<194>");
	Array<String > t_=t_proj.Split(String(L"\n",1));
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_line=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_line,"line")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<195>");
		if(!t_line.Trim().StartsWith(String(L"1ACECAFEBABE",12))){
			DBG_BLOCK();
			t_buf->p_Push(t_line);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<197>");
	t_proj=t_buf->p_Join(String(L"\n",1));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<202>");
	t_proj=p_MungProj(t_proj);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<203>");
	if(!((t_proj).Length()!=0)){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Failed to mung XCode project file",33));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<205>");
	SaveString(t_proj,t_path);
}
void c_IosBuilder::p_MakeTarget(){
	DBG_ENTER("IosBuilder.MakeTarget")
	c_IosBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<211>");
	p_CreateDataDir(String(L"data",4));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<213>");
	String t_main=LoadString(String(L"main.mm",7));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<215>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<216>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<218>");
	SaveString(t_main,String(L"main.mm",7));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<221>");
	String t_libs=bb_config_GetConfigVar(String(L"LIBS",4));
	DBG_LOCAL(t_libs,"libs")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<222>");
	if((t_libs).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<223>");
		Array<String > t_=t_libs.Split(String(L";",1));
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			String t_lib=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_lib,"lib")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<224>");
			if(!((t_lib).Length()!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<225>");
			String t_7=bb_os_ExtractExt(t_lib);
			DBG_LOCAL(t_7,"7")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<226>");
			if(t_7==String(L"a",1) || t_7==String(L"h",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<227>");
				String t_path=String(L"libs/",5)+bb_os_StripDir(t_lib);
				DBG_LOCAL(t_path,"path")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<228>");
				CopyFile(t_lib,t_path);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<229>");
				p_AddBuildFile(t_path);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<230>");
				if(t_7==String(L"framework",9)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<231>");
					p_AddBuildFile(t_lib);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<233>");
					bb_transcc_Die(String(L"Unrecognized lib file type:",27)+t_lib);
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<237>");
	p_MungProj2();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<239>");
	if(!m_tcc->m_opt_build){
		DBG_BLOCK();
		return;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<241>");
	p_Execute(String(L"xcodebuild -configuration ",26)+m_casedConfig+String(L" -sdk iphonesimulator",21),true);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<243>");
	if(!m_tcc->m_opt_run){
		DBG_BLOCK();
		return;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<245>");
	String t_home=GetEnv(String(L"HOME",4));
	DBG_LOCAL(t_home,"home")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<247>");
	String t_uuid=String(L"00C69C9A-C9DE-11DF-B3BE-5540E0D72085",36);
	DBG_LOCAL(t_uuid,"uuid")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<249>");
	String t_src=String(L"build/",6)+m_casedConfig+String(L"-iphonesimulator/MonkeyGame.app",31);
	DBG_LOCAL(t_src,"src")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<251>");
	String t_sim_path=String(L"/Applications/Xcode.app/Contents/Applications/iPhone Simulator.app",66);
	DBG_LOCAL(t_sim_path,"sim_path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<252>");
	if(FileType(t_sim_path)==0){
		DBG_BLOCK();
		t_sim_path=String(L"/Applications/Xcode.app/Contents/Developer/Builders/iPhoneSimulator.platform/Developer/Applications/iPhone Simulator.app",120);
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<255>");
	if(FileType(t_sim_path)==2){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<257>");
		String t_dst=String();
		DBG_LOCAL(t_dst,"dst")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<259>");
		Array<String > t_3=LoadDir(t_home+String(L"/Library/Application Support/iPhone Simulator",45));
		int t_4=0;
		while(t_4<t_3.Length()){
			DBG_BLOCK();
			String t_f=t_3.At(t_4);
			t_4=t_4+1;
			DBG_LOCAL(t_f,"f")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<261>");
			if(t_f.Length()>2 && (int)t_f.At(0)>48 && (int)t_f.At(0)<58 && (int)t_f.At(1)==46 && (int)t_f.At(2)>=48 && (int)t_f.At(2)<58 && !t_f.Contains(String(L"-64",3)) && t_f>t_dst){
				DBG_BLOCK();
				t_dst=t_f;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<266>");
		if(!((t_dst).Length()!=0)){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Can't find iPhone simulator app version dir",43));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<268>");
		t_dst=t_home+String(L"/Library/Application Support/iPhone Simulator/",46)+t_dst+String(L"/Applications",13);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<270>");
		CreateDir(t_dst);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<271>");
		if(FileType(t_dst)!=2){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to create dir:",21)+t_dst);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<273>");
		t_dst=t_dst+(String(L"/",1)+t_uuid);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<274>");
		if(!((bb_os_DeleteDir(t_dst,true))!=0)){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to delete dir:",21)+t_dst);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<275>");
		if(!((CreateDir(t_dst))!=0)){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to create dir:",21)+t_dst);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<279>");
		p_Execute(String(L"cp -r \"",7)+t_src+String(L"\" \"",3)+t_dst+String(L"/MonkeyGame.app\"",16),true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<283>");
		CreateDir(t_dst+String(L"/Documents",10));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<287>");
		p_Execute(String(L"killall \"iPhone Simulator\" 2>/dev/null",38),false);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<288>");
		p_Execute(String(L"open \"",6)+t_sim_path+String(L"\"",1),true);
		return;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<295>");
	t_sim_path=String(L"/Developer/Builders/iPhoneSimulator.platform/Developer/Applications/iPhone Simulator.app",88);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<297>");
	if(FileType(t_sim_path)==2){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<299>");
		String t_dst2=t_home+String(L"/Library/Application Support/iPhone Simulator/4.3.2",51);
		DBG_LOCAL(t_dst2,"dst")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<300>");
		if(FileType(t_dst2)==0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<301>");
			t_dst2=t_home+String(L"/Library/Application Support/iPhone Simulator/4.3",49);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<302>");
			if(FileType(t_dst2)==0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<303>");
				t_dst2=t_home+String(L"/Library/Application Support/iPhone Simulator/4.2",49);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<307>");
		CreateDir(t_dst2);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<308>");
		t_dst2=t_dst2+String(L"/Applications",13);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<309>");
		CreateDir(t_dst2);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<310>");
		t_dst2=t_dst2+(String(L"/",1)+t_uuid);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<311>");
		if(!((bb_os_DeleteDir(t_dst2,true))!=0)){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to delete dir:",21)+t_dst2);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<312>");
		if(!((CreateDir(t_dst2))!=0)){
			DBG_BLOCK();
			bb_transcc_Die(String(L"Failed to create dir:",21)+t_dst2);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<316>");
		p_Execute(String(L"cp -r \"",7)+t_src+String(L"\" \"",3)+t_dst2+String(L"/MonkeyGame.app\"",16),true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<320>");
		p_Execute(String(L"killall \"iPhone Simulator\" 2>/dev/null",38),false);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/ios.monkey<321>");
		p_Execute(String(L"open \"",6)+t_sim_path+String(L"\"",1),true);
		return;
	}
}
void c_IosBuilder::mark(){
	c_Builder::mark();
	gc_mark_q(m__buildFiles);
	gc_mark_q(m__fileRefs);
}
String c_IosBuilder::debug(){
	String t="(IosBuilder)\n";
	t=c_Builder::debug()+t;
	t+=dbg_decl("_nextFileId",&m__nextFileId);
	t+=dbg_decl("_fileRefs",&m__fileRefs);
	t+=dbg_decl("_buildFiles",&m__buildFiles);
	return t;
}
c_FlashBuilder::c_FlashBuilder(){
}
c_FlashBuilder* c_FlashBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("FlashBuilder.new")
	c_FlashBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_FlashBuilder* c_FlashBuilder::m_new2(){
	DBG_ENTER("FlashBuilder.new")
	c_FlashBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_FlashBuilder::p_IsValid(){
	DBG_ENTER("FlashBuilder.IsValid")
	c_FlashBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<48>");
	bool t_=m_tcc->m_FLEX_PATH!=String();
	return t_;
}
void c_FlashBuilder::p_Begin(){
	DBG_ENTER("FlashBuilder.Begin")
	c_FlashBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<52>");
	bb_config_ENV_LANG=String(L"as",2);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<53>");
	gc_assign(bb_translator__trans,((new c_AsTranslator)->m_new()));
}
String c_FlashBuilder::p_Assets(){
	DBG_ENTER("FlashBuilder.Assets")
	c_FlashBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<19>");
	c_StringStack* t_assets=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_assets,"assets")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<20>");
	c_NodeEnumerator3* t_=m_dataFiles->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<22>");
		String t_ext=bb_os_ExtractExt(t_kv->p_Value());
		DBG_LOCAL(t_ext,"ext")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<24>");
		String t_munged=String(L"_",1);
		DBG_LOCAL(t_munged,"munged")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<25>");
		Array<String > t_2=bb_os_StripExt(t_kv->p_Value()).Split(String(L"/",1));
		int t_3=0;
		while(t_3<t_2.Length()){
			DBG_BLOCK();
			String t_q=t_2.At(t_3);
			t_3=t_3+1;
			DBG_LOCAL(t_q,"q")
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<26>");
			for(int t_i=0;t_i<t_q.Length();t_i=t_i+1){
				DBG_BLOCK();
				DBG_LOCAL(t_i,"i")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<27>");
				if(((bb_config_IsAlpha((int)t_q.At(t_i)))!=0) || ((bb_config_IsDigit((int)t_q.At(t_i)))!=0) || (int)t_q.At(t_i)==95){
					DBG_BLOCK();
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<28>");
				bb_transcc_Die(String(L"Invalid character in flash filename: ",37)+t_kv->p_Value()+String(L".",1));
			}
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<30>");
			t_munged=t_munged+(String(t_q.Length())+t_q);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<32>");
		t_munged=t_munged+(String(t_ext.Length())+t_ext);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<34>");
		String t_1=t_ext.ToLower();
		DBG_LOCAL(t_1,"1")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<35>");
		if(t_1==String(L"png",3) || t_1==String(L"jpg",3) || t_1==String(L"mp3",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<36>");
			t_assets->p_Push(String(L"[Embed(source=\"data/",20)+t_kv->p_Value()+String(L"\")]",3));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<37>");
			t_assets->p_Push(String(L"public static var ",18)+t_munged+String(L":Class;",7));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<39>");
			t_assets->p_Push(String(L"[Embed(source=\"data/",20)+t_kv->p_Value()+String(L"\",mimeType=\"application/octet-stream\")]",39));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<40>");
			t_assets->p_Push(String(L"public static var ",18)+t_munged+String(L":Class;",7));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<44>");
	String t_4=t_assets->p_Join(String(L"\n",1));
	return t_4;
}
String c_FlashBuilder::p_Config(){
	DBG_ENTER("FlashBuilder.Config")
	c_FlashBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<13>");
		t_config->p_Push(String(L"internal static var ",20)+t_kv->p_Key()+String(L":String=",8)+bb_config_Enquote(t_kv->p_Value(),String(L"as",2)));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_FlashBuilder::p_MakeTarget(){
	DBG_ENTER("FlashBuilder.MakeTarget")
	c_FlashBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<58>");
	p_CreateDataDir(String(L"data",4));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<61>");
	String t_main=LoadString(String(L"MonkeyGame.as",13));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<63>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<64>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"ASSETS",6),p_Assets(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<65>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<67>");
	SaveString(t_main,String(L"MonkeyGame.as",13));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<69>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<71>");
		String t_cc_opts=String(L" -static-link-runtime-shared-libraries=true",43);
		DBG_LOCAL(t_cc_opts,"cc_opts")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<73>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			t_cc_opts=t_cc_opts+String(L" -debug=true",12);
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<75>");
		DeleteFile(String(L"main.swf",8));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<77>");
		p_Execute(String(L"mxmlc",5)+t_cc_opts+String(L" MonkeyGame.as",14),true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<79>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<80>");
			if((m_tcc->m_FLASH_PLAYER).Length()!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<81>");
				p_Execute(m_tcc->m_FLASH_PLAYER+String(L" \"",2)+RealPath(String(L"MonkeyGame.swf",14))+String(L"\"",1),false);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<82>");
				if((m_tcc->m_HTML_PLAYER).Length()!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/flash.monkey<83>");
					p_Execute(m_tcc->m_HTML_PLAYER+String(L" \"",2)+RealPath(String(L"MonkeyGame.html",15))+String(L"\"",1),false);
				}
			}
		}
	}
}
void c_FlashBuilder::mark(){
	c_Builder::mark();
}
String c_FlashBuilder::debug(){
	String t="(FlashBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_PsmBuilder::c_PsmBuilder(){
}
c_PsmBuilder* c_PsmBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("PsmBuilder.new")
	c_PsmBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_PsmBuilder* c_PsmBuilder::m_new2(){
	DBG_ENTER("PsmBuilder.new")
	c_PsmBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_PsmBuilder::p_IsValid(){
	DBG_ENTER("PsmBuilder.IsValid")
	c_PsmBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<74>");
	String t_4=HostOS();
	DBG_LOCAL(t_4,"4")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<75>");
	if(t_4==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<76>");
		if(((m_tcc->m_PSM_PATH).Length()!=0) && FileType(m_tcc->m_PSM_PATH+String(L"/tools/PsmStudio/bin/mdtool.exe",31))==1){
			DBG_BLOCK();
			return true;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<78>");
	return false;
}
void c_PsmBuilder::p_Begin(){
	DBG_ENTER("PsmBuilder.Begin")
	c_PsmBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<82>");
	bb_config_ENV_LANG=String(L"cs",2);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<83>");
	gc_assign(bb_translator__trans,((new c_CsTranslator)->m_new()));
}
String c_PsmBuilder::p_Content(){
	DBG_ENTER("PsmBuilder.Content")
	c_PsmBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<19>");
	c_StringStack* t_cont=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_cont,"cont")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<21>");
	c_NodeEnumerator3* t_=m_dataFiles->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<23>");
		String t_p=t_kv->p_Key();
		DBG_LOCAL(t_p,"p")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<24>");
		String t_r=t_kv->p_Value();
		DBG_LOCAL(t_r,"r")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<25>");
		String t_f=bb_os_StripDir(t_r);
		DBG_LOCAL(t_f,"f")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<26>");
		String t_t=(String(L"data/",5)+t_r).Replace(String(L"/",1),String(L"\\",1));
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<28>");
		String t_ext=bb_os_ExtractExt(t_r).ToLower();
		DBG_LOCAL(t_ext,"ext")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<30>");
		if(bb_transcc_MatchPath(t_r,m_TEXT_FILES)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<31>");
			t_cont->p_Push(String(L"    <Content Include=\"",22)+t_t+String(L"\">",2));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<32>");
			t_cont->p_Push(String(L"      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>",67));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<33>");
			t_cont->p_Push(String(L"    </Content>",14));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<34>");
			if(bb_transcc_MatchPath(t_r,m_IMAGE_FILES)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<35>");
				String t_1=t_ext;
				DBG_LOCAL(t_1,"1")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<36>");
				if(t_1==String(L"png",3) || t_1==String(L"jpg",3) || t_1==String(L"bmp",3) || t_1==String(L"gif",3)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<37>");
					t_cont->p_Push(String(L"    <Content Include=\"",22)+t_t+String(L"\">",2));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<38>");
					t_cont->p_Push(String(L"      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>",67));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<39>");
					t_cont->p_Push(String(L"    </Content>",14));
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<41>");
					bb_transcc_Die(String(L"Invalid image file type",23));
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<43>");
				if(bb_transcc_MatchPath(t_r,m_SOUND_FILES)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<44>");
					String t_2=t_ext;
					DBG_LOCAL(t_2,"2")
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<45>");
					if(t_2==String(L"wav",3)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<46>");
						t_cont->p_Push(String(L"    <Content Include=\"",22)+t_t+String(L"\">",2));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<47>");
						t_cont->p_Push(String(L"      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>",67));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<48>");
						t_cont->p_Push(String(L"    </Content>",14));
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<50>");
						bb_transcc_Die(String(L"Invalid sound file type",23));
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<52>");
					if(bb_transcc_MatchPath(t_r,m_MUSIC_FILES)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<53>");
						String t_3=t_ext;
						DBG_LOCAL(t_3,"3")
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<54>");
						if(t_3==String(L"mp3",3)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<55>");
							t_cont->p_Push(String(L"    <Content Include=\"",22)+t_t+String(L"\">",2));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<56>");
							t_cont->p_Push(String(L"      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>",67));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<57>");
							t_cont->p_Push(String(L"    </Content>",14));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<59>");
							bb_transcc_Die(String(L"Invalid music file type",23));
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<61>");
						if(bb_transcc_MatchPath(t_r,m_BINARY_FILES)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<62>");
							t_cont->p_Push(String(L"    <Content Include=\"",22)+t_t+String(L"\">",2));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<63>");
							t_cont->p_Push(String(L"      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>",67));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<64>");
							t_cont->p_Push(String(L"    </Content>",14));
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<69>");
	String t_4=t_cont->p_Join(String(L"\n",1));
	return t_4;
}
String c_PsmBuilder::p_Config(){
	DBG_ENTER("PsmBuilder.Config")
	c_PsmBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<13>");
		t_config->p_Push(String(L"public const String ",20)+t_kv->p_Key()+String(L"=",1)+bb_config_Enquote(t_kv->p_Value(),String(L"cs",2))+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_PsmBuilder::p_MakeTarget(){
	DBG_ENTER("PsmBuilder.MakeTarget")
	c_PsmBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<88>");
	p_CreateDataDir(String(L"data",4));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<90>");
	String t_proj=LoadString(String(L"MonkeyGame.csproj",17));
	DBG_LOCAL(t_proj,"proj")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<91>");
	t_proj=bb_transcc_ReplaceBlock(t_proj,String(L"CONTENT",7),p_Content(),String(L"\n<!-- ",6));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<92>");
	SaveString(t_proj,String(L"MonkeyGame.csproj",17));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<94>");
	String t_main=LoadString(String(L"MonkeyGame.cs",13));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<95>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<96>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<97>");
	SaveString(t_main,String(L"MonkeyGame.cs",13));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<99>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<101>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/psm.monkey<102>");
			p_Execute(String(L"\"",1)+m_tcc->m_PSM_PATH+String(L"/tools/PsmStudio/bin/mdtool\" psm windows run-project MonkeyGame.sln",67),true);
		}
	}
}
void c_PsmBuilder::mark(){
	c_Builder::mark();
}
String c_PsmBuilder::debug(){
	String t="(PsmBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_StdcppBuilder::c_StdcppBuilder(){
}
c_StdcppBuilder* c_StdcppBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("StdcppBuilder.new")
	c_StdcppBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_StdcppBuilder* c_StdcppBuilder::m_new2(){
	DBG_ENTER("StdcppBuilder.new")
	c_StdcppBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_StdcppBuilder::p_IsValid(){
	DBG_ENTER("StdcppBuilder.IsValid")
	c_StdcppBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<19>");
	String t_1=HostOS();
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<20>");
	if(t_1==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<21>");
		if((m_tcc->m_MINGW_PATH).Length()!=0){
			DBG_BLOCK();
			return true;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<23>");
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<25>");
	return false;
}
void c_StdcppBuilder::p_Begin(){
	DBG_ENTER("StdcppBuilder.Begin")
	c_StdcppBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<29>");
	bb_config_ENV_LANG=String(L"cpp",3);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<30>");
	gc_assign(bb_translator__trans,((new c_CppTranslator)->m_new()));
}
String c_StdcppBuilder::p_Config(){
	DBG_ENTER("StdcppBuilder.Config")
	c_StdcppBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<13>");
		t_config->p_Push(String(L"#define CFG_",12)+t_kv->p_Key()+String(L" ",1)+t_kv->p_Value());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_StdcppBuilder::p_MakeTarget(){
	DBG_ENTER("StdcppBuilder.MakeTarget")
	c_StdcppBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<35>");
	String t_2=bb_config_ENV_CONFIG;
	DBG_LOCAL(t_2,"2")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<36>");
	if(t_2==String(L"debug",5)){
		DBG_BLOCK();
		bb_config_SetConfigVar2(String(L"DEBUG",5),String(L"1",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<37>");
		if(t_2==String(L"release",7)){
			DBG_BLOCK();
			bb_config_SetConfigVar2(String(L"RELEASE",7),String(L"1",1));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<38>");
			if(t_2==String(L"profile",7)){
				DBG_BLOCK();
				bb_config_SetConfigVar2(String(L"PROFILE",7),String(L"1",1));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<41>");
	String t_main=LoadString(String(L"main.cpp",8));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<43>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<44>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<46>");
	SaveString(t_main,String(L"main.cpp",8));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<48>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<50>");
		String t_out=String(L"main_",5)+HostOS();
		DBG_LOCAL(t_out,"out")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<51>");
		DeleteFile(t_out);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<53>");
		String t_OPTS=String();
		String t_LIBS=String();
		DBG_LOCAL(t_OPTS,"OPTS")
		DBG_LOCAL(t_LIBS,"LIBS")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<55>");
		String t_3=bb_config_ENV_HOST;
		DBG_LOCAL(t_3,"3")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<56>");
		if(t_3==String(L"winnt",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<57>");
			t_OPTS=t_OPTS+String(L" -Wno-free-nonheap-object",25);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<58>");
			t_LIBS=t_LIBS+String(L" -lwinmm -lws2_32",17);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<59>");
			if(t_3==String(L"macos",5)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<60>");
				t_OPTS=t_OPTS+String(L" -Wno-parentheses -Wno-dangling-else",36);
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<61>");
				t_OPTS=t_OPTS+String(L" -mmacosx-version-min=10.6",26);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<62>");
				if(t_3==String(L"linux",5)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<63>");
					t_OPTS=t_OPTS+String(L" -Wno-unused-result",19);
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<64>");
					t_LIBS=t_LIBS+String(L" -lpthread",10);
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<67>");
		String t_4=bb_config_ENV_CONFIG;
		DBG_LOCAL(t_4,"4")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<68>");
		if(t_4==String(L"debug",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<69>");
			t_OPTS=t_OPTS+String(L" -O0",4);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<70>");
			if(t_4==String(L"release",7)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<71>");
				t_OPTS=t_OPTS+String(L" -O3 -DNDEBUG",13);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<74>");
		String t_cc_opts=bb_config_GetConfigVar(String(L"CC_OPTS",7));
		DBG_LOCAL(t_cc_opts,"cc_opts")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<75>");
		if((t_cc_opts).Length()!=0){
			DBG_BLOCK();
			t_OPTS=t_OPTS+(String(L" ",1)+t_cc_opts.Replace(String(L";",1),String(L" ",1)));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<77>");
		String t_cc_libs=bb_config_GetConfigVar(String(L"CC_LIBS",7));
		DBG_LOCAL(t_cc_libs,"cc_libs")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<78>");
		if((t_cc_libs).Length()!=0){
			DBG_BLOCK();
			t_LIBS=t_LIBS+(String(L" ",1)+t_cc_libs.Replace(String(L";",1),String(L" ",1)));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<80>");
		p_Execute(String(L"g++",3)+t_OPTS+String(L" -o ",4)+t_out+String(L" main.cpp",9)+t_LIBS,true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<82>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/stdcpp.monkey<83>");
			p_Execute(String(L"\"",1)+RealPath(t_out)+String(L"\"",1),true);
		}
	}
}
void c_StdcppBuilder::mark(){
	c_Builder::mark();
}
String c_StdcppBuilder::debug(){
	String t="(StdcppBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_WinrtBuilder::c_WinrtBuilder(){
}
c_WinrtBuilder* c_WinrtBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("WinrtBuilder.new")
	c_WinrtBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_WinrtBuilder* c_WinrtBuilder::m_new2(){
	DBG_ENTER("WinrtBuilder.new")
	c_WinrtBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_WinrtBuilder::p_IsValid(){
	DBG_ENTER("WinrtBuilder.IsValid")
	c_WinrtBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<35>");
	String t_1=HostOS();
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<36>");
	if(t_1==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<37>");
		if((m_tcc->m_MSBUILD_PATH).Length()!=0){
			DBG_BLOCK();
			return true;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<39>");
	return false;
}
void c_WinrtBuilder::p_Begin(){
	DBG_ENTER("WinrtBuilder.Begin")
	c_WinrtBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<43>");
	bb_config_ENV_LANG=String(L"cpp",3);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<44>");
	gc_assign(bb_translator__trans,((new c_CppTranslator)->m_new()));
}
String c_WinrtBuilder::p_Content2(bool t_csharp){
	DBG_ENTER("WinrtBuilder.Content")
	c_WinrtBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_csharp,"csharp")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<19>");
	c_StringStack* t_cont=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_cont,"cont")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<20>");
	c_NodeEnumerator3* t_=m_dataFiles->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<21>");
		if(t_csharp){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<22>");
			t_cont->p_Push(String(L"    <Content Include=\"Assets\\monkey\\",36)+t_kv->p_Value().Replace(String(L"/",1),String(L"\\",1))+String(L"\">",2));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<23>");
			t_cont->p_Push(String(L"      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>",67));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<24>");
			t_cont->p_Push(String(L"    </Content>",14));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<26>");
			t_cont->p_Push(String(L"    <None Include=\"Assets\\monkey\\",33)+t_kv->p_Value().Replace(String(L"/",1),String(L"\\",1))+String(L"\">",2));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<27>");
			t_cont->p_Push(String(L"      <DeploymentContent>true</DeploymentContent>",49));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<28>");
			t_cont->p_Push(String(L"    </None>",11));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<31>");
	String t_2=t_cont->p_Join(String(L"\n",1));
	return t_2;
}
String c_WinrtBuilder::p_Config(){
	DBG_ENTER("WinrtBuilder.Config")
	c_WinrtBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<13>");
		t_config->p_Push(String(L"#define CFG_",12)+t_kv->p_Key()+String(L" ",1)+t_kv->p_Value());
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_WinrtBuilder::p_MakeTarget(){
	DBG_ENTER("WinrtBuilder.MakeTarget")
	c_WinrtBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<49>");
	p_CreateDataDir(String(L"Assets/monkey",13));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<52>");
	String t_proj=LoadString(String(L"MonkeyGame.vcxproj",18));
	DBG_LOCAL(t_proj,"proj")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<53>");
	if((t_proj).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<54>");
		t_proj=bb_transcc_ReplaceBlock(t_proj,String(L"CONTENT",7),p_Content2(false),String(L"\n    <!-- ",10));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<55>");
		SaveString(t_proj,String(L"MonkeyGame.vcxproj",18));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<57>");
		String t_proj2=LoadString(String(L"MonkeyGame.csproj",17));
		DBG_LOCAL(t_proj2,"proj")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<58>");
		t_proj2=bb_transcc_ReplaceBlock(t_proj2,String(L"CONTENT",7),p_Content2(true),String(L"\n    <!-- ",10));
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<59>");
		SaveString(t_proj2,String(L"MonkeyGame.csproj",17));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<63>");
	String t_main=LoadString(String(L"MonkeyGame.cpp",14));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<65>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<66>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<68>");
	SaveString(t_main,String(L"MonkeyGame.cpp",14));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<70>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<72>");
		p_Execute(m_tcc->m_MSBUILD_PATH+String(L" /p:Configuration=",18)+m_casedConfig+String(L" /p:Platform=Win32 MonkeyGame.sln",33),true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/winrt.monkey<74>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
		}
	}
}
void c_WinrtBuilder::mark(){
	c_Builder::mark();
}
String c_WinrtBuilder::debug(){
	String t="(WinrtBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_XnaBuilder::c_XnaBuilder(){
}
c_XnaBuilder* c_XnaBuilder::m_new(c_TransCC* t_tcc){
	DBG_ENTER("XnaBuilder.new")
	c_XnaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<7>");
	c_Builder::m_new(t_tcc);
	return this;
}
c_XnaBuilder* c_XnaBuilder::m_new2(){
	DBG_ENTER("XnaBuilder.new")
	c_XnaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<4>");
	c_Builder::m_new2();
	return this;
}
bool c_XnaBuilder::p_IsValid(){
	DBG_ENTER("XnaBuilder.IsValid")
	c_XnaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<96>");
	String t_4=HostOS();
	DBG_LOCAL(t_4,"4")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<97>");
	if(t_4==String(L"winnt",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<98>");
		if((m_tcc->m_MSBUILD_PATH).Length()!=0){
			DBG_BLOCK();
			return true;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<100>");
	return false;
}
void c_XnaBuilder::p_Begin(){
	DBG_ENTER("XnaBuilder.Begin")
	c_XnaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<104>");
	bb_config_ENV_LANG=String(L"cs",2);
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<105>");
	gc_assign(bb_translator__trans,((new c_CsTranslator)->m_new()));
}
String c_XnaBuilder::p_Content(){
	DBG_ENTER("XnaBuilder.Content")
	c_XnaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<19>");
	c_StringStack* t_cont=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_cont,"cont")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<21>");
	c_NodeEnumerator3* t_=m_dataFiles->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<23>");
		String t_p=t_kv->p_Key();
		DBG_LOCAL(t_p,"p")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<24>");
		String t_r=t_kv->p_Value();
		DBG_LOCAL(t_r,"r")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<25>");
		String t_f=bb_os_StripDir(t_r);
		DBG_LOCAL(t_f,"f")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<26>");
		String t_t=(String(L"monkey/",7)+t_r).Replace(String(L"/",1),String(L"\\",1));
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<28>");
		String t_ext=bb_os_ExtractExt(t_r).ToLower();
		DBG_LOCAL(t_ext,"ext")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<30>");
		if(bb_transcc_MatchPath(t_r,m_TEXT_FILES)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<31>");
			t_cont->p_Push(String(L"  <ItemGroup>",13));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<32>");
			t_cont->p_Push(String(L"    <Content Include=\"",22)+t_t+String(L"\">",2));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<33>");
			t_cont->p_Push(String(L"      <Name>",12)+t_f+String(L"</Name>",7));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<34>");
			t_cont->p_Push(String(L"      <CopyToOutputDirectory>Always</CopyToOutputDirectory>",59));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<35>");
			t_cont->p_Push(String(L"    </Content>",14));
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<36>");
			t_cont->p_Push(String(L"  </ItemGroup>",14));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<37>");
			if(bb_transcc_MatchPath(t_r,m_IMAGE_FILES)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<38>");
				String t_1=t_ext;
				DBG_LOCAL(t_1,"1")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<39>");
				if(t_1==String(L"bmp",3) || t_1==String(L"dds",3) || t_1==String(L"dib",3) || t_1==String(L"hdr",3) || t_1==String(L"jpg",3) || t_1==String(L"pfm",3) || t_1==String(L"png",3) || t_1==String(L"ppm",3) || t_1==String(L"tga",3)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<40>");
					t_cont->p_Push(String(L"  <ItemGroup>",13));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<41>");
					t_cont->p_Push(String(L"    <Compile Include=\"",22)+t_t+String(L"\">",2));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<42>");
					t_cont->p_Push(String(L"      <Name>",12)+t_f+String(L"</Name>",7));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<43>");
					t_cont->p_Push(String(L"      <Importer>TextureImporter</Importer>",42));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<44>");
					t_cont->p_Push(String(L"      <Processor>TextureProcessor</Processor>",45));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<45>");
					t_cont->p_Push(String(L"      <ProcessorParameters_ColorKeyEnabled>False</ProcessorParameters_ColorKeyEnabled>",86));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<46>");
					t_cont->p_Push(String(L"      <ProcessorParameters_PremultiplyAlpha>False</ProcessorParameters_PremultiplyAlpha>",88));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<47>");
					t_cont->p_Push(String(L"\t   </Compile>",14));
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<48>");
					t_cont->p_Push(String(L"  </ItemGroup>",14));
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<50>");
					bb_transcc_Die(String(L"Invalid image file type",23));
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<52>");
				if(bb_transcc_MatchPath(t_r,m_SOUND_FILES)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<53>");
					String t_2=t_ext;
					DBG_LOCAL(t_2,"2")
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<54>");
					if(t_2==String(L"wav",3) || t_2==String(L"mp3",3) || t_2==String(L"wma",3)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<55>");
						String t_imp=t_ext.Slice(0,1).ToUpper()+t_ext.Slice(1)+String(L"Importer",8);
						DBG_LOCAL(t_imp,"imp")
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<56>");
						t_cont->p_Push(String(L"  <ItemGroup>",13));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<57>");
						t_cont->p_Push(String(L"    <Compile Include=\"",22)+t_t+String(L"\">",2));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<58>");
						t_cont->p_Push(String(L"      <Name>",12)+t_f+String(L"</Name>",7));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<59>");
						t_cont->p_Push(String(L"      <Importer>",16)+t_imp+String(L"</Importer>",11));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<60>");
						t_cont->p_Push(String(L"      <Processor>SoundEffectProcessor</Processor>",49));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<61>");
						t_cont->p_Push(String(L"\t   </Compile>",14));
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<62>");
						t_cont->p_Push(String(L"  </ItemGroup>",14));
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<64>");
						bb_transcc_Die(String(L"Invalid sound file type",23));
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<66>");
					if(bb_transcc_MatchPath(t_r,m_MUSIC_FILES)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<67>");
						String t_3=t_ext;
						DBG_LOCAL(t_3,"3")
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<68>");
						if(t_3==String(L"wav",3) || t_3==String(L"mp3",3) || t_3==String(L"wma",3)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<69>");
							String t_imp2=t_ext.Slice(0,1).ToUpper()+t_ext.Slice(1)+String(L"Importer",8);
							DBG_LOCAL(t_imp2,"imp")
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<70>");
							t_cont->p_Push(String(L"  <ItemGroup>",13));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<71>");
							t_cont->p_Push(String(L"    <Compile Include=\"",22)+t_t+String(L"\">",2));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<72>");
							t_cont->p_Push(String(L"      <Name>",12)+t_f+String(L"</Name>",7));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<73>");
							t_cont->p_Push(String(L"      <Importer>",16)+t_imp2+String(L"</Importer>",11));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<74>");
							t_cont->p_Push(String(L"      <Processor>SongProcessor</Processor>",42));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<75>");
							t_cont->p_Push(String(L"\t   </Compile>",14));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<76>");
							t_cont->p_Push(String(L"  </ItemGroup>",14));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<78>");
							bb_transcc_Die(String(L"Invalid music file type",23));
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<80>");
						if(bb_transcc_MatchPath(t_r,m_BINARY_FILES)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<81>");
							t_cont->p_Push(String(L"  <ItemGroup>",13));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<82>");
							t_cont->p_Push(String(L"    <Content Include=\"",22)+t_t+String(L"\">",2));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<83>");
							t_cont->p_Push(String(L"      <Name>",12)+t_f+String(L"</Name>",7));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<84>");
							t_cont->p_Push(String(L"      <CopyToOutputDirectory>Always</CopyToOutputDirectory>",59));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<85>");
							t_cont->p_Push(String(L"    </Content>",14));
							DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<86>");
							t_cont->p_Push(String(L"  </ItemGroup>",14));
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<91>");
	String t_4=t_cont->p_Join(String(L"\n",1));
	return t_4;
}
String c_XnaBuilder::p_Config(){
	DBG_ENTER("XnaBuilder.Config")
	c_XnaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<11>");
	c_StringStack* t_config=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_config,"config")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<12>");
	c_NodeEnumerator3* t_=bb_config_GetConfigVars()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Node2* t_kv=t_->p_NextObject();
		DBG_LOCAL(t_kv,"kv")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<13>");
		t_config->p_Push(String(L"public const String ",20)+t_kv->p_Key()+String(L"=",1)+bb_config_Enquote(t_kv->p_Value(),String(L"cs",2))+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<15>");
	String t_2=t_config->p_Join(String(L"\n",1));
	return t_2;
}
void c_XnaBuilder::p_MakeTarget(){
	DBG_ENTER("XnaBuilder.MakeTarget")
	c_XnaBuilder *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<110>");
	p_CreateDataDir(String(L"MonkeyGame/MonkeyGameContent/monkey",35));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<113>");
	String t_contproj=LoadString(String(L"MonkeyGame/MonkeyGameContent/MonkeyGameContent.contentproj",58));
	DBG_LOCAL(t_contproj,"contproj")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<114>");
	t_contproj=bb_transcc_ReplaceBlock(t_contproj,String(L"CONTENT",7),p_Content(),String(L"\n<!-- ",6));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<115>");
	SaveString(t_contproj,String(L"MonkeyGame/MonkeyGameContent/MonkeyGameContent.contentproj",58));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<118>");
	String t_main=LoadString(String(L"MonkeyGame/MonkeyGame/Program.cs",32));
	DBG_LOCAL(t_main,"main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<120>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"TRANSCODE",9),m_transCode,String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<121>");
	t_main=bb_transcc_ReplaceBlock(t_main,String(L"CONFIG",6),p_Config(),String(L"\n//",3));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<123>");
	SaveString(t_main,String(L"MonkeyGame/MonkeyGame/Program.cs",32));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<125>");
	if(m_tcc->m_opt_build){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<127>");
		p_Execute(m_tcc->m_MSBUILD_PATH+String(L" /t:MonkeyGame /p:Configuration=",32)+m_casedConfig+String(L" MonkeyGame.sln",15),true);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<129>");
		if(m_tcc->m_opt_run){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<130>");
			ChangeDir(String(L"MonkeyGame/MonkeyGame/bin/x86/",30)+m_casedConfig);
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/xna.monkey<131>");
			p_Execute(String(L"MonkeyGame",10),false);
		}
	}
}
void c_XnaBuilder::mark(){
	c_Builder::mark();
}
String c_XnaBuilder::debug(){
	String t="(XnaBuilder)\n";
	t=c_Builder::debug()+t;
	return t;
}
c_StringMap3* bb_builders_Builders(c_TransCC* t_tcc){
	DBG_ENTER("Builders")
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<17>");
	c_StringMap3* t_builders=(new c_StringMap3)->m_new();
	DBG_LOCAL(t_builders,"builders")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<19>");
	t_builders->p_Set3(String(L"amiga",5),((new c_AmigaBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<20>");
	t_builders->p_Set3(String(L"android",7),((new c_AndroidBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<21>");
	t_builders->p_Set3(String(L"android_ndk",11),((new c_AndroidNdkBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<22>");
	t_builders->p_Set3(String(L"glfw",4),((new c_GlfwBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<23>");
	t_builders->p_Set3(String(L"html5",5),((new c_Html5Builder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<24>");
	t_builders->p_Set3(String(L"ios",3),((new c_IosBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<25>");
	t_builders->p_Set3(String(L"flash",5),((new c_FlashBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<26>");
	t_builders->p_Set3(String(L"psm",3),((new c_PsmBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<27>");
	t_builders->p_Set3(String(L"stdcpp",6),((new c_StdcppBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<28>");
	t_builders->p_Set3(String(L"winrt",5),((new c_WinrtBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<29>");
	t_builders->p_Set3(String(L"xna",3),((new c_XnaBuilder)->m_new(t_tcc)));
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/builders.monkey<31>");
	return t_builders;
}
c_NodeEnumerator::c_NodeEnumerator(){
	m_node=0;
}
c_NodeEnumerator* c_NodeEnumerator::m_new(c_Node3* t_node){
	DBG_ENTER("NodeEnumerator.new")
	c_NodeEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<437>");
	gc_assign(this->m_node,t_node);
	return this;
}
c_NodeEnumerator* c_NodeEnumerator::m_new2(){
	DBG_ENTER("NodeEnumerator.new")
	c_NodeEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<434>");
	return this;
}
bool c_NodeEnumerator::p_HasNext(){
	DBG_ENTER("NodeEnumerator.HasNext")
	c_NodeEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<441>");
	bool t_=m_node!=0;
	return t_;
}
c_Node3* c_NodeEnumerator::p_NextObject(){
	DBG_ENTER("NodeEnumerator.NextObject")
	c_NodeEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<445>");
	c_Node3* t_t=m_node;
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<446>");
	gc_assign(m_node,m_node->p_NextNode());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<447>");
	return t_t;
}
void c_NodeEnumerator::mark(){
	Object::mark();
	gc_mark_q(m_node);
}
String c_NodeEnumerator::debug(){
	String t="(NodeEnumerator)\n";
	t+=dbg_decl("node",&m_node);
	return t;
}
c_List::c_List(){
	m__head=((new c_HeadNode)->m_new());
}
c_List* c_List::m_new(){
	DBG_ENTER("List.new")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node4* c_List::p_AddLast(String t_data){
	DBG_ENTER("List.AddLast")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node4* t_=(new c_Node4)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List* c_List::m_new2(Array<String > t_data){
	DBG_ENTER("List.new")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<String > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast(t_t);
	}
	return this;
}
bool c_List::p_IsEmpty(){
	DBG_ENTER("List.IsEmpty")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<50>");
	bool t_=m__head->m__succ==m__head;
	return t_;
}
String c_List::p_RemoveFirst(){
	DBG_ENTER("List.RemoveFirst")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<87>");
	if(p_IsEmpty()){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on empty list",31));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<89>");
	String t_data=m__head->m__succ->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<90>");
	m__head->m__succ->p_Remove();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<91>");
	return t_data;
}
bool c_List::p_Equals(String t_lhs,String t_rhs){
	DBG_ENTER("List.Equals")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<28>");
	bool t_=t_lhs==t_rhs;
	return t_;
}
c_Node4* c_List::p_Find(String t_value,c_Node4* t_start){
	DBG_ENTER("List.Find")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_start,"start")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<116>");
	while(t_start!=m__head){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<117>");
		if(p_Equals(t_value,t_start->m__data)){
			DBG_BLOCK();
			return t_start;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<118>");
		t_start=t_start->m__succ;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<120>");
	return 0;
}
c_Node4* c_List::p_Find2(String t_value){
	DBG_ENTER("List.Find")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<112>");
	c_Node4* t_=p_Find(t_value,m__head->m__succ);
	return t_;
}
void c_List::p_RemoveFirst2(String t_value){
	DBG_ENTER("List.RemoveFirst")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<141>");
	c_Node4* t_node=p_Find2(t_value);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<142>");
	if((t_node)!=0){
		DBG_BLOCK();
		t_node->p_Remove();
	}
}
int c_List::p_Count(){
	DBG_ENTER("List.Count")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<41>");
	int t_n=0;
	c_Node4* t_node=m__head->m__succ;
	DBG_LOCAL(t_n,"n")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<42>");
	while(t_node!=m__head){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<43>");
		t_node=t_node->m__succ;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<44>");
		t_n+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<46>");
	return t_n;
}
c_Enumerator* c_List::p_ObjectEnumerator(){
	DBG_ENTER("List.ObjectEnumerator")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<186>");
	c_Enumerator* t_=(new c_Enumerator)->m_new(this);
	return t_;
}
Array<String > c_List::p_ToArray(){
	DBG_ENTER("List.ToArray")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<19>");
	Array<String > t_arr=Array<String >(p_Count());
	int t_i=0;
	DBG_LOCAL(t_arr,"arr")
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<20>");
	c_Enumerator* t_=this->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		String t_t=t_->p_NextObject();
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<21>");
		t_arr.At(t_i)=t_t;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<22>");
		t_i+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<24>");
	return t_arr;
}
String c_List::p_RemoveLast(){
	DBG_ENTER("List.RemoveLast")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<96>");
	if(p_IsEmpty()){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on empty list",31));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<98>");
	String t_data=m__head->m__pred->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<99>");
	m__head->m__pred->p_Remove();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<100>");
	return t_data;
}
c_Node4* c_List::p_FindLast(String t_value,c_Node4* t_start){
	DBG_ENTER("List.FindLast")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_start,"start")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<128>");
	while(t_start!=m__head){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<129>");
		if(p_Equals(t_value,t_start->m__data)){
			DBG_BLOCK();
			return t_start;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<130>");
		t_start=t_start->m__pred;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<132>");
	return 0;
}
c_Node4* c_List::p_FindLast2(String t_value){
	DBG_ENTER("List.FindLast")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<124>");
	c_Node4* t_=p_FindLast(t_value,m__head->m__pred);
	return t_;
}
void c_List::p_RemoveLast2(String t_value){
	DBG_ENTER("List.RemoveLast")
	c_List *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<146>");
	c_Node4* t_node=p_FindLast2(t_value);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<147>");
	if((t_node)!=0){
		DBG_BLOCK();
		t_node->p_Remove();
	}
}
void c_List::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_StringList::c_StringList(){
}
c_StringList* c_StringList::m_new(Array<String > t_data){
	DBG_ENTER("StringList.new")
	c_StringList *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<431>");
	c_List::m_new2(t_data);
	return this;
}
c_StringList* c_StringList::m_new2(){
	DBG_ENTER("StringList.new")
	c_StringList *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<428>");
	c_List::m_new();
	return this;
}
bool c_StringList::p_Equals(String t_lhs,String t_rhs){
	DBG_ENTER("StringList.Equals")
	c_StringList *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<439>");
	bool t_=t_lhs==t_rhs;
	return t_;
}
void c_StringList::mark(){
	c_List::mark();
}
String c_StringList::debug(){
	String t="(StringList)\n";
	t=c_List::debug()+t;
	return t;
}
c_Node4::c_Node4(){
	m__succ=0;
	m__pred=0;
	m__data=String();
}
c_Node4* c_Node4::m_new(c_Node4* t_succ,c_Node4* t_pred,String t_data){
	DBG_ENTER("Node.new")
	c_Node4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	m__data=t_data;
	return this;
}
c_Node4* c_Node4::m_new2(){
	DBG_ENTER("Node.new")
	c_Node4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
int c_Node4::p_Remove(){
	DBG_ENTER("Node.Remove")
	c_Node4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<274>");
	if(m__succ->m__pred!=this){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on removed node",33));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<276>");
	gc_assign(m__succ->m__pred,m__pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<277>");
	gc_assign(m__pred->m__succ,m__succ);
	return 0;
}
void c_Node4::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
}
String c_Node4::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode::c_HeadNode(){
}
c_HeadNode* c_HeadNode::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node4::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode::mark(){
	c_Node4::mark();
}
String c_HeadNode::debug(){
	String t="(HeadNode)\n";
	t=c_Node4::debug()+t;
	return t;
}
c_Enumerator::c_Enumerator(){
	m__list=0;
	m__curr=0;
}
c_Enumerator* c_Enumerator::m_new(c_List* t_list){
	DBG_ENTER("Enumerator.new")
	c_Enumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_list,"list")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<326>");
	gc_assign(m__list,t_list);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<327>");
	gc_assign(m__curr,t_list->m__head->m__succ);
	return this;
}
c_Enumerator* c_Enumerator::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<323>");
	return this;
}
bool c_Enumerator::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<331>");
	while(m__curr->m__succ->m__pred!=m__curr){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<332>");
		gc_assign(m__curr,m__curr->m__succ);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<334>");
	bool t_=m__curr!=m__list->m__head;
	return t_;
}
String c_Enumerator::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<338>");
	String t_data=m__curr->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<339>");
	gc_assign(m__curr,m__curr->m__succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<340>");
	return t_data;
}
void c_Enumerator::mark(){
	Object::mark();
	gc_mark_q(m__list);
	gc_mark_q(m__curr);
}
String c_Enumerator::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("_list",&m__list);
	t+=dbg_decl("_curr",&m__curr);
	return t;
}
Array<String > bb_os_LoadDir(String t_path,bool t_recursive,bool t_hidden){
	DBG_ENTER("LoadDir")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_recursive,"recursive")
	DBG_LOCAL(t_hidden,"hidden")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<48>");
	c_StringList* t_dirs=(new c_StringList)->m_new2();
	c_StringList* t_files=(new c_StringList)->m_new2();
	DBG_LOCAL(t_dirs,"dirs")
	DBG_LOCAL(t_files,"files")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<50>");
	t_dirs->p_AddLast(String());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<52>");
	while(!t_dirs->p_IsEmpty()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<54>");
		String t_dir=t_dirs->p_RemoveFirst();
		DBG_LOCAL(t_dir,"dir")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<56>");
		Array<String > t_=LoadDir(t_path+String(L"/",1)+t_dir);
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			String t_f=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_f,"f")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<57>");
			if(!t_hidden && t_f.StartsWith(String(L".",1))){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<59>");
			if((t_dir).Length()!=0){
				DBG_BLOCK();
				t_f=t_dir+String(L"/",1)+t_f;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<61>");
			int t_1=FileType(t_path+String(L"/",1)+t_f);
			DBG_LOCAL(t_1,"1")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<62>");
			if(t_1==1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<63>");
				t_files->p_AddLast(t_f);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<64>");
				if(t_1==2){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<65>");
					if(t_recursive){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<66>");
						t_dirs->p_AddLast(t_f);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<68>");
						t_files->p_AddLast(t_f);
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<74>");
	Array<String > t_3=t_files->p_ToArray();
	return t_3;
}
c_Stack2::c_Stack2(){
	m_data=Array<c_ConfigScope* >();
	m_length=0;
}
c_Stack2* c_Stack2::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack2 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack2* c_Stack2::m_new2(Array<c_ConfigScope* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack2::p_Push4(c_ConfigScope* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack2::p_Push5(Array<c_ConfigScope* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push4(t_values.At(t_offset+t_i));
	}
}
void c_Stack2::p_Push6(Array<c_ConfigScope* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push5(t_values,t_offset,t_values.Length()-t_offset);
}
c_ConfigScope* c_Stack2::m_NIL;
c_ConfigScope* c_Stack2::p_Pop(){
	DBG_ENTER("Stack.Pop")
	c_Stack2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<89>");
	m_length-=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<90>");
	c_ConfigScope* t_v=m_data.At(m_length);
	DBG_LOCAL(t_v,"v")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<91>");
	gc_assign(m_data.At(m_length),m_NIL);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<92>");
	return t_v;
}
void c_Stack2::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack2::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("NIL",&c_Stack2::m_NIL);
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_Stack2* bb_config__cfgScopeStack;
void bb_config_PushConfigScope(){
	DBG_ENTER("PushConfigScope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<36>");
	bb_config__cfgScopeStack->p_Push4(bb_config__cfgScope);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<37>");
	gc_assign(bb_config__cfgScope,(new c_ConfigScope)->m_new());
}
c_ModuleDecl::c_ModuleDecl(){
	m_rmodpath=String();
	m_filepath=String();
	m_modpath=String();
	m_imported=(new c_StringMap5)->m_new();
	m_friends=(new c_StringSet)->m_new();
	m_pubImported=(new c_StringMap5)->m_new();
}
c_ModuleDecl* c_ModuleDecl::m_new(String t_ident,int t_attrs,String t_munged,String t_modpath,String t_filepath,c_AppDecl* t_app){
	DBG_ENTER("ModuleDecl.new")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_munged,"munged")
	DBG_LOCAL(t_modpath,"modpath")
	DBG_LOCAL(t_filepath,"filepath")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1271>");
	c_ScopeDecl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1273>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1274>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1275>");
	this->m_munged=t_munged;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1276>");
	this->m_modpath=t_modpath;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1277>");
	this->m_rmodpath=t_modpath;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1278>");
	this->m_filepath=t_filepath;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1280>");
	if(t_modpath.Contains(String(L".",1))){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1281>");
		Array<String > t_bits=t_modpath.Split(String(L".",1));
		int t_n=t_bits.Length();
		DBG_LOCAL(t_bits,"bits")
		DBG_LOCAL(t_n,"n")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1282>");
		if(t_n>1 && t_bits.At(t_n-2)==t_bits.At(t_n-1)){
			DBG_BLOCK();
			this->m_rmodpath=bb_os_StripExt(t_modpath);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1285>");
	m_imported->p_Set5(t_filepath,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1286>");
	t_app->p_InsertModule(this);
	return this;
}
c_ModuleDecl* c_ModuleDecl::m_new2(){
	DBG_ENTER("ModuleDecl.new")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1260>");
	c_ScopeDecl::m_new();
	return this;
}
int c_ModuleDecl::p_IsStrict(){
	DBG_ENTER("ModuleDecl.IsStrict")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1292>");
	int t_=(((m_attrs&1)!=0)?1:0);
	return t_;
}
int c_ModuleDecl::p_ImportModule(String t_modpath,int t_attrs){
	DBG_ENTER("ModuleDecl.ImportModule")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_modpath,"modpath")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1361>");
	String t_cdir=bb_os_ExtractDir(this->m_filepath);
	DBG_LOCAL(t_cdir,"cdir")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1363>");
	String t_dir=String();
	String t_filepath=String();
	String t_mpath=t_modpath.Replace(String(L".",1),String(L"/",1))+String(L".",1)+bb_parser_FILE_EXT;
	DBG_LOCAL(t_dir,"dir")
	DBG_LOCAL(t_filepath,"filepath")
	DBG_LOCAL(t_mpath,"mpath")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1365>");
	Array<String > t_=bb_config_ENV_MODPATH.Split(String(L";",1));
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		t_dir=t_.At(t_2);
		t_2=t_2+1;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1366>");
		if(!((t_dir).Length()!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1369>");
		if(t_dir==String(L".",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1370>");
			t_filepath=t_cdir+String(L"/",1)+t_mpath;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1372>");
			t_filepath=RealPath(t_dir)+String(L"/",1)+t_mpath;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1376>");
		String t_filepath2=bb_os_StripExt(t_filepath)+String(L"/",1)+bb_os_StripDir(t_filepath);
		DBG_LOCAL(t_filepath2,"filepath2")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1378>");
		if(FileType(t_filepath)==1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1379>");
			if(FileType(t_filepath2)!=1){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1380>");
			bb_config_Err(String(L"Duplicate module file: '",24)+t_filepath+String(L"' and '",7)+t_filepath2+String(L"'.",2));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1383>");
		t_filepath=t_filepath2;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1384>");
		if(FileType(t_filepath)==1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1385>");
			if(t_modpath.Contains(String(L".",1))){
				DBG_BLOCK();
				t_modpath=t_modpath+(String(L".",1)+bb_os_ExtractExt(t_modpath));
			}else{
				DBG_BLOCK();
				t_modpath=t_modpath+(String(L".",1)+t_modpath);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1386>");
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1389>");
		t_filepath=String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1392>");
	if(t_dir==String(L".",1) && this->m_modpath.Contains(String(L".",1))){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1393>");
		t_modpath=bb_os_StripExt(this->m_modpath)+String(L".",1)+t_modpath;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1396>");
	c_AppDecl* t_app=dynamic_cast<c_AppDecl*>(m_scope);
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1398>");
	c_ModuleDecl* t_mdecl=t_app->m_imported->p_Get(t_filepath);
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1399>");
	if(((t_mdecl)!=0) && t_mdecl->m_modpath!=t_modpath){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1400>");
		bbPrint(String(L"Modpath error - import=",23)+t_modpath+String(L", existing=",11)+t_mdecl->m_modpath);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1403>");
	if(this->m_imported->p_Contains(t_filepath)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1405>");
	if(!((t_mdecl)!=0)){
		DBG_BLOCK();
		t_mdecl=bb_parser_ParseModule(t_modpath,t_filepath,t_app);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1407>");
	this->m_imported->p_Insert3(t_mdecl->m_filepath,t_mdecl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1409>");
	if(!((t_attrs&512)!=0)){
		DBG_BLOCK();
		this->m_pubImported->p_Insert3(t_mdecl->m_filepath,t_mdecl);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1411>");
	this->p_InsertDecl((new c_AliasDecl)->m_new(t_mdecl->m_ident,t_attrs,(t_mdecl)));
	return 0;
}
int c_ModuleDecl::p_SemantAll(){
	DBG_ENTER("ModuleDecl.SemantAll")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1418>");
	c_Enumerator2* t_=p_Decls()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1419>");
		if((dynamic_cast<c_AliasDecl*>(t_decl))!=0){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1421>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1423>");
		if((t_cdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1424>");
			if((t_cdecl->m_args).Length()!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1425>");
				c_Enumerator4* t_2=t_cdecl->m_instances->p_ObjectEnumerator();
				while(t_2->p_HasNext()){
					DBG_BLOCK();
					c_ClassDecl* t_inst=t_2->p_NextObject();
					DBG_LOCAL(t_inst,"inst")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1426>");
					c_Enumerator2* t_3=t_inst->p_Decls()->p_ObjectEnumerator();
					while(t_3->p_HasNext()){
						DBG_BLOCK();
						c_Decl* t_decl2=t_3->p_NextObject();
						DBG_LOCAL(t_decl2,"decl")
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1427>");
						if((dynamic_cast<c_AliasDecl*>(t_decl2))!=0){
							DBG_BLOCK();
							continue;
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1428>");
						t_decl2->p_Semant();
					}
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1432>");
				t_decl->p_Semant();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1433>");
				c_Enumerator2* t_4=t_cdecl->p_Decls()->p_ObjectEnumerator();
				while(t_4->p_HasNext()){
					DBG_BLOCK();
					c_Decl* t_decl3=t_4->p_NextObject();
					DBG_LOCAL(t_decl3,"decl")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1434>");
					if((dynamic_cast<c_AliasDecl*>(t_decl3))!=0){
						DBG_BLOCK();
						continue;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1435>");
					t_decl3->p_Semant();
				}
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1439>");
			t_decl->p_Semant();
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1442>");
	m_attrs|=2;
	return 0;
}
String c_ModuleDecl::p_ToString(){
	DBG_ENTER("ModuleDecl.ToString")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1268>");
	String t_=String(L"Module ",7)+m_modpath;
	return t_;
}
Object* c_ModuleDecl::p_GetDecl2(String t_ident){
	DBG_ENTER("ModuleDecl.GetDecl2")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1356>");
	Object* t_=c_ScopeDecl::p_GetDecl(t_ident);
	return t_;
}
Object* c_ModuleDecl::p_GetDecl(String t_ident){
	DBG_ENTER("ModuleDecl.GetDecl")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1297>");
	c_List9* t_todo=(new c_List9)->m_new();
	DBG_LOCAL(t_todo,"todo")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1298>");
	c_StringMap5* t_done=(new c_StringMap5)->m_new();
	DBG_LOCAL(t_done,"done")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1300>");
	t_todo->p_AddLast9(this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1301>");
	t_done->p_Insert3(m_filepath,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1303>");
	Object* t_decl=0;
	String t_declmod=String();
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_declmod,"declmod")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1305>");
	while(!t_todo->p_IsEmpty()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1307>");
		c_ModuleDecl* t_mdecl=t_todo->p_RemoveLast();
		DBG_LOCAL(t_mdecl,"mdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1309>");
		Object* t_tdecl=t_mdecl->p_GetDecl2(t_ident);
		DBG_LOCAL(t_tdecl,"tdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1311>");
		if(((t_tdecl)!=0) && ((bb_decl__env)!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1313>");
			c_Decl* t_ddecl=dynamic_cast<c_Decl*>(t_tdecl);
			DBG_LOCAL(t_ddecl,"ddecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1314>");
			if(((t_ddecl)!=0) && !((t_ddecl->p_CheckAccess())!=0)){
				DBG_BLOCK();
				t_tdecl=0;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1317>");
			c_FuncDeclList* t_flist=dynamic_cast<c_FuncDeclList*>(t_tdecl);
			DBG_LOCAL(t_flist,"flist")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1318>");
			if((t_flist)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1319>");
				bool t_pub=false;
				DBG_LOCAL(t_pub,"pub")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1320>");
				c_Enumerator3* t_=t_flist->p_ObjectEnumerator();
				while(t_->p_HasNext()){
					DBG_BLOCK();
					c_FuncDecl* t_fdecl=t_->p_NextObject();
					DBG_LOCAL(t_fdecl,"fdecl")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1321>");
					if(!((t_fdecl->p_CheckAccess())!=0)){
						DBG_BLOCK();
						continue;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1322>");
					t_pub=true;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1323>");
					break;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1325>");
				if(!t_pub){
					DBG_BLOCK();
					t_tdecl=0;
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1329>");
		if(((t_tdecl)!=0) && t_tdecl!=t_decl){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1330>");
			if(t_mdecl==this){
				DBG_BLOCK();
				return t_tdecl;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1331>");
			if((t_decl)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1332>");
				bb_config_Err(String(L"Duplicate identifier '",22)+t_ident+String(L"' found in module '",19)+t_declmod+String(L"' and module '",14)+t_mdecl->m_ident+String(L"'.",2));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1334>");
			t_decl=t_tdecl;
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1335>");
			t_declmod=t_mdecl->m_ident;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1338>");
		if(!((bb_decl__env)!=0)){
			DBG_BLOCK();
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1340>");
		c_StringMap5* t_imps=t_mdecl->m_imported;
		DBG_LOCAL(t_imps,"imps")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1341>");
		if(t_mdecl!=bb_decl__env->p_ModuleScope()){
			DBG_BLOCK();
			t_imps=t_mdecl->m_pubImported;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1343>");
		c_ValueEnumerator* t_2=t_imps->p_Values()->p_ObjectEnumerator();
		while(t_2->p_HasNext()){
			DBG_BLOCK();
			c_ModuleDecl* t_mdecl2=t_2->p_NextObject();
			DBG_LOCAL(t_mdecl2,"mdecl2")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1344>");
			if(!t_done->p_Contains(t_mdecl2->m_filepath)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1345>");
				t_todo->p_AddLast9(t_mdecl2);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1346>");
				t_done->p_Insert3(t_mdecl2->m_filepath,t_mdecl2);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1352>");
	return t_decl;
}
int c_ModuleDecl::p_OnSemant(){
	DBG_ENTER("ModuleDecl.OnSemant")
	c_ModuleDecl *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
void c_ModuleDecl::mark(){
	c_ScopeDecl::mark();
	gc_mark_q(m_imported);
	gc_mark_q(m_friends);
	gc_mark_q(m_pubImported);
}
String c_ModuleDecl::debug(){
	String t="(ModuleDecl)\n";
	t=c_ScopeDecl::debug()+t;
	t+=dbg_decl("modpath",&m_modpath);
	t+=dbg_decl("rmodpath",&m_rmodpath);
	t+=dbg_decl("filepath",&m_filepath);
	t+=dbg_decl("imported",&m_imported);
	t+=dbg_decl("pubImported",&m_pubImported);
	t+=dbg_decl("friends",&m_friends);
	return t;
}
c_ScopeDecl* bb_config_GetConfigScope(){
	DBG_ENTER("GetConfigScope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<45>");
	c_ScopeDecl* t_=(bb_config__cfgScope);
	return t_;
}
c_ScopeDecl* bb_decl__env;
c_List2::c_List2(){
	m__head=((new c_HeadNode2)->m_new());
}
c_List2* c_List2::m_new(){
	DBG_ENTER("List.new")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node5* c_List2::p_AddLast2(c_ScopeDecl* t_data){
	DBG_ENTER("List.AddLast")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node5* t_=(new c_Node5)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List2* c_List2::m_new2(Array<c_ScopeDecl* > t_data){
	DBG_ENTER("List.new")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_ScopeDecl* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ScopeDecl* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast2(t_t);
	}
	return this;
}
bool c_List2::p_IsEmpty(){
	DBG_ENTER("List.IsEmpty")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<50>");
	bool t_=m__head->m__succ==m__head;
	return t_;
}
c_ScopeDecl* c_List2::p_RemoveLast(){
	DBG_ENTER("List.RemoveLast")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<96>");
	if(p_IsEmpty()){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on empty list",31));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<98>");
	c_ScopeDecl* t_data=m__head->m__pred->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<99>");
	m__head->m__pred->p_Remove();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<100>");
	return t_data;
}
bool c_List2::p_Equals2(c_ScopeDecl* t_lhs,c_ScopeDecl* t_rhs){
	DBG_ENTER("List.Equals")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<28>");
	bool t_=t_lhs==t_rhs;
	return t_;
}
c_Node5* c_List2::p_FindLast3(c_ScopeDecl* t_value,c_Node5* t_start){
	DBG_ENTER("List.FindLast")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_start,"start")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<128>");
	while(t_start!=m__head){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<129>");
		if(p_Equals2(t_value,t_start->m__data)){
			DBG_BLOCK();
			return t_start;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<130>");
		t_start=t_start->m__pred;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<132>");
	return 0;
}
c_Node5* c_List2::p_FindLast4(c_ScopeDecl* t_value){
	DBG_ENTER("List.FindLast")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<124>");
	c_Node5* t_=p_FindLast3(t_value,m__head->m__pred);
	return t_;
}
void c_List2::p_RemoveLast3(c_ScopeDecl* t_value){
	DBG_ENTER("List.RemoveLast")
	c_List2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<146>");
	c_Node5* t_node=p_FindLast4(t_value);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<147>");
	if((t_node)!=0){
		DBG_BLOCK();
		t_node->p_Remove();
	}
}
void c_List2::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List2::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_Node5::c_Node5(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node5* c_Node5::m_new(c_Node5* t_succ,c_Node5* t_pred,c_ScopeDecl* t_data){
	DBG_ENTER("Node.new")
	c_Node5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node5* c_Node5::m_new2(){
	DBG_ENTER("Node.new")
	c_Node5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
int c_Node5::p_Remove(){
	DBG_ENTER("Node.Remove")
	c_Node5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<274>");
	if(m__succ->m__pred!=this){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on removed node",33));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<276>");
	gc_assign(m__succ->m__pred,m__pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<277>");
	gc_assign(m__pred->m__succ,m__succ);
	return 0;
}
void c_Node5::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node5::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode2::c_HeadNode2(){
}
c_HeadNode2* c_HeadNode2::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node5::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode2::mark(){
	c_Node5::mark();
}
String c_HeadNode2::debug(){
	String t="(HeadNode)\n";
	t=c_Node5::debug()+t;
	return t;
}
c_List2* bb_decl__envStack;
int bb_decl_PushEnv(c_ScopeDecl* t_env){
	DBG_ENTER("PushEnv")
	DBG_LOCAL(t_env,"env")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<30>");
	bb_decl__envStack->p_AddLast2(bb_decl__env);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<31>");
	gc_assign(bb_decl__env,t_env);
	return 0;
}
c_Toker::c_Toker(){
	m__path=String();
	m__line=0;
	m__source=String();
	m__length=0;
	m__toke=String();
	m__tokeType=0;
	m__tokePos=0;
}
c_StringSet* c_Toker::m__keywords;
c_StringSet* c_Toker::m__symbols;
int c_Toker::p__init(){
	DBG_ENTER("Toker._init")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<36>");
	if((m__keywords)!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<47>");
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<49>");
	gc_assign(m__keywords,(new c_StringSet)->m_new());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<50>");
	Array<String > t_=String(L"void strict public private protected friend property bool int float string array object mod continue exit include import module extern new self super eachin true false null not extends abstract final select case default const local global field method function class and or shl shr end if then else elseif endif while wend repeat until forever for to step next return interface implements inline alias try catch throw throwable",427).Split(String(L" ",1));
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<51>");
		m__keywords->p_Insert(t_t);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<53>");
	gc_assign(m__symbols,(new c_StringSet)->m_new());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<54>");
	m__symbols->p_Insert(String(L"..",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<55>");
	m__symbols->p_Insert(String(L":=",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<56>");
	m__symbols->p_Insert(String(L"*=",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<57>");
	m__symbols->p_Insert(String(L"/=",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<58>");
	m__symbols->p_Insert(String(L"+=",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<59>");
	m__symbols->p_Insert(String(L"-=",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<60>");
	m__symbols->p_Insert(String(L"|=",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<61>");
	m__symbols->p_Insert(String(L"&=",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<62>");
	m__symbols->p_Insert(String(L"~=",2));
	return 0;
}
c_Toker* c_Toker::m_new(String t_path,String t_source){
	DBG_ENTER("Toker.new")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_source,"source")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<66>");
	p__init();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<67>");
	m__path=t_path;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<68>");
	m__line=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<69>");
	m__source=t_source;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<70>");
	m__length=m__source.Length();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<71>");
	m__toke=String();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<72>");
	m__tokeType=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<73>");
	m__tokePos=0;
	return this;
}
c_Toker* c_Toker::m_new2(c_Toker* t_toker){
	DBG_ENTER("Toker.new")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_toker,"toker")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<77>");
	p__init();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<78>");
	m__path=t_toker->m__path;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<79>");
	m__line=t_toker->m__line;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<80>");
	m__source=t_toker->m__source;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<81>");
	m__length=m__source.Length();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<82>");
	m__toke=t_toker->m__toke;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<83>");
	m__tokeType=t_toker->m__tokeType;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<84>");
	m__tokePos=t_toker->m__tokePos;
	return this;
}
c_Toker* c_Toker::m_new3(){
	DBG_ENTER("Toker.new")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<22>");
	return this;
}
int c_Toker::p_TCHR(int t_i){
	DBG_ENTER("Toker.TCHR")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<213>");
	t_i+=m__tokePos;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<214>");
	if(t_i<m__length){
		DBG_BLOCK();
		return (int)m__source.At(t_i);
	}
	return 0;
}
String c_Toker::p_TSTR(int t_i){
	DBG_ENTER("Toker.TSTR")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<218>");
	t_i+=m__tokePos;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<219>");
	if(t_i<m__length){
		DBG_BLOCK();
		String t_=m__source.Slice(t_i,t_i+1);
		return t_;
	}
	return String();
}
String c_Toker::p_NextToke(){
	DBG_ENTER("Toker.NextToke")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<97>");
	m__toke=String();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<99>");
	if(m__tokePos==m__length){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<100>");
		m__tokeType=0;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<101>");
		return m__toke;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<104>");
	int t_chr=p_TCHR(0);
	DBG_LOCAL(t_chr,"chr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<105>");
	String t_str=p_TSTR(0);
	DBG_LOCAL(t_str,"str")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<106>");
	int t_start=m__tokePos;
	DBG_LOCAL(t_start,"start")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<107>");
	m__tokePos+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<109>");
	if(t_str==String(L"\n",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<110>");
		m__tokeType=8;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<111>");
		m__line+=1;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<112>");
		if((bb_config_IsSpace(t_chr))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<113>");
			m__tokeType=1;
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<114>");
			while(m__tokePos<m__length && ((bb_config_IsSpace(p_TCHR(0)))!=0) && p_TSTR(0)!=String(L"\n",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<115>");
				m__tokePos+=1;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<117>");
			if(t_str==String(L"_",1) || ((bb_config_IsAlpha(t_chr))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<118>");
				m__tokeType=2;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<119>");
				while(m__tokePos<m__length){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<120>");
					int t_chr2=(int)m__source.At(m__tokePos);
					DBG_LOCAL(t_chr2,"chr")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<121>");
					if(t_chr2!=95 && !((bb_config_IsAlpha(t_chr2))!=0) && !((bb_config_IsDigit(t_chr2))!=0)){
						DBG_BLOCK();
						break;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<123>");
					m__tokePos+=1;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<125>");
				m__toke=m__source.Slice(t_start,m__tokePos);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<126>");
				if(m__keywords->p_Contains(m__toke.ToLower())){
					DBG_BLOCK();
					m__tokeType=3;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<127>");
				if(((bb_config_IsDigit(t_chr))!=0) || t_str==String(L".",1) && ((bb_config_IsDigit(p_TCHR(0)))!=0)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<128>");
					m__tokeType=4;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<129>");
					if(t_str==String(L".",1)){
						DBG_BLOCK();
						m__tokeType=5;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<130>");
					while((bb_config_IsDigit(p_TCHR(0)))!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<131>");
						m__tokePos+=1;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<133>");
					if(m__tokeType==4 && p_TSTR(0)==String(L".",1) && ((bb_config_IsDigit(p_TCHR(1)))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<134>");
						m__tokeType=5;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<135>");
						m__tokePos+=2;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<136>");
						while((bb_config_IsDigit(p_TCHR(0)))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<137>");
							m__tokePos+=1;
						}
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<140>");
					if(p_TSTR(0).ToLower()==String(L"e",1)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<141>");
						m__tokeType=5;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<142>");
						m__tokePos+=1;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<143>");
						if(p_TSTR(0)==String(L"+",1) || p_TSTR(0)==String(L"-",1)){
							DBG_BLOCK();
							m__tokePos+=1;
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<144>");
						while((bb_config_IsDigit(p_TCHR(0)))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<145>");
							m__tokePos+=1;
						}
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<148>");
					if(t_str==String(L"%",1) && ((bb_config_IsBinDigit(p_TCHR(0)))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<149>");
						m__tokeType=4;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<150>");
						m__tokePos+=1;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<151>");
						while((bb_config_IsBinDigit(p_TCHR(0)))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<152>");
							m__tokePos+=1;
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<154>");
						if(t_str==String(L"$",1) && ((bb_config_IsHexDigit(p_TCHR(0)))!=0)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<155>");
							m__tokeType=4;
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<156>");
							m__tokePos+=1;
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<157>");
							while((bb_config_IsHexDigit(p_TCHR(0)))!=0){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<158>");
								m__tokePos+=1;
							}
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<160>");
							if(t_str==String(L"\"",1)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<161>");
								m__tokeType=6;
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<162>");
								while(m__tokePos<m__length && p_TSTR(0)!=String(L"\"",1)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<163>");
									m__tokePos+=1;
								}
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<165>");
								if(m__tokePos<m__length){
									DBG_BLOCK();
									m__tokePos+=1;
								}else{
									DBG_BLOCK();
									m__tokeType=7;
								}
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<166>");
								if(t_str==String(L"'",1)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<167>");
									m__tokeType=9;
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<168>");
									while(m__tokePos<m__length && p_TSTR(0)!=String(L"\n",1)){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<169>");
										m__tokePos+=1;
									}
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<171>");
									if(m__tokePos<m__length){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<172>");
										m__tokePos+=1;
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<173>");
										m__line+=1;
									}
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<175>");
									if(t_str==String(L"[",1)){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<176>");
										m__tokeType=8;
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<177>");
										int t_i=0;
										DBG_LOCAL(t_i,"i")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<178>");
										while(m__tokePos+t_i<m__length){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<179>");
											if(p_TSTR(t_i)==String(L"]",1)){
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<180>");
												m__tokePos+=t_i+1;
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<181>");
												break;
											}
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<183>");
											if(p_TSTR(t_i)==String(L"\n",1) || !((bb_config_IsSpace(p_TCHR(t_i)))!=0)){
												DBG_BLOCK();
												break;
											}
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<184>");
											t_i+=1;
										}
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<187>");
										m__tokeType=8;
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<188>");
										if(m__symbols->p_Contains(m__source.Slice(m__tokePos-1,m__tokePos+1))){
											DBG_BLOCK();
											m__tokePos+=1;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<191>");
	if(!((m__toke).Length()!=0)){
		DBG_BLOCK();
		m__toke=m__source.Slice(t_start,m__tokePos);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<193>");
	return m__toke;
}
String c_Toker::p_Toke(){
	DBG_ENTER("Toker.Toke")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<197>");
	return m__toke;
}
int c_Toker::p_TokeType(){
	DBG_ENTER("Toker.TokeType")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<201>");
	return m__tokeType;
}
String c_Toker::p_Path(){
	DBG_ENTER("Toker.Path")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<88>");
	return m__path;
}
int c_Toker::p_Line(){
	DBG_ENTER("Toker.Line")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<92>");
	return m__line;
}
int c_Toker::p_SkipSpace(){
	DBG_ENTER("Toker.SkipSpace")
	c_Toker *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<205>");
	while(m__tokeType==1){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/toker.monkey<206>");
		p_NextToke();
	}
	return 0;
}
void c_Toker::mark(){
	Object::mark();
}
String c_Toker::debug(){
	String t="(Toker)\n";
	t+=dbg_decl("_symbols",&c_Toker::m__symbols);
	t+=dbg_decl("_keywords",&c_Toker::m__keywords);
	t+=dbg_decl("_path",&m__path);
	t+=dbg_decl("_line",&m__line);
	t+=dbg_decl("_source",&m__source);
	t+=dbg_decl("_length",&m__length);
	t+=dbg_decl("_toke",&m__toke);
	t+=dbg_decl("_tokeType",&m__tokeType);
	t+=dbg_decl("_tokePos",&m__tokePos);
	return t;
}
c_Set::c_Set(){
	m_map=0;
}
c_Set* c_Set::m_new(c_Map4* t_map){
	DBG_ENTER("Set.new")
	c_Set *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_map,"map")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/set.monkey<16>");
	gc_assign(this->m_map,t_map);
	return this;
}
c_Set* c_Set::m_new2(){
	DBG_ENTER("Set.new")
	c_Set *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/set.monkey<13>");
	return this;
}
int c_Set::p_Insert(String t_value){
	DBG_ENTER("Set.Insert")
	c_Set *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/set.monkey<36>");
	m_map->p_Insert2(t_value,0);
	return 0;
}
bool c_Set::p_Contains(String t_value){
	DBG_ENTER("Set.Contains")
	c_Set *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/set.monkey<32>");
	bool t_=m_map->p_Contains(t_value);
	return t_;
}
void c_Set::mark(){
	Object::mark();
	gc_mark_q(m_map);
}
String c_Set::debug(){
	String t="(Set)\n";
	t+=dbg_decl("map",&m_map);
	return t;
}
c_StringSet::c_StringSet(){
}
c_StringSet* c_StringSet::m_new(){
	DBG_ENTER("StringSet.new")
	c_StringSet *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/set.monkey<69>");
	c_Set::m_new((new c_StringMap4)->m_new());
	return this;
}
void c_StringSet::mark(){
	c_Set::mark();
}
String c_StringSet::debug(){
	String t="(StringSet)\n";
	t=c_Set::debug()+t;
	return t;
}
c_Map4::c_Map4(){
	m_root=0;
}
c_Map4* c_Map4::m_new(){
	DBG_ENTER("Map.new")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
int c_Map4::p_RotateLeft4(c_Node6* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node6* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map4::p_RotateRight4(c_Node6* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node6* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map4::p_InsertFixup4(c_Node6* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node6* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft4(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight4(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node6* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight4(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft4(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map4::p_Set4(String t_key,Object* t_value){
	DBG_ENTER("Map.Set")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node6* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node6* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node6)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup4(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
bool c_Map4::p_Insert2(String t_key,Object* t_value){
	DBG_ENTER("Map.Insert")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<146>");
	bool t_=p_Set4(t_key,t_value);
	return t_;
}
c_Node6* c_Map4::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node6* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
bool c_Map4::p_Contains(String t_key){
	DBG_ENTER("Map.Contains")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<25>");
	bool t_=p_FindNode(t_key)!=0;
	return t_;
}
Object* c_Map4::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node6* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
void c_Map4::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map4::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap4::c_StringMap4(){
}
c_StringMap4* c_StringMap4::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map4::m_new();
	return this;
}
int c_StringMap4::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap4::mark(){
	c_Map4::mark();
}
String c_StringMap4::debug(){
	String t="(StringMap)\n";
	t=c_Map4::debug()+t;
	return t;
}
c_Node6::c_Node6(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node6* c_Node6::m_new(String t_key,Object* t_value,int t_color,c_Node6* t_parent){
	DBG_ENTER("Node.new")
	c_Node6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node6* c_Node6::m_new2(){
	DBG_ENTER("Node.new")
	c_Node6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
void c_Node6::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node6::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
int bb_config_IsSpace(int t_ch){
	DBG_ENTER("IsSpace")
	DBG_LOCAL(t_ch,"ch")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<130>");
	int t_=((t_ch<=32)?1:0);
	return t_;
}
int bb_config_IsAlpha(int t_ch){
	DBG_ENTER("IsAlpha")
	DBG_LOCAL(t_ch,"ch")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<140>");
	int t_=((t_ch>=65 && t_ch<=90 || t_ch>=97 && t_ch<=122)?1:0);
	return t_;
}
int bb_config_IsDigit(int t_ch){
	DBG_ENTER("IsDigit")
	DBG_LOCAL(t_ch,"ch")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<135>");
	int t_=((t_ch>=48 && t_ch<=57)?1:0);
	return t_;
}
int bb_config_IsBinDigit(int t_ch){
	DBG_ENTER("IsBinDigit")
	DBG_LOCAL(t_ch,"ch")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<145>");
	int t_=((t_ch==48 || t_ch==49)?1:0);
	return t_;
}
int bb_config_IsHexDigit(int t_ch){
	DBG_ENTER("IsHexDigit")
	DBG_LOCAL(t_ch,"ch")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<150>");
	int t_=((t_ch>=48 && t_ch<=57 || t_ch>=65 && t_ch<=70 || t_ch>=97 && t_ch<=102)?1:0);
	return t_;
}
String bb_parser_FILE_EXT;
String bb_config_ENV_MODPATH;
String bb_os_StripExt(String t_path){
	DBG_ENTER("StripExt")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<147>");
	int t_i=t_path.FindLast(String(L".",1));
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<148>");
	if(t_i!=-1 && t_path.Find(String(L"/",1),t_i+1)==-1 && t_path.Find(String(L"\\",1),t_i+1)==-1){
		DBG_BLOCK();
		String t_=t_path.Slice(0,t_i);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<149>");
	return t_path;
}
String bb_os_StripDir(String t_path){
	DBG_ENTER("StripDir")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<134>");
	int t_i=t_path.FindLast(String(L"/",1));
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<135>");
	if(t_i==-1){
		DBG_BLOCK();
		t_i=t_path.FindLast(String(L"\\",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<136>");
	if(t_i!=-1){
		DBG_BLOCK();
		String t_=t_path.Slice(t_i+1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<137>");
	return t_path;
}
int bb_config_Err(String t_err){
	DBG_ENTER("Err")
	DBG_LOCAL(t_err,"err")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<120>");
	bbPrint(bb_config__errInfo+String(L" : Error : ",11)+t_err);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<121>");
	ExitApp(-1);
	return 0;
}
String bb_os_ExtractExt(String t_path){
	DBG_ENTER("ExtractExt")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<153>");
	int t_i=t_path.FindLast(String(L".",1));
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<154>");
	if(t_i!=-1 && t_path.Find(String(L"/",1),t_i+1)==-1 && t_path.Find(String(L"\\",1),t_i+1)==-1){
		DBG_BLOCK();
		String t_=t_path.Slice(t_i+1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<155>");
	return String();
}
c_AppDecl::c_AppDecl(){
	m_imported=(new c_StringMap5)->m_new();
	m_mainModule=0;
	m_fileImports=(new c_StringList)->m_new2();
	m_allSemantedDecls=(new c_List3)->m_new();
	m_semantedGlobals=(new c_List8)->m_new();
	m_semantedClasses=(new c_List6)->m_new();
	m_mainFunc=0;
}
int c_AppDecl::p_InsertModule(c_ModuleDecl* t_mdecl){
	DBG_ENTER("AppDecl.InsertModule")
	c_AppDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1461>");
	gc_assign(t_mdecl->m_scope,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1462>");
	m_imported->p_Insert3(t_mdecl->m_filepath,t_mdecl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1463>");
	if(!((m_mainModule)!=0)){
		DBG_BLOCK();
		gc_assign(m_mainModule,t_mdecl);
	}
	return 0;
}
c_AppDecl* c_AppDecl::m_new(){
	DBG_ENTER("AppDecl.new")
	c_AppDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1447>");
	c_ScopeDecl::m_new();
	return this;
}
int c_AppDecl::p_FinalizeClasses(){
	DBG_ENTER("AppDecl.FinalizeClasses")
	c_AppDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1483>");
	bb_decl__env=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1485>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1486>");
		int t_more=0;
		DBG_LOCAL(t_more,"more")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1487>");
		c_Enumerator4* t_=m_semantedClasses->p_ObjectEnumerator();
		while(t_->p_HasNext()){
			DBG_BLOCK();
			c_ClassDecl* t_cdecl=t_->p_NextObject();
			DBG_LOCAL(t_cdecl,"cdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1488>");
			t_more+=t_cdecl->p_UpdateLiveMethods();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1490>");
		if(!((t_more)!=0)){
			DBG_BLOCK();
			break;
		}
	}while(!(false));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1493>");
	c_Enumerator4* t_2=m_semantedClasses->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_ClassDecl* t_cdecl2=t_2->p_NextObject();
		DBG_LOCAL(t_cdecl2,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1494>");
		t_cdecl2->p_FinalizeClass();
	}
	return 0;
}
int c_AppDecl::p_OnSemant(){
	DBG_ENTER("AppDecl.OnSemant")
	c_AppDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1468>");
	bb_decl__env=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1470>");
	gc_assign(m_mainFunc,m_mainModule->p_FindFuncDecl(String(L"Main",4),Array<c_Expr* >(),0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1472>");
	if(!((m_mainFunc)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Function 'Main' not found.",26));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1474>");
	if(!((dynamic_cast<c_IntType*>(m_mainFunc->m_retType))!=0) || ((m_mainFunc->m_argDecls.Length())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1475>");
		bb_config_Err(String(L"Main function must be of type Main:Int()",40));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1478>");
	p_FinalizeClasses();
	return 0;
}
void c_AppDecl::mark(){
	c_ScopeDecl::mark();
	gc_mark_q(m_imported);
	gc_mark_q(m_mainModule);
	gc_mark_q(m_fileImports);
	gc_mark_q(m_allSemantedDecls);
	gc_mark_q(m_semantedGlobals);
	gc_mark_q(m_semantedClasses);
	gc_mark_q(m_mainFunc);
}
String c_AppDecl::debug(){
	String t="(AppDecl)\n";
	t=c_ScopeDecl::debug()+t;
	t+=dbg_decl("imported",&m_imported);
	t+=dbg_decl("mainModule",&m_mainModule);
	t+=dbg_decl("mainFunc",&m_mainFunc);
	t+=dbg_decl("semantedClasses",&m_semantedClasses);
	t+=dbg_decl("semantedGlobals",&m_semantedGlobals);
	t+=dbg_decl("allSemantedDecls",&m_allSemantedDecls);
	t+=dbg_decl("fileImports",&m_fileImports);
	return t;
}
c_Map5::c_Map5(){
	m_root=0;
}
c_Map5* c_Map5::m_new(){
	DBG_ENTER("Map.new")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
c_Node7* c_Map5::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node7* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
c_ModuleDecl* c_Map5::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node7* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
bool c_Map5::p_Contains(String t_key){
	DBG_ENTER("Map.Contains")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<25>");
	bool t_=p_FindNode(t_key)!=0;
	return t_;
}
int c_Map5::p_RotateLeft5(c_Node7* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node7* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map5::p_RotateRight5(c_Node7* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node7* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map5::p_InsertFixup5(c_Node7* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node7* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft5(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight5(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node7* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight5(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft5(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map5::p_Set5(String t_key,c_ModuleDecl* t_value){
	DBG_ENTER("Map.Set")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node7* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node7* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node7)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup5(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
bool c_Map5::p_Insert3(String t_key,c_ModuleDecl* t_value){
	DBG_ENTER("Map.Insert")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<146>");
	bool t_=p_Set5(t_key,t_value);
	return t_;
}
c_MapValues* c_Map5::p_Values(){
	DBG_ENTER("Map.Values")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<117>");
	c_MapValues* t_=(new c_MapValues)->m_new(this);
	return t_;
}
c_Node7* c_Map5::p_FirstNode(){
	DBG_ENTER("Map.FirstNode")
	c_Map5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<125>");
	if(!((m_root)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<127>");
	c_Node7* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<128>");
	while((t_node->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<129>");
		t_node=t_node->m_left;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<131>");
	return t_node;
}
void c_Map5::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map5::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap5::c_StringMap5(){
}
c_StringMap5* c_StringMap5::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map5::m_new();
	return this;
}
int c_StringMap5::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap5::mark(){
	c_Map5::mark();
}
String c_StringMap5::debug(){
	String t="(StringMap)\n";
	t=c_Map5::debug()+t;
	return t;
}
c_Node7::c_Node7(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node7* c_Node7::m_new(String t_key,c_ModuleDecl* t_value,int t_color,c_Node7* t_parent){
	DBG_ENTER("Node.new")
	c_Node7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node7* c_Node7::m_new2(){
	DBG_ENTER("Node.new")
	c_Node7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
c_Node7* c_Node7::p_NextNode(){
	DBG_ENTER("Node.NextNode")
	c_Node7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<385>");
	c_Node7* t_node=0;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<386>");
	if((m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<387>");
		t_node=m_right;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<388>");
		while((t_node->m_left)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<389>");
			t_node=t_node->m_left;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<391>");
		return t_node;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<393>");
	t_node=this;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<394>");
	c_Node7* t_parent=this->m_parent;
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<395>");
	while(((t_parent)!=0) && t_node==t_parent->m_right){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<396>");
		t_node=t_parent;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<397>");
		t_parent=t_parent->m_parent;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<399>");
	return t_parent;
}
void c_Node7::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node7::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
c_Parser::c_Parser(){
	m__toke=String();
	m__toker=0;
	m__app=0;
	m__module=0;
	m__defattrs=0;
	m__tokeType=0;
	m__block=0;
	m__blockStack=(new c_List7)->m_new();
	m__errStack=(new c_StringList)->m_new2();
	m__selTmpId=0;
}
int c_Parser::p_SetErr(){
	DBG_ENTER("Parser.SetErr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<360>");
	if((m__toker->p_Path()).Length()!=0){
		DBG_BLOCK();
		bb_config__errInfo=m__toker->p_Path()+String(L"<",1)+String(m__toker->p_Line())+String(L">",1);
	}
	return 0;
}
int c_Parser::p_CParse(String t_toke){
	DBG_ENTER("Parser.CParse")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_toke,"toke")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<414>");
	if(m__toke!=t_toke){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<415>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<417>");
	p_NextToke();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<418>");
	return 1;
}
int c_Parser::p_SkipEols(){
	DBG_ENTER("Parser.SkipEols")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<432>");
	while((p_CParse(String(L"\n",1)))!=0){
		DBG_BLOCK();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<434>");
	p_SetErr();
	return 0;
}
String c_Parser::p_NextToke(){
	DBG_ENTER("Parser.NextToke")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<391>");
	String t_toke=m__toke;
	DBG_LOCAL(t_toke,"toke")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<393>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<394>");
		m__toke=m__toker->p_NextToke();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<395>");
		m__tokeType=m__toker->p_TokeType();
	}while(!(m__tokeType!=1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<398>");
	int t_2=m__tokeType;
	DBG_LOCAL(t_2,"2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<399>");
	if(t_2==3){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<400>");
		m__toke=m__toke.ToLower();
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<401>");
		if(t_2==8){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<402>");
			if((int)m__toke.At(0)==91 && (int)m__toke.At(m__toke.Length()-1)==93){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<404>");
				m__toke=String(L"[]",2);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<408>");
	if(t_toke==String(L",",1)){
		DBG_BLOCK();
		p_SkipEols();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<410>");
	return m__toke;
}
c_Parser* c_Parser::m_new(c_Toker* t_toker,c_AppDecl* t_app,c_ModuleDecl* t_mdecl,int t_defattrs){
	DBG_ENTER("Parser.new")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_toker,"toker")
	DBG_LOCAL(t_app,"app")
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_LOCAL(t_defattrs,"defattrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1697>");
	m__toke=String(L"\n",1);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1698>");
	gc_assign(m__toker,t_toker);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1699>");
	gc_assign(m__app,t_app);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1700>");
	gc_assign(m__module,t_mdecl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1701>");
	m__defattrs=t_defattrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1702>");
	p_SetErr();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1703>");
	p_NextToke();
	return this;
}
c_Parser* c_Parser::m_new2(){
	DBG_ENTER("Parser.new")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<343>");
	return this;
}
String c_Parser::p_ParseStringLit(){
	DBG_ENTER("Parser.ParseStringLit")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<438>");
	if(m__tokeType!=6){
		DBG_BLOCK();
		bb_config_Err(String(L"Expecting string literal.",25));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<439>");
	String t_str=bb_config_Dequote(m__toke,String(L"monkey",6));
	DBG_LOCAL(t_str,"str")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<440>");
	p_NextToke();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<441>");
	return t_str;
}
String c_Parser::p_RealPath(String t_path){
	DBG_ENTER("Parser.RealPath")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<383>");
	String t_popDir=CurrentDir();
	DBG_LOCAL(t_popDir,"popDir")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<384>");
	ChangeDir(bb_os_ExtractDir(m__toker->p_Path()));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<385>");
	t_path=RealPath(t_path);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<386>");
	ChangeDir(t_popDir);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<387>");
	return t_path;
}
int c_Parser::p_ImportFile(String t_filepath){
	DBG_ENTER("Parser.ImportFile")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_filepath,"filepath")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1556>");
	if((bb_config_ENV_SAFEMODE)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1557>");
		if(m__app->m_mainModule==m__module){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1558>");
			bb_config_Err(String(L"Import of external files not permitted in safe mode.",52));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1562>");
	t_filepath=p_RealPath(t_filepath);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1564>");
	if(FileType(t_filepath)!=1){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1565>");
		bb_config_Err(String(L"File '",6)+t_filepath+String(L"' not found.",12));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1568>");
	m__app->m_fileImports->p_AddLast(t_filepath);
	return 0;
}
String c_Parser::p_ParseIdent(){
	DBG_ENTER("Parser.ParseIdent")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<445>");
	String t_3=m__toke;
	DBG_LOCAL(t_3,"3")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<446>");
	if(t_3==String(L"@",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<447>");
		p_NextToke();
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<448>");
		if(t_3==String(L"object",6) || t_3==String(L"throwable",9)){
			DBG_BLOCK();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<451>");
			if(m__tokeType!=2){
				DBG_BLOCK();
				bb_config_Err(String(L"Syntax error - expecting identifier.",36));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<453>");
	String t_id=m__toke;
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<454>");
	p_NextToke();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<455>");
	return t_id;
}
String c_Parser::p_ParseModPath(){
	DBG_ENTER("Parser.ParseModPath")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1541>");
	String t_path=p_ParseIdent();
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1542>");
	while((p_CParse(String(L".",1)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1543>");
		t_path=t_path+(String(L".",1)+p_ParseIdent());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1545>");
	return t_path;
}
int c_Parser::p_ImportModule(String t_modpath,int t_attrs){
	DBG_ENTER("Parser.ImportModule")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
int c_Parser::p_Parse(String t_toke){
	DBG_ENTER("Parser.Parse")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_toke,"toke")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<422>");
	if(!((p_CParse(t_toke))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<423>");
		bb_config_Err(String(L"Syntax error - expecting '",26)+t_toke+String(L"'.",2));
	}
	return 0;
}
c_Type* c_Parser::p_CParsePrimitiveType(){
	DBG_ENTER("Parser.CParsePrimitiveType")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<459>");
	if((p_CParse(String(L"void",4)))!=0){
		DBG_BLOCK();
		c_Type* t_=(c_Type::m_voidType);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<460>");
	if((p_CParse(String(L"bool",4)))!=0){
		DBG_BLOCK();
		c_Type* t_2=(c_Type::m_boolType);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<461>");
	if((p_CParse(String(L"int",3)))!=0){
		DBG_BLOCK();
		c_Type* t_3=(c_Type::m_intType);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<462>");
	if((p_CParse(String(L"float",5)))!=0){
		DBG_BLOCK();
		c_Type* t_4=(c_Type::m_floatType);
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<463>");
	if((p_CParse(String(L"string",6)))!=0){
		DBG_BLOCK();
		c_Type* t_5=(c_Type::m_stringType);
		return t_5;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<464>");
	if((p_CParse(String(L"object",6)))!=0){
		DBG_BLOCK();
		c_Type* t_6=(c_Type::m_objectType);
		return t_6;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<465>");
	if((p_CParse(String(L"throwable",9)))!=0){
		DBG_BLOCK();
		c_Type* t_7=(c_Type::m_throwableType);
		return t_7;
	}
	return 0;
}
c_IdentType* c_Parser::p_ParseIdentType(){
	DBG_ENTER("Parser.ParseIdentType")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<475>");
	String t_id=p_ParseIdent();
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<476>");
	if((p_CParse(String(L".",1)))!=0){
		DBG_BLOCK();
		t_id=t_id+(String(L".",1)+p_ParseIdent());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<477>");
	c_Stack3* t_args=(new c_Stack3)->m_new();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<478>");
	if((p_CParse(String(L"<",1)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<479>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<480>");
			c_Type* t_arg=p_ParseType();
			DBG_LOCAL(t_arg,"arg")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<481>");
			while((p_CParse(String(L"[]",2)))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<482>");
				t_arg=(t_arg->p_ArrayOf());
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<484>");
			t_args->p_Push7(t_arg);
		}while(!(!((p_CParse(String(L",",1)))!=0)));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<486>");
		p_Parse(String(L">",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<488>");
	c_IdentType* t_=(new c_IdentType)->m_new(t_id,t_args->p_ToArray());
	return t_;
}
c_Type* c_Parser::p_ParseType(){
	DBG_ENTER("Parser.ParseType")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<469>");
	c_Type* t_ty=p_CParsePrimitiveType();
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<470>");
	if((t_ty)!=0){
		DBG_BLOCK();
		return t_ty;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<471>");
	c_Type* t_=(p_ParseIdentType());
	return t_;
}
c_Type* c_Parser::p_ParseDeclType(){
	DBG_ENTER("Parser.ParseDeclType")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<519>");
	c_Type* t_ty=0;
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<520>");
	String t_4=m__toke;
	DBG_LOCAL(t_4,"4")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<521>");
	if(t_4==String(L"?",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<522>");
		p_NextToke();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<523>");
		t_ty=(c_Type::m_boolType);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<524>");
		if(t_4==String(L"%",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<525>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<526>");
			t_ty=(c_Type::m_intType);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<527>");
			if(t_4==String(L"#",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<528>");
				p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<529>");
				t_ty=(c_Type::m_floatType);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<530>");
				if(t_4==String(L"$",1)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<531>");
					p_NextToke();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<532>");
					t_ty=(c_Type::m_stringType);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<533>");
					if(t_4==String(L":",1)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<534>");
						p_NextToke();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<535>");
						t_ty=p_ParseType();
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<537>");
						if((m__module->p_IsStrict())!=0){
							DBG_BLOCK();
							bb_config_Err(String(L"Illegal type expression.",24));
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<538>");
						t_ty=(c_Type::m_intType);
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<540>");
	while((p_CParse(String(L"[]",2)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<541>");
		t_ty=(t_ty->p_ArrayOf());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<543>");
	return t_ty;
}
c_ArrayExpr* c_Parser::p_ParseArrayExpr(){
	DBG_ENTER("Parser.ParseArrayExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<547>");
	p_Parse(String(L"[",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<548>");
	c_Stack4* t_args=(new c_Stack4)->m_new();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<549>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<550>");
		t_args->p_Push10(p_ParseExpr());
	}while(!(!((p_CParse(String(L",",1)))!=0)));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<552>");
	p_Parse(String(L"]",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<553>");
	c_ArrayExpr* t_=(new c_ArrayExpr)->m_new(t_args->p_ToArray());
	return t_;
}
int c_Parser::p_AtEos(){
	DBG_ENTER("Parser.AtEos")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<428>");
	int t_=((m__toke==String() || m__toke==String(L";",1) || m__toke==String(L"\n",1) || m__toke==String(L"else",4))?1:0);
	return t_;
}
Array<c_Expr* > c_Parser::p_ParseArgs2(int t_stmt){
	DBG_ENTER("Parser.ParseArgs")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<558>");
	Array<c_Expr* > t_args=Array<c_Expr* >();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<560>");
	if((t_stmt)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<561>");
		if((p_AtEos())!=0){
			DBG_BLOCK();
			return t_args;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<563>");
		if(m__toke!=String(L"(",1)){
			DBG_BLOCK();
			return t_args;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<566>");
	int t_nargs=0;
	int t_eat=0;
	DBG_LOCAL(t_nargs,"nargs")
	DBG_LOCAL(t_eat,"eat")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<568>");
	if(m__toke==String(L"(",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<569>");
		if((t_stmt)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<570>");
			c_Toker* t_toker=(new c_Toker)->m_new2(m__toker);
			int t_bra=1;
			DBG_LOCAL(t_toker,"toker")
			DBG_LOCAL(t_bra,"bra")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<571>");
			do{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<572>");
				t_toker->p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<573>");
				t_toker->p_SkipSpace();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<574>");
				String t_5=t_toker->p_Toke().ToLower();
				DBG_LOCAL(t_5,"5")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<575>");
				if(t_5==String() || t_5==String(L"else",4)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<576>");
					bb_config_Err(String(L"Parenthesis mismatch error.",27));
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<577>");
					if(t_5==String(L"(",1) || t_5==String(L"[",1)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<578>");
						t_bra+=1;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<579>");
						if(t_5==String(L"]",1) || t_5==String(L")",1)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<580>");
							t_bra-=1;
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<581>");
							if((t_bra)!=0){
								DBG_BLOCK();
								continue;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<582>");
							t_toker->p_NextToke();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<583>");
							t_toker->p_SkipSpace();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<584>");
							String t_6=t_toker->p_Toke().ToLower();
							DBG_LOCAL(t_6,"6")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<585>");
							if(t_6==String(L".",1) || t_6==String(L"(",1) || t_6==String(L"[",1) || t_6==String() || t_6==String(L";",1) || t_6==String(L"\n",1) || t_6==String(L"else",4)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<586>");
								t_eat=1;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<588>");
							break;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<589>");
							if(t_5==String(L",",1)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<590>");
								if(t_bra!=1){
									DBG_BLOCK();
									continue;
								}
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<591>");
								t_eat=1;
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<592>");
								break;
							}
						}
					}
				}
			}while(!(false));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<596>");
			t_eat=1;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<598>");
		if(((t_eat)!=0) && p_NextToke()==String(L")",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<599>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<600>");
			return t_args;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<604>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<605>");
		c_Expr* t_arg=0;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<606>");
		if(((m__toke).Length()!=0) && m__toke!=String(L",",1)){
			DBG_BLOCK();
			t_arg=p_ParseExpr();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<607>");
		if(t_args.Length()==t_nargs){
			DBG_BLOCK();
			t_args=t_args.Resize(t_nargs+10);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<608>");
		gc_assign(t_args.At(t_nargs),t_arg);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<609>");
		t_nargs+=1;
	}while(!(!((p_CParse(String(L",",1)))!=0)));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<611>");
	t_args=t_args.Slice(0,t_nargs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<613>");
	if((t_eat)!=0){
		DBG_BLOCK();
		p_Parse(String(L")",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<615>");
	return t_args;
}
c_IdentType* c_Parser::p_CParseIdentType(bool t_inner){
	DBG_ENTER("Parser.CParseIdentType")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_inner,"inner")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<492>");
	if(m__tokeType!=2){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<493>");
	String t_id=p_ParseIdent();
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<494>");
	if((p_CParse(String(L".",1)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<495>");
		if(m__tokeType!=2){
			DBG_BLOCK();
			return 0;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<496>");
		t_id=t_id+(String(L".",1)+p_ParseIdent());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<498>");
	if(!((p_CParse(String(L"<",1)))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<499>");
		if(t_inner){
			DBG_BLOCK();
			c_IdentType* t_=(new c_IdentType)->m_new(t_id,Array<c_Type* >());
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<500>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<502>");
	c_Stack3* t_args=(new c_Stack3)->m_new();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<503>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<504>");
		c_Type* t_arg=p_CParsePrimitiveType();
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<505>");
		if(!((t_arg)!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<506>");
			t_arg=(p_CParseIdentType(true));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<507>");
			if(!((t_arg)!=0)){
				DBG_BLOCK();
				return 0;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<509>");
		while((p_CParse(String(L"[]",2)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<510>");
			t_arg=(t_arg->p_ArrayOf());
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<512>");
		t_args->p_Push7(t_arg);
	}while(!(!((p_CParse(String(L",",1)))!=0)));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<514>");
	if(!((p_CParse(String(L">",1)))!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<515>");
	c_IdentType* t_2=(new c_IdentType)->m_new(t_id,t_args->p_ToArray());
	return t_2;
}
c_Expr* c_Parser::p_ParsePrimaryExpr(int t_stmt){
	DBG_ENTER("Parser.ParsePrimaryExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<620>");
	c_Expr* t_expr=0;
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<622>");
	String t_7=m__toke;
	DBG_LOCAL(t_7,"7")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<623>");
	if(t_7==String(L"(",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<624>");
		p_NextToke();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<625>");
		t_expr=p_ParseExpr();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<626>");
		p_Parse(String(L")",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<627>");
		if(t_7==String(L"[",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<628>");
			t_expr=(p_ParseArrayExpr());
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<629>");
			if(t_7==String(L"[]",2)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<630>");
				p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<631>");
				t_expr=((new c_ConstExpr)->m_new((c_Type::m_emptyArrayType),String()));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<632>");
				if(t_7==String(L".",1)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<633>");
					t_expr=((new c_ScopeExpr)->m_new(m__module));
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<634>");
					if(t_7==String(L"new",3)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<635>");
						p_NextToke();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<636>");
						c_Type* t_ty=p_ParseType();
						DBG_LOCAL(t_ty,"ty")
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<637>");
						if((p_CParse(String(L"[",1)))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<638>");
							c_Expr* t_len=p_ParseExpr();
							DBG_LOCAL(t_len,"len")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<639>");
							p_Parse(String(L"]",1));
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<640>");
							while((p_CParse(String(L"[]",2)))!=0){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<641>");
								t_ty=(t_ty->p_ArrayOf());
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<643>");
							t_expr=((new c_NewArrayExpr)->m_new(t_ty,t_len));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<645>");
							t_expr=((new c_NewObjectExpr)->m_new(t_ty,p_ParseArgs2(t_stmt)));
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<647>");
						if(t_7==String(L"null",4)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<648>");
							p_NextToke();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<649>");
							t_expr=((new c_ConstExpr)->m_new((c_Type::m_nullObjectType),String()));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<650>");
							if(t_7==String(L"true",4)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<651>");
								p_NextToke();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<652>");
								t_expr=((new c_ConstExpr)->m_new((c_Type::m_boolType),String(L"1",1)));
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<653>");
								if(t_7==String(L"false",5)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<654>");
									p_NextToke();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<655>");
									t_expr=((new c_ConstExpr)->m_new((c_Type::m_boolType),String()));
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<656>");
									if(t_7==String(L"bool",4) || t_7==String(L"int",3) || t_7==String(L"float",5) || t_7==String(L"string",6) || t_7==String(L"object",6) || t_7==String(L"throwable",9)){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<657>");
										String t_id=m__toke;
										DBG_LOCAL(t_id,"id")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<658>");
										c_Type* t_ty2=p_ParseType();
										DBG_LOCAL(t_ty2,"ty")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<659>");
										if(((p_CParse(String(L"(",1)))!=0)){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<660>");
											t_expr=p_ParseExpr();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<661>");
											p_Parse(String(L")",1));
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<662>");
											t_expr=((new c_CastExpr)->m_new(t_ty2,t_expr,1));
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<664>");
											t_expr=((new c_IdentExpr)->m_new(t_id,0));
										}
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<666>");
										if(t_7==String(L"self",4)){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<667>");
											p_NextToke();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<668>");
											t_expr=((new c_SelfExpr)->m_new());
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<669>");
											if(t_7==String(L"super",5)){
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<670>");
												p_NextToke();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<671>");
												p_Parse(String(L".",1));
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<672>");
												p_SkipEols();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<673>");
												if(m__toke==String(L"new",3)){
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<674>");
													p_NextToke();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<675>");
													c_FuncDecl* t_func=dynamic_cast<c_FuncDecl*>(m__block);
													DBG_LOCAL(t_func,"func")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<676>");
													if(!((t_func)!=0) || !((t_stmt)!=0) || !t_func->p_IsCtor() || !t_func->m_stmts->p_IsEmpty()){
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<677>");
														bb_config_Err(String(L"Call to Super.new must be first statement in a constructor.",59));
													}
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<679>");
													t_expr=((new c_InvokeSuperExpr)->m_new(String(L"new",3),p_ParseArgs2(t_stmt)));
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<680>");
													t_func->m_attrs|=8;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<682>");
													String t_id2=p_ParseIdent();
													DBG_LOCAL(t_id2,"id")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<683>");
													t_expr=((new c_InvokeSuperExpr)->m_new(t_id2,p_ParseArgs2(t_stmt)));
												}
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<686>");
												int t_8=m__tokeType;
												DBG_LOCAL(t_8,"8")
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<687>");
												if(t_8==2){
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<689>");
													c_Toker* t_toker=(new c_Toker)->m_new2(m__toker);
													DBG_LOCAL(t_toker,"toker")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<691>");
													c_IdentType* t_ty3=p_CParseIdentType(false);
													DBG_LOCAL(t_ty3,"ty")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<692>");
													if((t_ty3)!=0){
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<693>");
														t_expr=((new c_IdentTypeExpr)->m_new(t_ty3));
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<695>");
														gc_assign(m__toker,t_toker);
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<696>");
														m__toke=m__toker->p_Toke();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<697>");
														m__tokeType=m__toker->p_TokeType();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<698>");
														t_expr=((new c_IdentExpr)->m_new(p_ParseIdent(),0));
													}
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<701>");
													if(t_8==4){
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<702>");
														t_expr=((new c_ConstExpr)->m_new((c_Type::m_intType),m__toke));
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<703>");
														p_NextToke();
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<704>");
														if(t_8==5){
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<705>");
															t_expr=((new c_ConstExpr)->m_new((c_Type::m_floatType),m__toke));
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<706>");
															p_NextToke();
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<707>");
															if(t_8==6){
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<708>");
																t_expr=((new c_ConstExpr)->m_new((c_Type::m_stringType),bb_config_Dequote(m__toke,String(L"monkey",6))));
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<709>");
																p_NextToke();
															}else{
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<711>");
																bb_config_Err(String(L"Syntax error - unexpected token '",33)+m__toke+String(L"'",1));
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<715>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<717>");
		String t_9=m__toke;
		DBG_LOCAL(t_9,"9")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<718>");
		if(t_9==String(L".",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<720>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<721>");
			p_SkipEols();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<722>");
			String t_id3=p_ParseIdent();
			DBG_LOCAL(t_id3,"id")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<723>");
			t_expr=((new c_IdentExpr)->m_new(t_id3,t_expr));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<725>");
			if(t_9==String(L"(",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<727>");
				t_expr=((new c_FuncCallExpr)->m_new(t_expr,p_ParseArgs2(t_stmt)));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<729>");
				if(t_9==String(L"[",1)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<731>");
					p_NextToke();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<732>");
					if((p_CParse(String(L"..",2)))!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<733>");
						if(m__toke==String(L"]",1)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<734>");
							t_expr=((new c_SliceExpr)->m_new(t_expr,0,0));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<736>");
							t_expr=((new c_SliceExpr)->m_new(t_expr,0,p_ParseExpr()));
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<739>");
						c_Expr* t_from=p_ParseExpr();
						DBG_LOCAL(t_from,"from")
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<740>");
						if((p_CParse(String(L"..",2)))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<741>");
							if(m__toke==String(L"]",1)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<742>");
								t_expr=((new c_SliceExpr)->m_new(t_expr,t_from,0));
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<744>");
								t_expr=((new c_SliceExpr)->m_new(t_expr,t_from,p_ParseExpr()));
							}
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<747>");
							t_expr=((new c_IndexExpr)->m_new(t_expr,t_from));
						}
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<750>");
					p_Parse(String(L"]",1));
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<752>");
					return t_expr;
				}
			}
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseUnaryExpr(){
	DBG_ENTER("Parser.ParseUnaryExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<759>");
	p_SkipEols();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<760>");
	String t_op=m__toke;
	DBG_LOCAL(t_op,"op")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<761>");
	String t_10=t_op;
	DBG_LOCAL(t_10,"10")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<762>");
	if(t_10==String(L"+",1) || t_10==String(L"-",1) || t_10==String(L"~",1) || t_10==String(L"not",3)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<763>");
		p_NextToke();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<764>");
		c_Expr* t_expr=p_ParseUnaryExpr();
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<765>");
		c_Expr* t_=((new c_UnaryExpr)->m_new(t_op,t_expr));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<767>");
	c_Expr* t_2=p_ParsePrimaryExpr(0);
	return t_2;
}
c_Expr* c_Parser::p_ParseMulDivExpr(){
	DBG_ENTER("Parser.ParseMulDivExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<771>");
	c_Expr* t_expr=p_ParseUnaryExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<772>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<773>");
		String t_op=m__toke;
		DBG_LOCAL(t_op,"op")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<774>");
		String t_11=t_op;
		DBG_LOCAL(t_11,"11")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<775>");
		if(t_11==String(L"*",1) || t_11==String(L"/",1) || t_11==String(L"mod",3) || t_11==String(L"shl",3) || t_11==String(L"shr",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<776>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<777>");
			c_Expr* t_rhs=p_ParseUnaryExpr();
			DBG_LOCAL(t_rhs,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<778>");
			t_expr=((new c_BinaryMathExpr)->m_new(t_op,t_expr,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<780>");
			return t_expr;
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseAddSubExpr(){
	DBG_ENTER("Parser.ParseAddSubExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<786>");
	c_Expr* t_expr=p_ParseMulDivExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<787>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<788>");
		String t_op=m__toke;
		DBG_LOCAL(t_op,"op")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<789>");
		String t_12=t_op;
		DBG_LOCAL(t_12,"12")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<790>");
		if(t_12==String(L"+",1) || t_12==String(L"-",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<791>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<792>");
			c_Expr* t_rhs=p_ParseMulDivExpr();
			DBG_LOCAL(t_rhs,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<793>");
			t_expr=((new c_BinaryMathExpr)->m_new(t_op,t_expr,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<795>");
			return t_expr;
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseBitandExpr(){
	DBG_ENTER("Parser.ParseBitandExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<801>");
	c_Expr* t_expr=p_ParseAddSubExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<802>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<803>");
		String t_op=m__toke;
		DBG_LOCAL(t_op,"op")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<804>");
		String t_13=t_op;
		DBG_LOCAL(t_13,"13")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<805>");
		if(t_13==String(L"&",1) || t_13==String(L"~",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<806>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<807>");
			c_Expr* t_rhs=p_ParseAddSubExpr();
			DBG_LOCAL(t_rhs,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<808>");
			t_expr=((new c_BinaryMathExpr)->m_new(t_op,t_expr,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<810>");
			return t_expr;
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseBitorExpr(){
	DBG_ENTER("Parser.ParseBitorExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<816>");
	c_Expr* t_expr=p_ParseBitandExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<817>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<818>");
		String t_op=m__toke;
		DBG_LOCAL(t_op,"op")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<819>");
		String t_14=t_op;
		DBG_LOCAL(t_14,"14")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<820>");
		if(t_14==String(L"|",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<821>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<822>");
			c_Expr* t_rhs=p_ParseBitandExpr();
			DBG_LOCAL(t_rhs,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<823>");
			t_expr=((new c_BinaryMathExpr)->m_new(t_op,t_expr,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<825>");
			return t_expr;
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseCompareExpr(){
	DBG_ENTER("Parser.ParseCompareExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<831>");
	c_Expr* t_expr=p_ParseBitorExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<832>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<833>");
		String t_op=m__toke;
		DBG_LOCAL(t_op,"op")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<834>");
		String t_15=t_op;
		DBG_LOCAL(t_15,"15")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<835>");
		if(t_15==String(L"=",1) || t_15==String(L"<",1) || t_15==String(L">",1) || t_15==String(L"<=",2) || t_15==String(L">=",2) || t_15==String(L"<>",2)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<836>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<837>");
			if(t_op==String(L">",1) && m__toke==String(L"=",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<838>");
				t_op=t_op+m__toke;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<839>");
				p_NextToke();
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<840>");
				if(t_op==String(L"<",1) && (m__toke==String(L"=",1) || m__toke==String(L">",1))){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<841>");
					t_op=t_op+m__toke;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<842>");
					p_NextToke();
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<844>");
			c_Expr* t_rhs=p_ParseBitorExpr();
			DBG_LOCAL(t_rhs,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<845>");
			t_expr=((new c_BinaryCompareExpr)->m_new(t_op,t_expr,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<847>");
			return t_expr;
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseAndExpr(){
	DBG_ENTER("Parser.ParseAndExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<853>");
	c_Expr* t_expr=p_ParseCompareExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<854>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<855>");
		String t_op=m__toke;
		DBG_LOCAL(t_op,"op")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<856>");
		if(t_op==String(L"and",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<857>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<858>");
			c_Expr* t_rhs=p_ParseCompareExpr();
			DBG_LOCAL(t_rhs,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<859>");
			t_expr=((new c_BinaryLogicExpr)->m_new(t_op,t_expr,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<861>");
			return t_expr;
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseOrExpr(){
	DBG_ENTER("Parser.ParseOrExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<867>");
	c_Expr* t_expr=p_ParseAndExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<868>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<869>");
		String t_op=m__toke;
		DBG_LOCAL(t_op,"op")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<870>");
		if(t_op==String(L"or",2)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<871>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<872>");
			c_Expr* t_rhs=p_ParseAndExpr();
			DBG_LOCAL(t_rhs,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<873>");
			t_expr=((new c_BinaryLogicExpr)->m_new(t_op,t_expr,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<875>");
			return t_expr;
		}
	}while(!(false));
}
c_Expr* c_Parser::p_ParseExpr(){
	DBG_ENTER("Parser.ParseExpr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<881>");
	c_Expr* t_=p_ParseOrExpr();
	return t_;
}
c_Decl* c_Parser::p_ParseDecl(String t_toke,int t_attrs){
	DBG_ENTER("Parser.ParseDecl")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_toke,"toke")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1266>");
	p_SetErr();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1267>");
	String t_id=p_ParseIdent();
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1268>");
	c_Type* t_ty=0;
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1269>");
	c_Expr* t_init=0;
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1270>");
	if((t_attrs&256)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1271>");
		t_ty=p_ParseDeclType();
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1272>");
		if((p_CParse(String(L":=",2)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1273>");
			t_init=p_ParseExpr();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1275>");
			t_ty=p_ParseDeclType();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1276>");
			if((p_CParse(String(L"=",1)))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1277>");
				t_init=p_ParseExpr();
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1278>");
				if((p_CParse(String(L"[",1)))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1279>");
					c_Expr* t_len=p_ParseExpr();
					DBG_LOCAL(t_len,"len")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1280>");
					p_Parse(String(L"]",1));
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1281>");
					while((p_CParse(String(L"[]",2)))!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1282>");
						t_ty=(t_ty->p_ArrayOf());
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1284>");
					t_init=((new c_NewArrayExpr)->m_new(t_ty,t_len));
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1285>");
					t_ty=(t_ty->p_ArrayOf());
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1286>");
					if(t_toke!=String(L"const",5)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1287>");
						t_init=((new c_ConstExpr)->m_new(t_ty,String()));
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1289>");
						bb_config_Err(String(L"Constants must be initialized.",30));
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1293>");
	c_ValDecl* t_decl=0;
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1295>");
	String t_21=t_toke;
	DBG_LOCAL(t_21,"21")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1296>");
	if(t_21==String(L"global",6)){
		DBG_BLOCK();
		t_decl=((new c_GlobalDecl)->m_new(t_id,t_attrs,t_ty,t_init));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1297>");
		if(t_21==String(L"field",5)){
			DBG_BLOCK();
			t_decl=((new c_FieldDecl)->m_new(t_id,t_attrs,t_ty,t_init));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1298>");
			if(t_21==String(L"const",5)){
				DBG_BLOCK();
				t_decl=((new c_ConstDecl)->m_new(t_id,t_attrs,t_ty,t_init));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1299>");
				if(t_21==String(L"local",5)){
					DBG_BLOCK();
					t_decl=((new c_LocalDecl)->m_new(t_id,t_attrs,t_ty,t_init));
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1302>");
	if(((t_decl->p_IsExtern())!=0) || ((p_CParse(String(L"extern",6)))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1303>");
		t_decl->m_munged=t_decl->m_ident;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1304>");
		if((p_CParse(String(L"=",1)))!=0){
			DBG_BLOCK();
			t_decl->m_munged=p_ParseStringLit();
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1307>");
	c_Decl* t_=(t_decl);
	return t_;
}
c_List3* c_Parser::p_ParseDecls(String t_toke,int t_attrs){
	DBG_ENTER("Parser.ParseDecls")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_toke,"toke")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1311>");
	if((t_toke).Length()!=0){
		DBG_BLOCK();
		p_Parse(t_toke);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1313>");
	c_List3* t_decls=(new c_List3)->m_new();
	DBG_LOCAL(t_decls,"decls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1314>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1315>");
		c_Decl* t_decl=p_ParseDecl(t_toke,t_attrs);
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1316>");
		t_decls->p_AddLast3(t_decl);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1317>");
		if(!((p_CParse(String(L",",1)))!=0)){
			DBG_BLOCK();
			return t_decls;
		}
	}while(!(false));
}
int c_Parser::p_PushBlock(c_BlockDecl* t_block){
	DBG_ENTER("Parser.PushBlock")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<372>");
	m__blockStack->p_AddLast7(m__block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<373>");
	m__errStack->p_AddLast(bb_config__errInfo);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<374>");
	gc_assign(m__block,t_block);
	return 0;
}
int c_Parser::p_ParseDeclStmts(){
	DBG_ENTER("Parser.ParseDeclStmts")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1322>");
	String t_toke=m__toke;
	DBG_LOCAL(t_toke,"toke")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1323>");
	p_NextToke();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1324>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1325>");
		c_Decl* t_decl=p_ParseDecl(t_toke,0);
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1326>");
		m__block->p_AddStmt((new c_DeclStmt)->m_new(t_decl));
	}while(!(!((p_CParse(String(L",",1)))!=0)));
	return 0;
}
int c_Parser::p_ParseReturnStmt(){
	DBG_ENTER("Parser.ParseReturnStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1075>");
	p_Parse(String(L"return",6));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1076>");
	c_Expr* t_expr=0;
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1077>");
	if(!((p_AtEos())!=0)){
		DBG_BLOCK();
		t_expr=p_ParseExpr();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1078>");
	m__block->p_AddStmt((new c_ReturnStmt)->m_new(t_expr));
	return 0;
}
int c_Parser::p_ParseExitStmt(){
	DBG_ENTER("Parser.ParseExitStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1082>");
	p_Parse(String(L"exit",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1083>");
	m__block->p_AddStmt((new c_BreakStmt)->m_new());
	return 0;
}
int c_Parser::p_ParseContinueStmt(){
	DBG_ENTER("Parser.ParseContinueStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1087>");
	p_Parse(String(L"continue",8));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1088>");
	m__block->p_AddStmt((new c_ContinueStmt)->m_new());
	return 0;
}
int c_Parser::p_PopBlock(){
	DBG_ENTER("Parser.PopBlock")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<378>");
	gc_assign(m__block,m__blockStack->p_RemoveLast());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<379>");
	bb_config__errInfo=m__errStack->p_RemoveLast();
	return 0;
}
int c_Parser::p_ParseIfStmt(String t_term){
	DBG_ENTER("Parser.ParseIfStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_term,"term")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<886>");
	p_CParse(String(L"if",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<888>");
	c_Expr* t_expr=p_ParseExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<890>");
	p_CParse(String(L"then",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<892>");
	c_BlockDecl* t_thenBlock=(new c_BlockDecl)->m_new(m__block);
	DBG_LOCAL(t_thenBlock,"thenBlock")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<893>");
	c_BlockDecl* t_elseBlock=(new c_BlockDecl)->m_new(m__block);
	DBG_LOCAL(t_elseBlock,"elseBlock")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<895>");
	int t_eatTerm=0;
	DBG_LOCAL(t_eatTerm,"eatTerm")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<896>");
	if(!((t_term).Length()!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<897>");
		if(m__toke==String(L"\n",1)){
			DBG_BLOCK();
			t_term=String(L"end",3);
		}else{
			DBG_BLOCK();
			t_term=String(L"\n",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<898>");
		t_eatTerm=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<901>");
	p_PushBlock(t_thenBlock);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<902>");
	while(m__toke!=t_term){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<903>");
		String t_16=m__toke;
		DBG_LOCAL(t_16,"16")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<904>");
		if(t_16==String(L"endif",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<905>");
			if(t_term==String(L"end",3)){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<906>");
			bb_config_Err(String(L"Syntax error - expecting 'End'.",31));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<907>");
			if(t_16==String(L"else",4) || t_16==String(L"elseif",6)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<908>");
				int t_elif=((m__toke==String(L"elseif",6))?1:0);
				DBG_LOCAL(t_elif,"elif")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<909>");
				p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<910>");
				if(m__block==t_elseBlock){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<911>");
					bb_config_Err(String(L"If statement can only have one 'else' block.",44));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<913>");
				p_PopBlock();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<914>");
				p_PushBlock(t_elseBlock);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<915>");
				if(((t_elif)!=0) || m__toke==String(L"if",2)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<916>");
					p_ParseIfStmt(t_term);
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<919>");
				p_ParseStmt();
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<922>");
	p_PopBlock();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<924>");
	if((t_eatTerm)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<925>");
		p_NextToke();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<926>");
		if(t_term==String(L"end",3)){
			DBG_BLOCK();
			p_CParse(String(L"if",2));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<929>");
	c_IfStmt* t_stmt=(new c_IfStmt)->m_new(t_expr,t_thenBlock,t_elseBlock);
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<931>");
	m__block->p_AddStmt(t_stmt);
	return 0;
}
int c_Parser::p_ParseWhileStmt(){
	DBG_ENTER("Parser.ParseWhileStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<936>");
	p_Parse(String(L"while",5));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<938>");
	c_Expr* t_expr=p_ParseExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<939>");
	c_BlockDecl* t_block=(new c_BlockDecl)->m_new(m__block);
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<941>");
	p_PushBlock(t_block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<942>");
	while(!((p_CParse(String(L"wend",4)))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<943>");
		if((p_CParse(String(L"end",3)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<944>");
			p_CParse(String(L"while",5));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<945>");
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<947>");
		p_ParseStmt();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<949>");
	p_PopBlock();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<951>");
	c_WhileStmt* t_stmt=(new c_WhileStmt)->m_new(t_expr,t_block);
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<953>");
	m__block->p_AddStmt(t_stmt);
	return 0;
}
int c_Parser::p_PushErr(){
	DBG_ENTER("Parser.PushErr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<364>");
	m__errStack->p_AddLast(bb_config__errInfo);
	return 0;
}
int c_Parser::p_PopErr(){
	DBG_ENTER("Parser.PopErr")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<368>");
	bb_config__errInfo=m__errStack->p_RemoveLast();
	return 0;
}
int c_Parser::p_ParseRepeatStmt(){
	DBG_ENTER("Parser.ParseRepeatStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<958>");
	p_Parse(String(L"repeat",6));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<960>");
	c_BlockDecl* t_block=(new c_BlockDecl)->m_new(m__block);
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<962>");
	p_PushBlock(t_block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<963>");
	while(m__toke!=String(L"until",5) && m__toke!=String(L"forever",7)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<964>");
		p_ParseStmt();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<966>");
	p_PopBlock();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<968>");
	c_Expr* t_expr=0;
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<969>");
	if((p_CParse(String(L"until",5)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<970>");
		p_PushErr();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<971>");
		t_expr=p_ParseExpr();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<972>");
		p_PopErr();
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<974>");
		p_Parse(String(L"forever",7));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<975>");
		t_expr=((new c_ConstExpr)->m_new((c_Type::m_boolType),String()));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<978>");
	c_RepeatStmt* t_stmt=(new c_RepeatStmt)->m_new(t_block,t_expr);
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<980>");
	m__block->p_AddStmt(t_stmt);
	return 0;
}
int c_Parser::p_ParseForStmt(){
	DBG_ENTER("Parser.ParseForStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<985>");
	p_Parse(String(L"for",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<987>");
	String t_varid=String();
	c_Type* t_varty=0;
	int t_varlocal=0;
	DBG_LOCAL(t_varid,"varid")
	DBG_LOCAL(t_varty,"varty")
	DBG_LOCAL(t_varlocal,"varlocal")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<989>");
	if((p_CParse(String(L"local",5)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<990>");
		t_varlocal=1;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<991>");
		t_varid=p_ParseIdent();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<992>");
		if(!((p_CParse(String(L":=",2)))!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<993>");
			t_varty=p_ParseDeclType();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<994>");
			p_Parse(String(L"=",1));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<997>");
		t_varlocal=0;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<998>");
		t_varid=p_ParseIdent();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<999>");
		p_Parse(String(L"=",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1002>");
	if((p_CParse(String(L"eachin",6)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1003>");
		c_Expr* t_expr=p_ParseExpr();
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1004>");
		c_BlockDecl* t_block=(new c_BlockDecl)->m_new(m__block);
		DBG_LOCAL(t_block,"block")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1006>");
		p_PushBlock(t_block);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1007>");
		while(!((p_CParse(String(L"next",4)))!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1008>");
			if((p_CParse(String(L"end",3)))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1009>");
				p_CParse(String(L"for",3));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1010>");
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1012>");
			p_ParseStmt();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1014>");
		if(m__tokeType==2 && p_ParseIdent()!=t_varid){
			DBG_BLOCK();
			bb_config_Err(String(L"Next variable name does not match For variable name",51));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1015>");
		p_PopBlock();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1017>");
		c_ForEachinStmt* t_stmt=(new c_ForEachinStmt)->m_new(t_varid,t_varty,t_varlocal,t_expr,t_block);
		DBG_LOCAL(t_stmt,"stmt")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1019>");
		m__block->p_AddStmt(t_stmt);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1021>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1024>");
	c_Expr* t_from=p_ParseExpr();
	DBG_LOCAL(t_from,"from")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1026>");
	String t_op=String();
	DBG_LOCAL(t_op,"op")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1027>");
	if((p_CParse(String(L"to",2)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1028>");
		t_op=String(L"<=",2);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1029>");
		if((p_CParse(String(L"until",5)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1030>");
			t_op=String(L"<",1);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1032>");
			bb_config_Err(String(L"Expecting 'To' or 'Until'.",26));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1035>");
	c_Expr* t_term=p_ParseExpr();
	DBG_LOCAL(t_term,"term")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1036>");
	c_Expr* t_stp=0;
	DBG_LOCAL(t_stp,"stp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1038>");
	if((p_CParse(String(L"step",4)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1039>");
		t_stp=p_ParseExpr();
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1041>");
		t_stp=((new c_ConstExpr)->m_new((c_Type::m_intType),String(L"1",1)));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1044>");
	c_Stmt* t_init=0;
	c_Expr* t_expr2=0;
	c_Stmt* t_incr=0;
	DBG_LOCAL(t_init,"init")
	DBG_LOCAL(t_expr2,"expr")
	DBG_LOCAL(t_incr,"incr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1046>");
	if((t_varlocal)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1047>");
		c_LocalDecl* t_indexVar=(new c_LocalDecl)->m_new(t_varid,0,t_varty,t_from);
		DBG_LOCAL(t_indexVar,"indexVar")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1048>");
		t_init=((new c_DeclStmt)->m_new(t_indexVar));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1050>");
		t_init=((new c_AssignStmt)->m_new(String(L"=",1),((new c_IdentExpr)->m_new(t_varid,0)),t_from));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1053>");
	t_expr2=((new c_BinaryCompareExpr)->m_new(t_op,((new c_IdentExpr)->m_new(t_varid,0)),t_term));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1054>");
	t_incr=((new c_AssignStmt)->m_new(String(L"=",1),((new c_IdentExpr)->m_new(t_varid,0)),((new c_BinaryMathExpr)->m_new(String(L"+",1),((new c_IdentExpr)->m_new(t_varid,0)),t_stp))));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1056>");
	c_BlockDecl* t_block2=(new c_BlockDecl)->m_new(m__block);
	DBG_LOCAL(t_block2,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1058>");
	p_PushBlock(t_block2);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1059>");
	while(!((p_CParse(String(L"next",4)))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1060>");
		if((p_CParse(String(L"end",3)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1061>");
			p_CParse(String(L"for",3));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1062>");
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1064>");
		p_ParseStmt();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1066>");
	if(m__tokeType==2 && p_ParseIdent()!=t_varid){
		DBG_BLOCK();
		bb_config_Err(String(L"Next variable name does not match For variable name",51));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1067>");
	p_PopBlock();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1069>");
	c_ForStmt* t_stmt2=(new c_ForStmt)->m_new(t_init,t_expr2,t_incr,t_block2);
	DBG_LOCAL(t_stmt2,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1071>");
	m__block->p_AddStmt(t_stmt2);
	return 0;
}
int c_Parser::p_ParseSelectStmt(){
	DBG_ENTER("Parser.ParseSelectStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1127>");
	p_Parse(String(L"select",6));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1129>");
	c_Expr* t_expr=p_ParseExpr();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1131>");
	c_BlockDecl* t_block=m__block;
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1133>");
	m__selTmpId+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1134>");
	String t_tmpId=String(m__selTmpId);
	DBG_LOCAL(t_tmpId,"tmpId")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1135>");
	t_block->p_AddStmt((new c_DeclStmt)->m_new2(t_tmpId,0,t_expr));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1136>");
	c_IdentExpr* t_tmpExpr=(new c_IdentExpr)->m_new(t_tmpId,0);
	DBG_LOCAL(t_tmpExpr,"tmpExpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1142>");
	while(m__toke!=String(L"end",3) && m__toke!=String(L"default",7)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1143>");
		p_SetErr();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1144>");
		String t_17=m__toke;
		DBG_LOCAL(t_17,"17")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1145>");
		if(t_17==String(L"\n",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1146>");
			p_NextToke();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1147>");
			if(t_17==String(L"case",4)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1148>");
				p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1149>");
				c_Expr* t_comp=0;
				DBG_LOCAL(t_comp,"comp")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1150>");
				do{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1152>");
					c_Expr* t_expr2=((new c_IdentExpr)->m_new(t_tmpId,0));
					DBG_LOCAL(t_expr2,"expr")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1153>");
					t_expr2=((new c_BinaryCompareExpr)->m_new(String(L"=",1),t_expr2,p_ParseExpr()));
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1157>");
					if((t_comp)!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1158>");
						t_comp=((new c_BinaryLogicExpr)->m_new(String(L"or",2),t_comp,t_expr2));
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1160>");
						t_comp=t_expr2;
					}
				}while(!(!((p_CParse(String(L",",1)))!=0)));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1164>");
				c_BlockDecl* t_thenBlock=(new c_BlockDecl)->m_new(m__block);
				DBG_LOCAL(t_thenBlock,"thenBlock")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1165>");
				c_BlockDecl* t_elseBlock=(new c_BlockDecl)->m_new(m__block);
				DBG_LOCAL(t_elseBlock,"elseBlock")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1167>");
				c_IfStmt* t_ifstmt=(new c_IfStmt)->m_new(t_comp,t_thenBlock,t_elseBlock);
				DBG_LOCAL(t_ifstmt,"ifstmt")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1168>");
				t_block->p_AddStmt(t_ifstmt);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1169>");
				t_block=t_ifstmt->m_thenBlock;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1171>");
				p_PushBlock(t_block);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1172>");
				while(m__toke!=String(L"case",4) && m__toke!=String(L"default",7) && m__toke!=String(L"end",3)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1173>");
					p_ParseStmt();
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1175>");
				p_PopBlock();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1177>");
				t_block=t_elseBlock;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1179>");
				bb_config_Err(String(L"Syntax error - expecting 'Case', 'Default' or 'End'.",52));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1183>");
	if(m__toke==String(L"default",7)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1184>");
		p_NextToke();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1185>");
		p_PushBlock(t_block);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1186>");
		while(m__toke!=String(L"end",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1187>");
			p_SetErr();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1188>");
			String t_18=m__toke;
			DBG_LOCAL(t_18,"18")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1189>");
			if(t_18==String(L"case",4)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1190>");
				bb_config_Err(String(L"Case can not appear after default.",34));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1191>");
				if(t_18==String(L"default",7)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1192>");
					bb_config_Err(String(L"Select statement can have only one default block.",49));
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1194>");
			p_ParseStmt();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1196>");
		p_PopBlock();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1199>");
	p_SetErr();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1200>");
	p_Parse(String(L"end",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1201>");
	p_CParse(String(L"select",6));
	return 0;
}
int c_Parser::p_ParseTryStmt(){
	DBG_ENTER("Parser.ParseTryStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1092>");
	p_Parse(String(L"try",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1094>");
	c_BlockDecl* t_block=(new c_BlockDecl)->m_new(m__block);
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1095>");
	c_Stack7* t_catches=(new c_Stack7)->m_new();
	DBG_LOCAL(t_catches,"catches")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1097>");
	p_PushBlock(t_block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1098>");
	while(m__toke!=String(L"end",3)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1099>");
		if((p_CParse(String(L"catch",5)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1100>");
			String t_id=p_ParseIdent();
			DBG_LOCAL(t_id,"id")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1101>");
			p_Parse(String(L":",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1102>");
			c_Type* t_ty=p_ParseType();
			DBG_LOCAL(t_ty,"ty")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1103>");
			c_LocalDecl* t_init=(new c_LocalDecl)->m_new(t_id,0,t_ty,0);
			DBG_LOCAL(t_init,"init")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1104>");
			c_BlockDecl* t_block2=(new c_BlockDecl)->m_new(m__block);
			DBG_LOCAL(t_block2,"block")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1105>");
			t_catches->p_Push19((new c_CatchStmt)->m_new(t_init,t_block2));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1106>");
			p_PopBlock();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1107>");
			p_PushBlock(t_block2);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1109>");
			p_ParseStmt();
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1112>");
	if(!((t_catches->p_Length2())!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Try block must have at least one catch block",44));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1113>");
	p_PopBlock();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1114>");
	p_NextToke();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1115>");
	p_CParse(String(L"try",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1117>");
	m__block->p_AddStmt((new c_TryStmt)->m_new(t_block,t_catches->p_ToArray()));
	return 0;
}
int c_Parser::p_ParseThrowStmt(){
	DBG_ENTER("Parser.ParseThrowStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1121>");
	p_Parse(String(L"throw",5));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1123>");
	m__block->p_AddStmt((new c_ThrowStmt)->m_new(p_ParseExpr()));
	return 0;
}
int c_Parser::p_ParseStmt(){
	DBG_ENTER("Parser.ParseStmt")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1205>");
	p_SetErr();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1206>");
	String t_19=m__toke;
	DBG_LOCAL(t_19,"19")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1207>");
	if(t_19==String(L";",1) || t_19==String(L"\n",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1208>");
		p_NextToke();
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1209>");
		if(t_19==String(L"const",5) || t_19==String(L"local",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1210>");
			p_ParseDeclStmts();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1211>");
			if(t_19==String(L"return",6)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1212>");
				p_ParseReturnStmt();
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1213>");
				if(t_19==String(L"exit",4)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1214>");
					p_ParseExitStmt();
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1215>");
					if(t_19==String(L"continue",8)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1216>");
						p_ParseContinueStmt();
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1217>");
						if(t_19==String(L"if",2)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1218>");
							p_ParseIfStmt(String());
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1219>");
							if(t_19==String(L"while",5)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1220>");
								p_ParseWhileStmt();
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1221>");
								if(t_19==String(L"repeat",6)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1222>");
									p_ParseRepeatStmt();
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1223>");
									if(t_19==String(L"for",3)){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1224>");
										p_ParseForStmt();
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1225>");
										if(t_19==String(L"select",6)){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1226>");
											p_ParseSelectStmt();
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1227>");
											if(t_19==String(L"try",3)){
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1228>");
												p_ParseTryStmt();
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1229>");
												if(t_19==String(L"throw",5)){
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1230>");
													p_ParseThrowStmt();
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1232>");
													c_Expr* t_expr=p_ParsePrimaryExpr(1);
													DBG_LOCAL(t_expr,"expr")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1234>");
													String t_20=m__toke;
													DBG_LOCAL(t_20,"20")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1235>");
													if(t_20==String(L"=",1) || t_20==String(L"*=",2) || t_20==String(L"/=",2) || t_20==String(L"+=",2) || t_20==String(L"-=",2) || t_20==String(L"&=",2) || t_20==String(L"|=",2) || t_20==String(L"~=",2) || t_20==String(L"mod",3) || t_20==String(L"shl",3) || t_20==String(L"shr",3)){
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1236>");
														if(((dynamic_cast<c_IdentExpr*>(t_expr))!=0) || ((dynamic_cast<c_IndexExpr*>(t_expr))!=0)){
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1237>");
															String t_op=m__toke;
															DBG_LOCAL(t_op,"op")
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1238>");
															p_NextToke();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1239>");
															if(!t_op.EndsWith(String(L"=",1))){
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1240>");
																p_Parse(String(L"=",1));
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1241>");
																t_op=t_op+String(L"=",1);
															}
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1243>");
															m__block->p_AddStmt((new c_AssignStmt)->m_new(t_op,t_expr,p_ParseExpr()));
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1245>");
															bb_config_Err(String(L"Assignment operator '",21)+m__toke+String(L"' cannot be used this way.",26));
														}
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1247>");
														return 0;
													}
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1250>");
													if((dynamic_cast<c_IdentExpr*>(t_expr))!=0){
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1252>");
														t_expr=((new c_FuncCallExpr)->m_new(t_expr,p_ParseArgs2(1)));
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1254>");
														if(((dynamic_cast<c_FuncCallExpr*>(t_expr))!=0) || ((dynamic_cast<c_InvokeSuperExpr*>(t_expr))!=0) || ((dynamic_cast<c_NewObjectExpr*>(t_expr))!=0)){
															DBG_BLOCK();
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1257>");
															bb_config_Err(String(L"Expression cannot be used as a statement.",41));
														}
													}
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1260>");
													m__block->p_AddStmt((new c_ExprStmt)->m_new(t_expr));
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	return 0;
}
c_FuncDecl* c_Parser::p_ParseFuncDecl(int t_attrs){
	DBG_ENTER("Parser.ParseFuncDecl")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1332>");
	p_SetErr();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1334>");
	if((p_CParse(String(L"method",6)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1335>");
		t_attrs|=1;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1336>");
		if(!((p_CParse(String(L"function",8)))!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1337>");
			bb_config_InternalErr(String(L"Internal error",14));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1340>");
	t_attrs|=m__defattrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1342>");
	String t_id=String();
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1343>");
	c_Type* t_ty=0;
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1345>");
	if((t_attrs&1)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1346>");
		if(m__toke==String(L"new",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1347>");
			if((t_attrs&256)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Extern classes cannot have constructors.",40));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1348>");
			t_id=m__toke;
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1349>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1350>");
			t_attrs|=2;
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1351>");
			t_attrs&=-2;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1353>");
			t_id=p_ParseIdent();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1354>");
			t_ty=p_ParseDeclType();
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1357>");
		t_id=p_ParseIdent();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1358>");
		t_ty=p_ParseDeclType();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1361>");
	c_Stack6* t_args=(new c_Stack6)->m_new();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1363>");
	p_Parse(String(L"(",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1364>");
	p_SkipEols();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1365>");
	if(m__toke!=String(L")",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1366>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1367>");
			String t_id2=p_ParseIdent();
			DBG_LOCAL(t_id2,"id")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1368>");
			c_Type* t_ty2=p_ParseDeclType();
			DBG_LOCAL(t_ty2,"ty")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1369>");
			c_Expr* t_init=0;
			DBG_LOCAL(t_init,"init")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1370>");
			if((p_CParse(String(L"=",1)))!=0){
				DBG_BLOCK();
				t_init=p_ParseExpr();
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1371>");
			t_args->p_Push16((new c_ArgDecl)->m_new(t_id2,0,t_ty2,t_init));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1372>");
			if(m__toke==String(L")",1)){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1373>");
			p_Parse(String(L",",1));
		}while(!(false));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1376>");
	p_Parse(String(L")",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1378>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1379>");
		if((p_CParse(String(L"final",5)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1380>");
			if(!((t_attrs&1)!=0)){
				DBG_BLOCK();
				bb_config_Err(String(L"Functions cannot be final.",26));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1381>");
			if((t_attrs&2048)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Duplicate method attribute.",27));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1382>");
			if((t_attrs&1024)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Methods cannot be both final and abstract.",42));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1383>");
			t_attrs|=2048;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1384>");
			if((p_CParse(String(L"abstract",8)))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1385>");
				if(!((t_attrs&1)!=0)){
					DBG_BLOCK();
					bb_config_Err(String(L"Functions cannot be abstract.",29));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1386>");
				if((t_attrs&1024)!=0){
					DBG_BLOCK();
					bb_config_Err(String(L"Duplicate method attribute.",27));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1387>");
				if((t_attrs&2048)!=0){
					DBG_BLOCK();
					bb_config_Err(String(L"Methods cannot be both final and abstract.",42));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1388>");
				t_attrs|=1024;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1389>");
				if((p_CParse(String(L"property",8)))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1390>");
					if(!((t_attrs&1)!=0)){
						DBG_BLOCK();
						bb_config_Err(String(L"Functions cannot be properties.",31));
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1391>");
					if((t_attrs&4)!=0){
						DBG_BLOCK();
						bb_config_Err(String(L"Duplicate method attribute.",27));
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1392>");
					t_attrs|=4;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1394>");
					break;
				}
			}
		}
	}while(!(false));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1398>");
	c_FuncDecl* t_funcDecl=(new c_FuncDecl)->m_new(t_id,t_attrs,t_ty,t_args->p_ToArray());
	DBG_LOCAL(t_funcDecl,"funcDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1400>");
	if(((t_funcDecl->p_IsExtern())!=0) || ((p_CParse(String(L"extern",6)))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1401>");
		t_funcDecl->m_munged=t_funcDecl->m_ident;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1402>");
		if((p_CParse(String(L"=",1)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1403>");
			t_funcDecl->m_munged=p_ParseStringLit();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1405>");
			if(t_funcDecl->m_munged==String(L"$resize",7)){
				DBG_BLOCK();
				gc_assign(t_funcDecl->m_retType,(c_Type::m_emptyArrayType));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1409>");
	if(((t_funcDecl->p_IsExtern())!=0) || ((t_funcDecl->p_IsAbstract())!=0)){
		DBG_BLOCK();
		return t_funcDecl;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1411>");
	p_PushBlock(t_funcDecl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1412>");
	while(m__toke!=String(L"end",3)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1413>");
		p_ParseStmt();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1415>");
	p_PopBlock();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1417>");
	p_NextToke();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1419>");
	if((t_attrs&3)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1420>");
		p_CParse(String(L"method",6));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1422>");
		p_CParse(String(L"function",8));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1425>");
	return t_funcDecl;
}
c_ClassDecl* c_Parser::p_ParseClassDecl(int t_attrs){
	DBG_ENTER("Parser.ParseClassDecl")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1430>");
	p_SetErr();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1431>");
	String t_toke=m__toke;
	DBG_LOCAL(t_toke,"toke")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1433>");
	if((p_CParse(String(L"interface",9)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1434>");
		if((t_attrs&256)!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"Interfaces cannot be extern.",28));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1435>");
		t_attrs|=5120;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1436>");
		if(!((p_CParse(String(L"class",5)))!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1437>");
			bb_config_InternalErr(String(L"Internal error",14));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1440>");
	String t_id=p_ParseIdent();
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1441>");
	c_StringStack* t_args=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1442>");
	c_IdentType* t_superTy=c_Type::m_objectType;
	DBG_LOCAL(t_superTy,"superTy")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1443>");
	c_Stack5* t_imps=(new c_Stack5)->m_new();
	DBG_LOCAL(t_imps,"imps")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1445>");
	if((p_CParse(String(L"<",1)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1446>");
		if((t_attrs&256)!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"Extern classes cannot be generic.",33));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1448>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1449>");
			t_args->p_Push(p_ParseIdent());
		}while(!(!((p_CParse(String(L",",1)))!=0)));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1451>");
		p_Parse(String(L">",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1454>");
	if((p_CParse(String(L"extends",7)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1455>");
		if((p_CParse(String(L"null",4)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1456>");
			if((t_attrs&4096)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Interfaces cannot extend null",29));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1457>");
			if(!((t_attrs&256)!=0)){
				DBG_BLOCK();
				bb_config_Err(String(L"Only extern objects can extend null.",36));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1458>");
			t_superTy=0;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1459>");
			if((t_attrs&4096)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1460>");
				do{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1461>");
					t_imps->p_Push13(p_ParseIdentType());
				}while(!(!((p_CParse(String(L",",1)))!=0)));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1463>");
				t_superTy=c_Type::m_objectType;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1465>");
				t_superTy=p_ParseIdentType();
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1469>");
	if((p_CParse(String(L"implements",10)))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1470>");
		if((t_attrs&256)!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"Implements cannot be used with external classes.",48));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1471>");
		if((t_attrs&4096)!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"Implements cannot be used with interfaces.",42));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1472>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1473>");
			t_imps->p_Push13(p_ParseIdentType());
		}while(!(!((p_CParse(String(L",",1)))!=0)));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1477>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1478>");
		if((p_CParse(String(L"final",5)))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1479>");
			if((t_attrs&4096)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Interfaces cannot be final.",27));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1480>");
			if((t_attrs&2048)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Duplicate class attribute.",26));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1481>");
			if((t_attrs&1024)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Classes cannot be both final and abstract.",42));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1482>");
			t_attrs|=2048;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1483>");
			if((p_CParse(String(L"abstract",8)))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1484>");
				if((t_attrs&4096)!=0){
					DBG_BLOCK();
					bb_config_Err(String(L"Interfaces cannot be abstract.",30));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1485>");
				if((t_attrs&1024)!=0){
					DBG_BLOCK();
					bb_config_Err(String(L"Duplicate class attribute.",26));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1486>");
				if((t_attrs&2048)!=0){
					DBG_BLOCK();
					bb_config_Err(String(L"Classes cannot be both final and abstract.",42));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1487>");
				t_attrs|=1024;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1489>");
				break;
			}
		}
	}while(!(false));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1493>");
	c_ClassDecl* t_classDecl=(new c_ClassDecl)->m_new(t_id,t_attrs,t_args->p_ToArray(),t_superTy,t_imps->p_ToArray());
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1495>");
	if(((t_classDecl->p_IsExtern())!=0) || ((p_CParse(String(L"extern",6)))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1496>");
		t_classDecl->m_munged=t_classDecl->m_ident;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1497>");
		if((p_CParse(String(L"=",1)))!=0){
			DBG_BLOCK();
			t_classDecl->m_munged=p_ParseStringLit();
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1500>");
	int t_decl_attrs=t_attrs&256;
	DBG_LOCAL(t_decl_attrs,"decl_attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1502>");
	int t_func_attrs=0;
	DBG_LOCAL(t_func_attrs,"func_attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1503>");
	if((t_attrs&4096)!=0){
		DBG_BLOCK();
		t_func_attrs|=1024;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1505>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1506>");
		p_SkipEols();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1507>");
		String t_22=m__toke;
		DBG_LOCAL(t_22,"22")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1508>");
		if(t_22==String(L"end",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1509>");
			p_NextToke();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1510>");
			break;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1511>");
			if(t_22==String(L"public",6)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1512>");
				p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1513>");
				t_decl_attrs&=-16897;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1514>");
				if(t_22==String(L"private",7)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1515>");
					p_NextToke();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1516>");
					t_decl_attrs&=-16897;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1517>");
					t_decl_attrs|=512;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1518>");
					if(t_22==String(L"protected",9)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1519>");
						p_NextToke();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1520>");
						t_decl_attrs&=-16897;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1521>");
						t_decl_attrs|=16384;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1522>");
						if(t_22==String(L"const",5) || t_22==String(L"global",6) || t_22==String(L"field",5)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1523>");
							if(((t_attrs&4096)!=0) && m__toke!=String(L"const",5)){
								DBG_BLOCK();
								bb_config_Err(String(L"Interfaces can only contain constants and methods.",50));
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1524>");
							t_classDecl->p_InsertDecls(p_ParseDecls(m__toke,t_decl_attrs));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1525>");
							if(t_22==String(L"method",6)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1526>");
								t_classDecl->p_InsertDecl(p_ParseFuncDecl(t_decl_attrs|t_func_attrs));
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1527>");
								if(t_22==String(L"function",8)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1528>");
									if((t_attrs&4096)!=0){
										DBG_BLOCK();
										bb_config_Err(String(L"Interfaces can only contain constants and methods.",50));
									}
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1529>");
									t_classDecl->p_InsertDecl(p_ParseFuncDecl(t_decl_attrs|t_func_attrs));
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1531>");
									bb_config_Err(String(L"Syntax error - expecting class member declaration.",50));
								}
							}
						}
					}
				}
			}
		}
	}while(!(false));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1535>");
	if((t_toke).Length()!=0){
		DBG_BLOCK();
		p_CParse(t_toke);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1537>");
	return t_classDecl;
}
int c_Parser::p_ParseMain(){
	DBG_ENTER("Parser.ParseMain")
	c_Parser *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1578>");
	p_SkipEols();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1582>");
	if((p_CParse(String(L"strict",6)))!=0){
		DBG_BLOCK();
		m__module->m_attrs|=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1584>");
	int t_attrs=0;
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1587>");
	while((m__toke).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1588>");
		p_SetErr();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1589>");
		String t_23=m__toke;
		DBG_LOCAL(t_23,"23")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1590>");
		if(t_23==String(L"\n",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1591>");
			p_NextToke();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1592>");
			if(t_23==String(L"public",6)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1593>");
				p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1594>");
				t_attrs=0;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1595>");
				if(t_23==String(L"private",7)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1596>");
					p_NextToke();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1597>");
					t_attrs=512;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1598>");
					if(t_23==String(L"protected",9)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1599>");
						bb_config_Err(String(L"Protected may only be used within classes.",42));
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1600>");
						if(t_23==String(L"import",6)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1601>");
							p_NextToke();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1602>");
							if(m__tokeType==6){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1603>");
								p_ImportFile(bb_config_EvalConfigTags(p_ParseStringLit()));
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1605>");
								p_ImportModule(p_ParseModPath(),t_attrs);
							}
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1607>");
							if(t_23==String(L"friend",6)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1608>");
								p_NextToke();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1609>");
								String t_modpath=p_ParseModPath();
								DBG_LOCAL(t_modpath,"modpath")
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1610>");
								m__module->m_friends->p_Insert(t_modpath);
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1611>");
								if(t_23==String(L"alias",5)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1612>");
									p_NextToke();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1613>");
									do{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1614>");
										String t_ident=p_ParseIdent();
										DBG_LOCAL(t_ident,"ident")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1615>");
										p_Parse(String(L"=",1));
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1616>");
										Object* t_decl=0;
										DBG_LOCAL(t_decl,"decl")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1618>");
										String t_24=m__toke;
										DBG_LOCAL(t_24,"24")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1619>");
										if(t_24==String(L"int",3)){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1620>");
											t_decl=(c_Type::m_intType);
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1621>");
											if(t_24==String(L"float",5)){
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1622>");
												t_decl=(c_Type::m_floatType);
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1623>");
												if(t_24==String(L"string",6)){
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1624>");
													t_decl=(c_Type::m_stringType);
												}
											}
										}
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1627>");
										if((t_decl)!=0){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1628>");
											m__module->p_InsertDecl((new c_AliasDecl)->m_new(t_ident,t_attrs,t_decl));
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1629>");
											p_NextToke();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1630>");
											continue;
										}
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1633>");
										c_ScopeDecl* t_scope=(m__module);
										DBG_LOCAL(t_scope,"scope")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1635>");
										bb_decl_PushEnv(m__module);
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1637>");
										do{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1638>");
											String t_id=p_ParseIdent();
											DBG_LOCAL(t_id,"id")
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1639>");
											t_decl=t_scope->p_FindDecl(t_id);
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1640>");
											if(!((t_decl)!=0)){
												DBG_BLOCK();
												bb_config_Err(String(L"Identifier '",12)+t_id+String(L"' not found.",12));
											}
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1641>");
											if(!((p_CParse(String(L".",1)))!=0)){
												DBG_BLOCK();
												break;
											}
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1642>");
											t_scope=dynamic_cast<c_ScopeDecl*>(t_decl);
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1643>");
											if(!((t_scope)!=0) || ((dynamic_cast<c_FuncDecl*>(t_scope))!=0)){
												DBG_BLOCK();
												bb_config_Err(String(L"Invalid scope '",15)+t_id+String(L"'.",2));
											}
										}while(!(false));
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1646>");
										bb_decl_PopEnv();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1648>");
										m__module->p_InsertDecl((new c_AliasDecl)->m_new(t_ident,t_attrs,t_decl));
									}while(!(!((p_CParse(String(L",",1)))!=0)));
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1652>");
									break;
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1657>");
	while((m__toke).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1659>");
		p_SetErr();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1660>");
		String t_25=m__toke;
		DBG_LOCAL(t_25,"25")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1661>");
		if(t_25==String(L"\n",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1662>");
			p_NextToke();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1663>");
			if(t_25==String(L"public",6)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1664>");
				p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1665>");
				t_attrs=0;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1666>");
				if(t_25==String(L"private",7)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1667>");
					p_NextToke();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1668>");
					t_attrs=512;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1669>");
					if(t_25==String(L"extern",6)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1670>");
						if((bb_config_ENV_SAFEMODE)!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1671>");
							if(m__app->m_mainModule==m__module){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1672>");
								bb_config_Err(String(L"Extern not permitted in safe mode.",34));
							}
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1675>");
						p_NextToke();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1676>");
						t_attrs=256;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1677>");
						if((p_CParse(String(L"private",7)))!=0){
							DBG_BLOCK();
							t_attrs|=512;
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1678>");
						if(t_25==String(L"const",5) || t_25==String(L"global",6)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1679>");
							m__module->p_InsertDecls(p_ParseDecls(m__toke,t_attrs));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1680>");
							if(t_25==String(L"class",5)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1681>");
								m__module->p_InsertDecl(p_ParseClassDecl(t_attrs));
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1682>");
								if(t_25==String(L"interface",9)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1683>");
									m__module->p_InsertDecl(p_ParseClassDecl(t_attrs));
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1684>");
									if(t_25==String(L"function",8)){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1685>");
										m__module->p_InsertDecl(p_ParseFuncDecl(t_attrs));
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1687>");
										bb_config_Err(String(L"Syntax error - expecting declaration.",37));
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1692>");
	bb_config__errInfo=String();
	return 0;
}
void c_Parser::mark(){
	Object::mark();
	gc_mark_q(m__toker);
	gc_mark_q(m__app);
	gc_mark_q(m__module);
	gc_mark_q(m__block);
	gc_mark_q(m__blockStack);
	gc_mark_q(m__errStack);
}
String c_Parser::debug(){
	String t="(Parser)\n";
	t+=dbg_decl("_toker",&m__toker);
	t+=dbg_decl("_toke",&m__toke);
	t+=dbg_decl("_tokeType",&m__tokeType);
	t+=dbg_decl("_block",&m__block);
	t+=dbg_decl("_blockStack",&m__blockStack);
	t+=dbg_decl("_errStack",&m__errStack);
	t+=dbg_decl("_selTmpId",&m__selTmpId);
	t+=dbg_decl("_app",&m__app);
	t+=dbg_decl("_module",&m__module);
	t+=dbg_decl("_defattrs",&m__defattrs);
	return t;
}
int bb_config_InternalErr(String t_err){
	DBG_ENTER("InternalErr")
	DBG_LOCAL(t_err,"err")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<125>");
	bbPrint(bb_config__errInfo+String(L" : ",3)+t_err);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<126>");
	bbError(bb_config__errInfo+String(L" : ",3)+t_err);
	return 0;
}
int bb_config_StringToInt(String t_str,int t_base){
	DBG_ENTER("StringToInt")
	DBG_LOCAL(t_str,"str")
	DBG_LOCAL(t_base,"base")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<244>");
	int t_i=0;
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<245>");
	int t_l=t_str.Length();
	DBG_LOCAL(t_l,"l")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<246>");
	while(t_i<t_l && (int)t_str.At(t_i)<=32){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<247>");
		t_i+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<249>");
	bool t_neg=false;
	DBG_LOCAL(t_neg,"neg")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<250>");
	if(t_i<t_l && ((int)t_str.At(t_i)==43 || (int)t_str.At(t_i)==45)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<251>");
		t_neg=(int)t_str.At(t_i)==45;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<252>");
		t_i+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<254>");
	int t_n=0;
	DBG_LOCAL(t_n,"n")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<255>");
	while(t_i<t_l){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<256>");
		int t_c=(int)t_str.At(t_i);
		int t_t=0;
		DBG_LOCAL(t_c,"c")
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<257>");
		if(t_c>=48 && t_c<58){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<258>");
			t_t=t_c-48;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<259>");
			if(t_c>=65 && t_c<=90){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<260>");
				t_t=t_c-55;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<261>");
				if(t_c>=97 && t_c<=122){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<262>");
					t_t=t_c-87;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<264>");
					break;
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<266>");
		if(t_t>=t_base){
			DBG_BLOCK();
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<267>");
		t_n=t_n*t_base+t_t;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<268>");
		t_i+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<270>");
	if(t_neg){
		DBG_BLOCK();
		t_n=-t_n;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<271>");
	return t_n;
}
String bb_config_Dequote(String t_str,String t_lang){
	DBG_ENTER("Dequote")
	DBG_LOCAL(t_str,"str")
	DBG_LOCAL(t_lang,"lang")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<193>");
	String t_4=t_lang;
	DBG_LOCAL(t_4,"4")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<194>");
	if(t_4==String(L"monkey",6)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<195>");
		if(t_str.Length()<2 || !t_str.StartsWith(String(L"\"",1)) || !t_str.EndsWith(String(L"\"",1))){
			DBG_BLOCK();
			bb_config_InternalErr(String(L"Internal error",14));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<196>");
		t_str=t_str.Slice(1,-1);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<197>");
		int t_i=0;
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<198>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<199>");
			t_i=t_str.Find(String(L"~",1),t_i);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<200>");
			if(t_i==-1){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<201>");
			if(t_i+1>=t_str.Length()){
				DBG_BLOCK();
				bb_config_Err(String(L"Invalid escape sequence in string",33));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<202>");
			String t_ch=t_str.Slice(t_i+1,t_i+2);
			DBG_LOCAL(t_ch,"ch")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<203>");
			String t_5=t_ch;
			DBG_LOCAL(t_5,"5")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<204>");
			if(t_5==String(L"~",1)){
				DBG_BLOCK();
				t_ch=String(L"~",1);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<205>");
				if(t_5==String(L"q",1)){
					DBG_BLOCK();
					t_ch=String(L"\"",1);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<206>");
					if(t_5==String(L"n",1)){
						DBG_BLOCK();
						t_ch=String(L"\n",1);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<207>");
						if(t_5==String(L"r",1)){
							DBG_BLOCK();
							t_ch=String(L"\r",1);
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<208>");
							if(t_5==String(L"t",1)){
								DBG_BLOCK();
								t_ch=String(L"\t",1);
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<209>");
								if(t_5==String(L"u",1)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<210>");
									String t_t=t_str.Slice(t_i+2,t_i+6);
									DBG_LOCAL(t_t,"t")
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<211>");
									if(t_t.Length()!=4){
										DBG_BLOCK();
										bb_config_Err(String(L"Invalid unicode hex value in string",35));
									}
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<212>");
									for(int t_j=0;t_j<4;t_j=t_j+1){
										DBG_BLOCK();
										DBG_LOCAL(t_j,"j")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<213>");
										if(!((bb_config_IsHexDigit((int)t_t.At(t_j)))!=0)){
											DBG_BLOCK();
											bb_config_Err(String(L"Invalid unicode hex digit in string",35));
										}
									}
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<215>");
									t_str=t_str.Slice(0,t_i)+String((Char)(bb_config_StringToInt(t_t,16)),1)+t_str.Slice(t_i+6);
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<216>");
									t_i+=1;
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<217>");
									continue;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<218>");
									if(t_5==String(L"0",1)){
										DBG_BLOCK();
										t_ch=String((Char)(0),1);
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<220>");
										bb_config_Err(String(L"Invalid escape character in string: '",37)+t_ch+String(L"'",1));
									}
								}
							}
						}
					}
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<222>");
			t_str=t_str.Slice(0,t_i)+t_ch+t_str.Slice(t_i+2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<223>");
			t_i+=t_ch.Length();
		}while(!(false));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<225>");
		return t_str;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<227>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String bb_config_EvalConfigTags(String t_cfg){
	DBG_ENTER("EvalConfigTags")
	DBG_LOCAL(t_cfg,"cfg")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<87>");
	int t_i=0;
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<88>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<90>");
		t_i=t_cfg.Find(String(L"${",2),0);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<91>");
		if(t_i==-1){
			DBG_BLOCK();
			return t_cfg;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<93>");
		int t_e=t_cfg.Find(String(L"}",1),t_i+2);
		DBG_LOCAL(t_e,"e")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<94>");
		if(t_e==-1){
			DBG_BLOCK();
			return t_cfg;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<96>");
		String t_key=t_cfg.Slice(t_i+2,t_e);
		DBG_LOCAL(t_key,"key")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<97>");
		String t_val=bb_config__cfgScope->m_vars->p_Get(t_key);
		DBG_LOCAL(t_val,"val")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<99>");
		t_cfg=t_cfg.Slice(0,t_i)+t_val+t_cfg.Slice(t_e+1);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<100>");
		t_i+=t_val.Length();
	}while(!(false));
}
int bb_config_ENV_SAFEMODE;
c_NumericType::c_NumericType(){
}
c_NumericType* c_NumericType::m_new(){
	DBG_ENTER("NumericType.new")
	c_NumericType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<89>");
	c_Type::m_new();
	return this;
}
void c_NumericType::mark(){
	c_Type::mark();
}
String c_NumericType::debug(){
	String t="(NumericType)\n";
	t=c_Type::debug()+t;
	return t;
}
c_IntType::c_IntType(){
}
c_IntType* c_IntType::m_new(){
	DBG_ENTER("IntType.new")
	c_IntType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<93>");
	c_NumericType::m_new();
	return this;
}
int c_IntType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("IntType.EqualsType")
	c_IntType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<96>");
	int t_=((dynamic_cast<c_IntType*>(t_ty)!=0)?1:0);
	return t_;
}
int c_IntType::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("IntType.ExtendsType")
	c_IntType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<100>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<101>");
		c_Expr* t_expr=((new c_ConstExpr)->m_new((this),String()))->p_Semant();
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<102>");
		c_Expr* t_[]={t_expr};
		c_FuncDecl* t_ctor=t_ty->p_GetClass()->p_FindFuncDecl(String(L"new",3),Array<c_Expr* >(t_,1),1);
		DBG_LOCAL(t_ctor,"ctor")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<103>");
		int t_2=((((t_ctor)!=0) && t_ctor->p_IsCtor())?1:0);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<105>");
	int t_3=((dynamic_cast<c_NumericType*>(t_ty)!=0 || dynamic_cast<c_StringType*>(t_ty)!=0)?1:0);
	return t_3;
}
c_ClassDecl* c_IntType::p_GetClass(){
	DBG_ENTER("IntType.GetClass")
	c_IntType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<109>");
	c_ClassDecl* t_=dynamic_cast<c_ClassDecl*>(bb_decl__env->p_FindDecl(String(L"int",3)));
	return t_;
}
String c_IntType::p_ToString(){
	DBG_ENTER("IntType.ToString")
	c_IntType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<113>");
	return String(L"Int",3);
}
void c_IntType::mark(){
	c_NumericType::mark();
}
String c_IntType::debug(){
	String t="(IntType)\n";
	t=c_NumericType::debug()+t;
	return t;
}
c_FloatType::c_FloatType(){
}
c_FloatType* c_FloatType::m_new(){
	DBG_ENTER("FloatType.new")
	c_FloatType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<117>");
	c_NumericType::m_new();
	return this;
}
int c_FloatType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("FloatType.EqualsType")
	c_FloatType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<120>");
	int t_=((dynamic_cast<c_FloatType*>(t_ty)!=0)?1:0);
	return t_;
}
int c_FloatType::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("FloatType.ExtendsType")
	c_FloatType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<124>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<125>");
		c_Expr* t_expr=((new c_ConstExpr)->m_new((this),String()))->p_Semant();
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<126>");
		c_Expr* t_[]={t_expr};
		c_FuncDecl* t_ctor=t_ty->p_GetClass()->p_FindFuncDecl(String(L"new",3),Array<c_Expr* >(t_,1),1);
		DBG_LOCAL(t_ctor,"ctor")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<127>");
		int t_2=((((t_ctor)!=0) && t_ctor->p_IsCtor())?1:0);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<129>");
	int t_3=((dynamic_cast<c_NumericType*>(t_ty)!=0 || dynamic_cast<c_StringType*>(t_ty)!=0)?1:0);
	return t_3;
}
c_ClassDecl* c_FloatType::p_GetClass(){
	DBG_ENTER("FloatType.GetClass")
	c_FloatType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<133>");
	c_ClassDecl* t_=dynamic_cast<c_ClassDecl*>(bb_decl__env->p_FindDecl(String(L"float",5)));
	return t_;
}
String c_FloatType::p_ToString(){
	DBG_ENTER("FloatType.ToString")
	c_FloatType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<137>");
	return String(L"Float",5);
}
void c_FloatType::mark(){
	c_NumericType::mark();
}
String c_FloatType::debug(){
	String t="(FloatType)\n";
	t=c_NumericType::debug()+t;
	return t;
}
c_AliasDecl::c_AliasDecl(){
	m_decl=0;
}
c_AliasDecl* c_AliasDecl::m_new(String t_ident,int t_attrs,Object* t_decl){
	DBG_ENTER("AliasDecl.new")
	c_AliasDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<354>");
	c_Decl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<355>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<356>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<357>");
	gc_assign(this->m_decl,t_decl);
	return this;
}
c_AliasDecl* c_AliasDecl::m_new2(){
	DBG_ENTER("AliasDecl.new")
	c_AliasDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<350>");
	c_Decl::m_new();
	return this;
}
c_Decl* c_AliasDecl::p_OnCopy(){
	DBG_ENTER("AliasDecl.OnCopy")
	c_AliasDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<361>");
	c_Decl* t_=((new c_AliasDecl)->m_new(m_ident,m_attrs,m_decl));
	return t_;
}
int c_AliasDecl::p_OnSemant(){
	DBG_ENTER("AliasDecl.OnSemant")
	c_AliasDecl *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
void c_AliasDecl::mark(){
	c_Decl::mark();
	gc_mark_q(m_decl);
}
String c_AliasDecl::debug(){
	String t="(AliasDecl)\n";
	t=c_Decl::debug()+t;
	t+=dbg_decl("decl",&m_decl);
	return t;
}
c_List3::c_List3(){
	m__head=((new c_HeadNode3)->m_new());
}
c_List3* c_List3::m_new(){
	DBG_ENTER("List.new")
	c_List3 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node8* c_List3::p_AddLast3(c_Decl* t_data){
	DBG_ENTER("List.AddLast")
	c_List3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node8* t_=(new c_Node8)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List3* c_List3::m_new2(Array<c_Decl* > t_data){
	DBG_ENTER("List.new")
	c_List3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_Decl* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Decl* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast3(t_t);
	}
	return this;
}
c_Enumerator2* c_List3::p_ObjectEnumerator(){
	DBG_ENTER("List.ObjectEnumerator")
	c_List3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<186>");
	c_Enumerator2* t_=(new c_Enumerator2)->m_new(this);
	return t_;
}
int c_List3::p_Count(){
	DBG_ENTER("List.Count")
	c_List3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<41>");
	int t_n=0;
	c_Node8* t_node=m__head->m__succ;
	DBG_LOCAL(t_n,"n")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<42>");
	while(t_node!=m__head){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<43>");
		t_node=t_node->m__succ;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<44>");
		t_n+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<46>");
	return t_n;
}
void c_List3::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List3::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_Node8::c_Node8(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node8* c_Node8::m_new(c_Node8* t_succ,c_Node8* t_pred,c_Decl* t_data){
	DBG_ENTER("Node.new")
	c_Node8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node8* c_Node8::m_new2(){
	DBG_ENTER("Node.new")
	c_Node8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
void c_Node8::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node8::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode3::c_HeadNode3(){
}
c_HeadNode3* c_HeadNode3::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node8::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode3::mark(){
	c_Node8::mark();
}
String c_HeadNode3::debug(){
	String t="(HeadNode)\n";
	t=c_Node8::debug()+t;
	return t;
}
c_BlockDecl::c_BlockDecl(){
	m_stmts=(new c_List5)->m_new();
}
c_BlockDecl* c_BlockDecl::m_new(c_ScopeDecl* t_scope){
	DBG_ENTER("BlockDecl.new")
	c_BlockDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<640>");
	c_ScopeDecl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<641>");
	gc_assign(this->m_scope,t_scope);
	return this;
}
c_BlockDecl* c_BlockDecl::m_new2(){
	DBG_ENTER("BlockDecl.new")
	c_BlockDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<637>");
	c_ScopeDecl::m_new();
	return this;
}
int c_BlockDecl::p_AddStmt(c_Stmt* t_stmt){
	DBG_ENTER("BlockDecl.AddStmt")
	c_BlockDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<646>");
	m_stmts->p_AddLast5(t_stmt);
	return 0;
}
c_Decl* c_BlockDecl::p_OnCopy(){
	DBG_ENTER("BlockDecl.OnCopy")
	c_BlockDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<650>");
	c_BlockDecl* t_t=(new c_BlockDecl)->m_new2();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<651>");
	c_Enumerator5* t_=m_stmts->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Stmt* t_stmt=t_->p_NextObject();
		DBG_LOCAL(t_stmt,"stmt")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<652>");
		t_t->p_AddStmt(t_stmt->p_Copy2(t_t));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<654>");
	c_Decl* t_2=(t_t);
	return t_2;
}
int c_BlockDecl::p_OnSemant(){
	DBG_ENTER("BlockDecl.OnSemant")
	c_BlockDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<658>");
	bb_decl_PushEnv(this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<659>");
	c_Enumerator5* t_=m_stmts->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Stmt* t_stmt=t_->p_NextObject();
		DBG_LOCAL(t_stmt,"stmt")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<660>");
		t_stmt->p_Semant();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<662>");
	bb_decl_PopEnv();
	return 0;
}
c_BlockDecl* c_BlockDecl::p_CopyBlock(c_ScopeDecl* t_scope){
	DBG_ENTER("BlockDecl.CopyBlock")
	c_BlockDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<666>");
	c_BlockDecl* t_t=dynamic_cast<c_BlockDecl*>(p_Copy());
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<667>");
	gc_assign(t_t->m_scope,t_scope);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<668>");
	return t_t;
}
void c_BlockDecl::mark(){
	c_ScopeDecl::mark();
	gc_mark_q(m_stmts);
}
String c_BlockDecl::debug(){
	String t="(BlockDecl)\n";
	t=c_ScopeDecl::debug()+t;
	t+=dbg_decl("stmts",&m_stmts);
	return t;
}
c_FuncDecl::c_FuncDecl(){
	m_retType=0;
	m_argDecls=Array<c_ArgDecl* >();
	m_overrides=0;
}
bool c_FuncDecl::p_IsCtor(){
	DBG_ENTER("FuncDecl.IsCtor")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<791>");
	bool t_=(m_attrs&2)!=0;
	return t_;
}
c_FuncDecl* c_FuncDecl::m_new(String t_ident,int t_attrs,c_Type* t_retType,Array<c_ArgDecl* > t_argDecls){
	DBG_ENTER("FuncDecl.new")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_retType,"retType")
	DBG_LOCAL(t_argDecls,"argDecls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<688>");
	c_BlockDecl::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<689>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<690>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<691>");
	gc_assign(this->m_retType,t_retType);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<692>");
	gc_assign(this->m_argDecls,t_argDecls);
	return this;
}
c_FuncDecl* c_FuncDecl::m_new2(){
	DBG_ENTER("FuncDecl.new")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<681>");
	c_BlockDecl::m_new2();
	return this;
}
bool c_FuncDecl::p_IsMethod(){
	DBG_ENTER("FuncDecl.IsMethod")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<795>");
	bool t_=(m_attrs&1)!=0;
	return t_;
}
String c_FuncDecl::p_ToString(){
	DBG_ENTER("FuncDecl.ToString")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<774>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<775>");
	Array<c_ArgDecl* > t_=m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_decl=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<776>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<777>");
		t_t=t_t+t_decl->p_ToString();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<779>");
	String t_q=String();
	DBG_LOCAL(t_q,"q")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<780>");
	if(p_IsCtor()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<781>");
		t_q=String(L"Method ",7)+c_Decl::p_ToString();
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<783>");
		if(p_IsMethod()){
			DBG_BLOCK();
			t_q=String(L"Method ",7);
		}else{
			DBG_BLOCK();
			t_q=String(L"Function ",9);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<784>");
		t_q=t_q+(c_Decl::p_ToString()+String(L":",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<785>");
		t_q=t_q+m_retType->p_ToString();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<787>");
	String t_3=t_q+String(L"(",1)+t_t+String(L")",1);
	return t_3;
}
bool c_FuncDecl::p_EqualsArgs(c_FuncDecl* t_decl){
	DBG_ENTER("FuncDecl.EqualsArgs")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<812>");
	if(m_argDecls.Length()!=t_decl->m_argDecls.Length()){
		DBG_BLOCK();
		return false;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<813>");
	for(int t_i=0;t_i<m_argDecls.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<814>");
		if(!((m_argDecls.At(t_i)->m_type->p_EqualsType(t_decl->m_argDecls.At(t_i)->m_type))!=0)){
			DBG_BLOCK();
			return false;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<816>");
	return true;
}
bool c_FuncDecl::p_EqualsFunc(c_FuncDecl* t_decl){
	DBG_ENTER("FuncDecl.EqualsFunc")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<820>");
	bool t_=((m_retType->p_EqualsType(t_decl->m_retType))!=0) && p_EqualsArgs(t_decl);
	return t_;
}
c_Decl* c_FuncDecl::p_OnCopy(){
	DBG_ENTER("FuncDecl.OnCopy")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<696>");
	Array<c_ArgDecl* > t_args=m_argDecls.Slice(0);
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<697>");
	for(int t_i=0;t_i<t_args.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<698>");
		gc_assign(t_args.At(t_i),dynamic_cast<c_ArgDecl*>(t_args.At(t_i)->p_Copy()));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<700>");
	c_FuncDecl* t_t=(new c_FuncDecl)->m_new(m_ident,m_attrs,m_retType,t_args);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<701>");
	c_Enumerator5* t_=m_stmts->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Stmt* t_stmt=t_->p_NextObject();
		DBG_LOCAL(t_stmt,"stmt")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<702>");
		t_t->p_AddStmt(t_stmt->p_Copy2(t_t));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<704>");
	c_Decl* t_2=(t_t);
	return t_2;
}
int c_FuncDecl::p_OnSemant(){
	DBG_ENTER("FuncDecl.OnSemant")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<710>");
	c_ClassDecl* t_cdecl=p_ClassScope();
	c_ClassDecl* t_sclass=0;
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_LOCAL(t_sclass,"sclass")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<712>");
	if((t_cdecl)!=0){
		DBG_BLOCK();
		t_sclass=t_cdecl->m_superClass;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<715>");
	if(p_IsCtor()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<716>");
		gc_assign(m_retType,(t_cdecl->m_objectType));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<718>");
		gc_assign(m_retType,m_retType->p_Semant());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<722>");
	Array<c_ArgDecl* > t_=m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<723>");
		p_InsertDecl(t_arg);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<724>");
		t_arg->p_Semant();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<728>");
	c_Enumerator3* t_3=m_scope->p_SemantedFuncs(m_ident)->p_ObjectEnumerator();
	while(t_3->p_HasNext()){
		DBG_BLOCK();
		c_FuncDecl* t_decl=t_3->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<729>");
		if(t_decl!=this && p_EqualsArgs(t_decl)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<730>");
			bb_config_Err(String(L"Duplicate declaration ",22)+p_ToString());
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<735>");
	if(p_IsCtor() && !((m_attrs&8)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<736>");
		if((t_sclass->p_FindFuncDecl(String(L"new",3),Array<c_Expr* >(),0))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<737>");
			c_InvokeSuperExpr* t_expr=(new c_InvokeSuperExpr)->m_new(String(L"new",3),Array<c_Expr* >());
			DBG_LOCAL(t_expr,"expr")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<738>");
			m_stmts->p_AddFirst((new c_ExprStmt)->m_new(t_expr));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<743>");
	if(((t_sclass)!=0) && p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<744>");
		while((t_sclass)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<745>");
			int t_found=0;
			DBG_LOCAL(t_found,"found")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<746>");
			c_Enumerator3* t_4=t_sclass->p_MethodDecls(m_ident)->p_ObjectEnumerator();
			while(t_4->p_HasNext()){
				DBG_BLOCK();
				c_FuncDecl* t_decl2=t_4->p_NextObject();
				DBG_LOCAL(t_decl2,"decl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<747>");
				t_found=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<748>");
				t_decl2->p_Semant();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<749>");
				if(p_EqualsFunc(t_decl2)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<750>");
					gc_assign(m_overrides,t_decl2);
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<751>");
					t_decl2->m_attrs|=16;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<752>");
					break;
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<755>");
			if((t_found)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<756>");
				if(!((m_overrides)!=0)){
					DBG_BLOCK();
					bb_config_Err(String(L"Overriding method does not match any overridden method.",55));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<757>");
				if((m_overrides->p_IsFinal())!=0){
					DBG_BLOCK();
					bb_config_Err(String(L"Cannot override final method.",29));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<758>");
				if((m_overrides->m_munged).Length()!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<759>");
					if(((m_munged).Length()!=0) && m_munged!=m_overrides->m_munged){
						DBG_BLOCK();
						bb_config_InternalErr(String(L"Internal error",14));
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<760>");
					m_munged=m_overrides->m_munged;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<762>");
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<764>");
			t_sclass=t_sclass->m_superClass;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<768>");
	m_attrs|=1048576;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<770>");
	c_BlockDecl::p_OnSemant();
	return 0;
}
bool c_FuncDecl::p_IsStatic(){
	DBG_ENTER("FuncDecl.IsStatic")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<808>");
	bool t_=(m_attrs&3)==0;
	return t_;
}
bool c_FuncDecl::p_IsProperty(){
	DBG_ENTER("FuncDecl.IsProperty")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<799>");
	bool t_=(m_attrs&4)!=0;
	return t_;
}
bool c_FuncDecl::p_IsVirtual(){
	DBG_ENTER("FuncDecl.IsVirtual")
	c_FuncDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<803>");
	bool t_=(m_attrs&1040)!=0;
	return t_;
}
void c_FuncDecl::mark(){
	c_BlockDecl::mark();
	gc_mark_q(m_retType);
	gc_mark_q(m_argDecls);
	gc_mark_q(m_overrides);
}
String c_FuncDecl::debug(){
	String t="(FuncDecl)\n";
	t=c_BlockDecl::debug()+t;
	t+=dbg_decl("retType",&m_retType);
	t+=dbg_decl("argDecls",&m_argDecls);
	t+=dbg_decl("overrides",&m_overrides);
	return t;
}
c_List4::c_List4(){
	m__head=((new c_HeadNode4)->m_new());
}
c_List4* c_List4::m_new(){
	DBG_ENTER("List.new")
	c_List4 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node9* c_List4::p_AddLast4(c_FuncDecl* t_data){
	DBG_ENTER("List.AddLast")
	c_List4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node9* t_=(new c_Node9)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List4* c_List4::m_new2(Array<c_FuncDecl* > t_data){
	DBG_ENTER("List.new")
	c_List4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_FuncDecl* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_FuncDecl* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast4(t_t);
	}
	return this;
}
c_Enumerator3* c_List4::p_ObjectEnumerator(){
	DBG_ENTER("List.ObjectEnumerator")
	c_List4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<186>");
	c_Enumerator3* t_=(new c_Enumerator3)->m_new(this);
	return t_;
}
void c_List4::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List4::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_FuncDeclList::c_FuncDeclList(){
}
c_FuncDeclList* c_FuncDeclList::m_new(){
	DBG_ENTER("FuncDeclList.new")
	c_FuncDeclList *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<39>");
	c_List4::m_new();
	return this;
}
void c_FuncDeclList::mark(){
	c_List4::mark();
}
String c_FuncDeclList::debug(){
	String t="(FuncDeclList)\n";
	t=c_List4::debug()+t;
	return t;
}
c_Node9::c_Node9(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node9* c_Node9::m_new(c_Node9* t_succ,c_Node9* t_pred,c_FuncDecl* t_data){
	DBG_ENTER("Node.new")
	c_Node9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node9* c_Node9::m_new2(){
	DBG_ENTER("Node.new")
	c_Node9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
void c_Node9::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node9::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode4::c_HeadNode4(){
}
c_HeadNode4* c_HeadNode4::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node9::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode4::mark(){
	c_Node9::mark();
}
String c_HeadNode4::debug(){
	String t="(HeadNode)\n";
	t=c_Node9::debug()+t;
	return t;
}
c_ClassDecl::c_ClassDecl(){
	m_superClass=0;
	m_args=Array<String >();
	m_superTy=0;
	m_impltys=Array<c_IdentType* >();
	m_objectType=0;
	m_instances=0;
	m_instanceof=0;
	m_instArgs=Array<c_Type* >();
	m_implmentsAll=Array<c_ClassDecl* >();
	m_implments=Array<c_ClassDecl* >();
}
c_ClassDecl* c_ClassDecl::m_new(String t_ident,int t_attrs,Array<String > t_args,c_IdentType* t_superTy,Array<c_IdentType* > t_impls){
	DBG_ENTER("ClassDecl.new")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_superTy,"superTy")
	DBG_LOCAL(t_impls,"impls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<849>");
	c_ScopeDecl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<850>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<851>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<852>");
	gc_assign(this->m_args,t_args);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<853>");
	gc_assign(this->m_superTy,t_superTy);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<854>");
	gc_assign(this->m_impltys,t_impls);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<855>");
	gc_assign(this->m_objectType,(new c_ObjectType)->m_new(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<856>");
	if((t_args).Length()!=0){
		DBG_BLOCK();
		gc_assign(m_instances,(new c_List6)->m_new());
	}
	return this;
}
c_ClassDecl* c_ClassDecl::m_new2(){
	DBG_ENTER("ClassDecl.new")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<830>");
	c_ScopeDecl::m_new();
	return this;
}
int c_ClassDecl::p_IsInterface(){
	DBG_ENTER("ClassDecl.IsInterface")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<928>");
	int t_=(((m_attrs&4096)!=0)?1:0);
	return t_;
}
String c_ClassDecl::p_ToString(){
	DBG_ENTER("ClassDecl.ToString")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<864>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<865>");
	if((m_args).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<866>");
		t_t=String(L",",1).Join(m_args);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<867>");
		if((m_instArgs).Length()!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<868>");
			Array<c_Type* > t_=m_instArgs;
			int t_2=0;
			while(t_2<t_.Length()){
				DBG_BLOCK();
				c_Type* t_arg=t_.At(t_2);
				t_2=t_2+1;
				DBG_LOCAL(t_arg,"arg")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<869>");
				if((t_t).Length()!=0){
					DBG_BLOCK();
					t_t=t_t+String(L",",1);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<870>");
				t_t=t_t+t_arg->p_ToString();
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<873>");
	if((t_t).Length()!=0){
		DBG_BLOCK();
		t_t=String(L"<",1)+t_t+String(L">",1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<874>");
	String t_3=m_ident+t_t;
	return t_3;
}
c_FuncDecl* c_ClassDecl::p_FindFuncDecl2(String t_ident,Array<c_Expr* > t_args,int t_explicit){
	DBG_ENTER("ClassDecl.FindFuncDecl2")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_explicit,"explicit")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<999>");
	c_FuncDecl* t_=c_ScopeDecl::p_FindFuncDecl(t_ident,t_args,t_explicit);
	return t_;
}
c_FuncDecl* c_ClassDecl::p_FindFuncDecl(String t_ident,Array<c_Expr* > t_args,int t_explicit){
	DBG_ENTER("ClassDecl.FindFuncDecl")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_explicit,"explicit")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<963>");
	if(!((p_IsInterface())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<964>");
		c_FuncDecl* t_=p_FindFuncDecl2(t_ident,t_args,t_explicit);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<967>");
	c_FuncDecl* t_fdecl=p_FindFuncDecl2(t_ident,t_args,1);
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<969>");
	Array<c_ClassDecl* > t_2=m_implmentsAll;
	int t_3=0;
	while(t_3<t_2.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_iface=t_2.At(t_3);
		t_3=t_3+1;
		DBG_LOCAL(t_iface,"iface")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<970>");
		c_FuncDecl* t_decl=t_iface->p_FindFuncDecl2(t_ident,t_args,1);
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<971>");
		if(!((t_decl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<973>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<974>");
			if(t_fdecl->p_EqualsFunc(t_decl)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<975>");
			bb_config_Err(String(L"Unable to determine overload to use: ",37)+t_fdecl->p_ToString()+String(L" or ",4)+t_decl->p_ToString()+String(L".",1));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<977>");
		t_fdecl=t_decl;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<980>");
	if(((t_fdecl)!=0) || ((t_explicit)!=0)){
		DBG_BLOCK();
		return t_fdecl;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<982>");
	t_fdecl=p_FindFuncDecl2(t_ident,t_args,0);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<984>");
	Array<c_ClassDecl* > t_4=m_implmentsAll;
	int t_5=0;
	while(t_5<t_4.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_iface2=t_4.At(t_5);
		t_5=t_5+1;
		DBG_LOCAL(t_iface2,"iface")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<985>");
		c_FuncDecl* t_decl2=t_iface2->p_FindFuncDecl2(t_ident,t_args,0);
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<986>");
		if(!((t_decl2)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<988>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<989>");
			if(t_fdecl->p_EqualsFunc(t_decl2)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<990>");
			bb_config_Err(String(L"Unable to determine overload to use: ",37)+t_fdecl->p_ToString()+String(L" or ",4)+t_decl2->p_ToString()+String(L".",1));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<992>");
		t_fdecl=t_decl2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<995>");
	return t_fdecl;
}
int c_ClassDecl::p_ExtendsObject(){
	DBG_ENTER("ClassDecl.ExtendsObject")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<944>");
	int t_=(((m_attrs&2)!=0)?1:0);
	return t_;
}
c_ClassDecl* c_ClassDecl::p_GenClassInstance(Array<c_Type* > t_instArgs){
	DBG_ENTER("ClassDecl.GenClassInstance")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_instArgs,"instArgs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<879>");
	if((m_instanceof)!=0){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<882>");
	if(!((t_instArgs).Length()!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<883>");
		if(!((m_args).Length()!=0)){
			DBG_BLOCK();
			return this;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<884>");
		c_Enumerator4* t_=m_instances->p_ObjectEnumerator();
		while(t_->p_HasNext()){
			DBG_BLOCK();
			c_ClassDecl* t_inst=t_->p_NextObject();
			DBG_LOCAL(t_inst,"inst")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<885>");
			if(bb_decl__env->p_ClassScope()==t_inst){
				DBG_BLOCK();
				return t_inst;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<890>");
	if(m_args.Length()!=t_instArgs.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<891>");
		bb_config_Err(String(L"Wrong number of type arguments for class ",41)+p_ToString());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<895>");
	c_Enumerator4* t_2=m_instances->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_ClassDecl* t_inst2=t_2->p_NextObject();
		DBG_LOCAL(t_inst2,"inst")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<896>");
		int t_equal=1;
		DBG_LOCAL(t_equal,"equal")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<897>");
		for(int t_i=0;t_i<m_args.Length();t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<898>");
			if(!((t_inst2->m_instArgs.At(t_i)->p_EqualsType(t_instArgs.At(t_i)))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<899>");
				t_equal=0;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<900>");
				break;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<903>");
		if((t_equal)!=0){
			DBG_BLOCK();
			return t_inst2;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<906>");
	c_ClassDecl* t_inst3=(new c_ClassDecl)->m_new(m_ident,m_attrs,Array<String >(),m_superTy,m_impltys);
	DBG_LOCAL(t_inst3,"inst")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<908>");
	t_inst3->m_attrs&=-1048577;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<909>");
	t_inst3->m_munged=m_munged;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<910>");
	t_inst3->m_errInfo=m_errInfo;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<911>");
	gc_assign(t_inst3->m_scope,m_scope);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<912>");
	gc_assign(t_inst3->m_instanceof,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<913>");
	gc_assign(t_inst3->m_instArgs,t_instArgs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<914>");
	m_instances->p_AddLast6(t_inst3);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<916>");
	for(int t_i2=0;t_i2<m_args.Length();t_i2=t_i2+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i2,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<917>");
		t_inst3->p_InsertDecl((new c_AliasDecl)->m_new(m_args.At(t_i2),0,(t_instArgs.At(t_i2))));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<920>");
	c_Enumerator2* t_3=m_decls->p_ObjectEnumerator();
	while(t_3->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_3->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<921>");
		t_inst3->p_InsertDecl(t_decl->p_Copy());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<924>");
	return t_inst3;
}
int c_ClassDecl::p_IsFinalized(){
	DBG_ENTER("ClassDecl.IsFinalized")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<936>");
	int t_=(((m_attrs&4)!=0)?1:0);
	return t_;
}
int c_ClassDecl::p_UpdateLiveMethods(){
	DBG_ENTER("ClassDecl.UpdateLiveMethods")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1113>");
	if((p_IsFinalized())!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1115>");
	if((p_IsInterface())!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1117>");
	if(!((m_superClass)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1119>");
	int t_n=0;
	DBG_LOCAL(t_n,"n")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1120>");
	c_Enumerator3* t_=p_MethodDecls(String())->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_FuncDecl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1121>");
		if((t_decl->p_IsSemanted())!=0){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1123>");
		int t_live=0;
		DBG_LOCAL(t_live,"live")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1124>");
		c_List4* t_unsem=(new c_List4)->m_new();
		DBG_LOCAL(t_unsem,"unsem")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1126>");
		t_unsem->p_AddLast4(t_decl);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1128>");
		c_ClassDecl* t_sclass=m_superClass;
		DBG_LOCAL(t_sclass,"sclass")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1129>");
		while((t_sclass)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1130>");
			c_Enumerator3* t_2=t_sclass->p_MethodDecls(t_decl->m_ident)->p_ObjectEnumerator();
			while(t_2->p_HasNext()){
				DBG_BLOCK();
				c_FuncDecl* t_decl2=t_2->p_NextObject();
				DBG_LOCAL(t_decl2,"decl2")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1131>");
				if((t_decl2->p_IsSemanted())!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1132>");
					t_live=1;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1134>");
					t_unsem->p_AddLast4(t_decl2);
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1135>");
					if((t_decl2->p_IsExtern())!=0){
						DBG_BLOCK();
						t_live=1;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1136>");
					if((t_decl2->p_IsSemanted())!=0){
						DBG_BLOCK();
						t_live=1;
					}
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1139>");
			t_sclass=t_sclass->m_superClass;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1142>");
		if(!((t_live)!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1143>");
			c_ClassDecl* t_cdecl=this;
			DBG_LOCAL(t_cdecl,"cdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1144>");
			while((t_cdecl)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1145>");
				Array<c_ClassDecl* > t_3=t_cdecl->m_implmentsAll;
				int t_4=0;
				while(t_4<t_3.Length()){
					DBG_BLOCK();
					c_ClassDecl* t_iface=t_3.At(t_4);
					t_4=t_4+1;
					DBG_LOCAL(t_iface,"iface")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1146>");
					c_Enumerator3* t_5=t_iface->p_MethodDecls(t_decl->m_ident)->p_ObjectEnumerator();
					while(t_5->p_HasNext()){
						DBG_BLOCK();
						c_FuncDecl* t_decl22=t_5->p_NextObject();
						DBG_LOCAL(t_decl22,"decl2")
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1147>");
						if((t_decl22->p_IsSemanted())!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1148>");
							t_live=1;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1150>");
							t_unsem->p_AddLast4(t_decl22);
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1151>");
							if((t_decl22->p_IsExtern())!=0){
								DBG_BLOCK();
								t_live=1;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1152>");
							if((t_decl22->p_IsSemanted())!=0){
								DBG_BLOCK();
								t_live=1;
							}
						}
					}
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1156>");
				t_cdecl=t_cdecl->m_superClass;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1160>");
		if(!((t_live)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1162>");
		c_Enumerator3* t_6=t_unsem->p_ObjectEnumerator();
		while(t_6->p_HasNext()){
			DBG_BLOCK();
			c_FuncDecl* t_decl3=t_6->p_NextObject();
			DBG_LOCAL(t_decl3,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1163>");
			t_decl3->p_Semant();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1164>");
			t_n+=1;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1168>");
	return t_n;
}
int c_ClassDecl::p_IsInstanced(){
	DBG_ENTER("ClassDecl.IsInstanced")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<932>");
	int t_=(((m_attrs&1)!=0)?1:0);
	return t_;
}
int c_ClassDecl::p_FinalizeClass(){
	DBG_ENTER("ClassDecl.FinalizeClass")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1173>");
	if((p_IsFinalized())!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1175>");
	m_attrs|=4;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1177>");
	if((p_IsInterface())!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1179>");
	bb_config_PushErr(m_errInfo);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1183>");
	c_Enumerator2* t_=p_Semanted()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1184>");
		c_FieldDecl* t_fdecl=dynamic_cast<c_FieldDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1185>");
		if(!((t_fdecl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1186>");
		c_ClassDecl* t_cdecl=m_superClass;
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1187>");
		while((t_cdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1188>");
			c_Enumerator2* t_2=t_cdecl->p_Semanted()->p_ObjectEnumerator();
			while(t_2->p_HasNext()){
				DBG_BLOCK();
				c_Decl* t_decl2=t_2->p_NextObject();
				DBG_LOCAL(t_decl2,"decl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1189>");
				if(t_decl2->m_ident==t_fdecl->m_ident){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1190>");
					bb_config__errInfo=t_fdecl->m_errInfo;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1191>");
					bb_config_Err(String(L"Field '",7)+t_fdecl->m_ident+String(L"' in class ",11)+p_ToString()+String(L" overrides existing declaration in class ",41)+t_cdecl->p_ToString());
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1194>");
			t_cdecl=t_cdecl->m_superClass;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1200>");
	if((p_IsAbstract())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1201>");
		if((p_IsInstanced())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1202>");
			bb_config_Err(String(L"Can't create instance of abstract class ",40)+p_ToString()+String(L".",1));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1205>");
		c_ClassDecl* t_cdecl2=this;
		DBG_LOCAL(t_cdecl2,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1206>");
		c_List4* t_impls=(new c_List4)->m_new();
		DBG_LOCAL(t_impls,"impls")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1207>");
		while(((t_cdecl2)!=0) && !((p_IsAbstract())!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1208>");
			c_Enumerator3* t_3=t_cdecl2->p_SemantedMethods(String())->p_ObjectEnumerator();
			while(t_3->p_HasNext()){
				DBG_BLOCK();
				c_FuncDecl* t_decl3=t_3->p_NextObject();
				DBG_LOCAL(t_decl3,"decl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1209>");
				if((t_decl3->p_IsAbstract())!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1210>");
					int t_found=0;
					DBG_LOCAL(t_found,"found")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1211>");
					c_Enumerator3* t_4=t_impls->p_ObjectEnumerator();
					while(t_4->p_HasNext()){
						DBG_BLOCK();
						c_FuncDecl* t_decl22=t_4->p_NextObject();
						DBG_LOCAL(t_decl22,"decl2")
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1212>");
						if(t_decl3->m_ident==t_decl22->m_ident && t_decl3->p_EqualsFunc(t_decl22)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1213>");
							t_found=1;
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1214>");
							break;
						}
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1217>");
					if(!((t_found)!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1218>");
						if((p_IsInstanced())!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1219>");
							bb_config_Err(String(L"Can't create instance of class ",31)+p_ToString()+String(L" due to abstract method ",24)+t_decl3->p_ToString()+String(L".",1));
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1221>");
						m_attrs|=1024;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1222>");
						break;
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1225>");
					t_impls->p_AddLast4(t_decl3);
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1228>");
			t_cdecl2=t_cdecl2->m_superClass;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1234>");
	Array<c_ClassDecl* > t_5=m_implmentsAll;
	int t_6=0;
	while(t_6<t_5.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_iface=t_5.At(t_6);
		t_6=t_6+1;
		DBG_LOCAL(t_iface,"iface")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1235>");
		c_Enumerator3* t_7=t_iface->p_SemantedMethods(String())->p_ObjectEnumerator();
		while(t_7->p_HasNext()){
			DBG_BLOCK();
			c_FuncDecl* t_decl4=t_7->p_NextObject();
			DBG_LOCAL(t_decl4,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1236>");
			int t_found2=0;
			DBG_LOCAL(t_found2,"found")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1237>");
			c_Enumerator3* t_8=p_SemantedMethods(t_decl4->m_ident)->p_ObjectEnumerator();
			while(t_8->p_HasNext()){
				DBG_BLOCK();
				c_FuncDecl* t_decl23=t_8->p_NextObject();
				DBG_LOCAL(t_decl23,"decl2")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1238>");
				if(t_decl4->p_EqualsFunc(t_decl23)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1239>");
					if((t_decl23->m_munged).Length()!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1240>");
						bb_config_Err(String(L"Extern methods cannot be used to implement interface methods.",61));
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1242>");
					t_found2=1;
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1245>");
			if(!((t_found2)!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1246>");
				bb_config_Err(t_decl4->p_ToString()+String(L" must be implemented by class ",30)+p_ToString());
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1251>");
	bb_config_PopErr();
	return 0;
}
c_Decl* c_ClassDecl::p_OnCopy(){
	DBG_ENTER("ClassDecl.OnCopy")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<860>");
	bb_config_InternalErr(String(L"Internal error",14));
	return 0;
}
Object* c_ClassDecl::p_GetDecl2(String t_ident){
	DBG_ENTER("ClassDecl.GetDecl2")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<958>");
	Object* t_=c_ScopeDecl::p_GetDecl(t_ident);
	return t_;
}
Object* c_ClassDecl::p_GetDecl(String t_ident){
	DBG_ENTER("ClassDecl.GetDecl")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<948>");
	c_ClassDecl* t_cdecl=this;
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<949>");
	while((t_cdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<950>");
		Object* t_decl=t_cdecl->p_GetDecl2(t_ident);
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<951>");
		if((t_decl)!=0){
			DBG_BLOCK();
			return t_decl;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<952>");
		t_cdecl=t_cdecl->m_superClass;
	}
	return 0;
}
c_ClassDecl* c_ClassDecl::m_nullObjectClass;
int c_ClassDecl::p_IsThrowable(){
	DBG_ENTER("ClassDecl.IsThrowable")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<940>");
	int t_=(((m_attrs&8192)!=0)?1:0);
	return t_;
}
int c_ClassDecl::p_OnSemant(){
	DBG_ENTER("ClassDecl.OnSemant")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1021>");
	if((m_args).Length()!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1023>");
	bb_decl_PushEnv(this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1026>");
	if((m_superTy)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1027>");
		gc_assign(m_superClass,m_superTy->p_SemantClass());
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1028>");
		if((m_superClass->p_IsFinal())!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"Cannot extend final class.",26));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1029>");
		if((m_superClass->p_IsInterface())!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"Cannot extend an interface.",27));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1030>");
		if(m_munged==String(L"ThrowableObject",15) || ((m_superClass->p_IsThrowable())!=0)){
			DBG_BLOCK();
			m_attrs|=8192;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1031>");
		if((m_superClass->p_ExtendsObject())!=0){
			DBG_BLOCK();
			m_attrs|=2;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1033>");
		if(m_munged==String(L"Object",6)){
			DBG_BLOCK();
			m_attrs|=2;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1037>");
	Array<c_ClassDecl* > t_impls=Array<c_ClassDecl* >(m_impltys.Length());
	DBG_LOCAL(t_impls,"impls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1038>");
	c_Stack8* t_implsall=(new c_Stack8)->m_new();
	DBG_LOCAL(t_implsall,"implsall")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1039>");
	for(int t_i=0;t_i<m_impltys.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1040>");
		c_ClassDecl* t_cdecl=m_impltys.At(t_i)->p_SemantClass();
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1041>");
		if(!((t_cdecl->p_IsInterface())!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1042>");
			bb_config_Err(t_cdecl->p_ToString()+String(L" is a class, not an interface.",30));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1044>");
		for(int t_j=0;t_j<t_i;t_j=t_j+1){
			DBG_BLOCK();
			DBG_LOCAL(t_j,"j")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1045>");
			if(t_impls.At(t_j)==t_cdecl){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1046>");
				bb_config_Err(String(L"Duplicate interface ",20)+t_cdecl->p_ToString()+String(L".",1));
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1049>");
		gc_assign(t_impls.At(t_i),t_cdecl);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1050>");
		t_implsall->p_Push22(t_cdecl);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1051>");
		Array<c_ClassDecl* > t_=t_cdecl->m_implmentsAll;
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			c_ClassDecl* t_tdecl=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_tdecl,"tdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1052>");
			t_implsall->p_Push22(t_tdecl);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1055>");
	gc_assign(m_implmentsAll,Array<c_ClassDecl* >(t_implsall->p_Length2()));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1056>");
	for(int t_i2=0;t_i2<t_implsall->p_Length2();t_i2=t_i2+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i2,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1057>");
		gc_assign(m_implmentsAll.At(t_i2),t_implsall->p_Get2(t_i2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1059>");
	gc_assign(m_implments,t_impls);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1074>");
	bb_decl_PopEnv();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1077>");
	if(!((p_IsAbstract())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1078>");
		c_Enumerator2* t_3=m_decls->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl=t_3->p_NextObject();
			DBG_LOCAL(t_decl,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1079>");
			c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
			DBG_LOCAL(t_fdecl,"fdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1080>");
			if(((t_fdecl)!=0) && ((t_fdecl->p_IsAbstract())!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1081>");
				m_attrs|=1024;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1082>");
				break;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1087>");
	if(!((p_IsExtern())!=0) && !((p_IsInterface())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1088>");
		c_FuncDecl* t_fdecl2=0;
		DBG_LOCAL(t_fdecl2,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1089>");
		c_Enumerator3* t_4=p_FuncDecls(String())->p_ObjectEnumerator();
		while(t_4->p_HasNext()){
			DBG_BLOCK();
			c_FuncDecl* t_decl2=t_4->p_NextObject();
			DBG_LOCAL(t_decl2,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1090>");
			if(!t_decl2->p_IsCtor()){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1091>");
			int t_nargs=0;
			DBG_LOCAL(t_nargs,"nargs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1092>");
			Array<c_ArgDecl* > t_5=t_decl2->m_argDecls;
			int t_6=0;
			while(t_6<t_5.Length()){
				DBG_BLOCK();
				c_ArgDecl* t_arg=t_5.At(t_6);
				t_6=t_6+1;
				DBG_LOCAL(t_arg,"arg")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1093>");
				if(!((t_arg->m_init)!=0)){
					DBG_BLOCK();
					t_nargs+=1;
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1095>");
			if((t_nargs)!=0){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1096>");
			t_fdecl2=t_decl2;
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1097>");
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1099>");
		if(!((t_fdecl2)!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1100>");
			t_fdecl2=(new c_FuncDecl)->m_new(String(L"new",3),2,(m_objectType),Array<c_ArgDecl* >());
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1101>");
			t_fdecl2->p_AddStmt((new c_ReturnStmt)->m_new(0));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1102>");
			p_InsertDecl(t_fdecl2);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1107>");
	p_AppScope()->m_semantedClasses->p_AddLast6(this);
	return 0;
}
int c_ClassDecl::p_ExtendsClass(c_ClassDecl* t_cdecl){
	DBG_ENTER("ClassDecl.ExtendsClass")
	c_ClassDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1003>");
	if(this==m_nullObjectClass){
		DBG_BLOCK();
		return 1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1005>");
	c_ClassDecl* t_tdecl=this;
	DBG_LOCAL(t_tdecl,"tdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1006>");
	while((t_tdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1007>");
		if(t_tdecl==t_cdecl){
			DBG_BLOCK();
			return 1;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1008>");
		if((t_cdecl->p_IsInterface())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1009>");
			Array<c_ClassDecl* > t_=t_tdecl->m_implmentsAll;
			int t_2=0;
			while(t_2<t_.Length()){
				DBG_BLOCK();
				c_ClassDecl* t_iface=t_.At(t_2);
				t_2=t_2+1;
				DBG_LOCAL(t_iface,"iface")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1010>");
				if(t_iface==t_cdecl){
					DBG_BLOCK();
					return 1;
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1013>");
		t_tdecl=t_tdecl->m_superClass;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<1016>");
	return 0;
}
void c_ClassDecl::mark(){
	c_ScopeDecl::mark();
	gc_mark_q(m_superClass);
	gc_mark_q(m_args);
	gc_mark_q(m_superTy);
	gc_mark_q(m_impltys);
	gc_mark_q(m_objectType);
	gc_mark_q(m_instances);
	gc_mark_q(m_instanceof);
	gc_mark_q(m_instArgs);
	gc_mark_q(m_implmentsAll);
	gc_mark_q(m_implments);
}
String c_ClassDecl::debug(){
	String t="(ClassDecl)\n";
	t=c_ScopeDecl::debug()+t;
	t+=dbg_decl("args",&m_args);
	t+=dbg_decl("superTy",&m_superTy);
	t+=dbg_decl("impltys",&m_impltys);
	t+=dbg_decl("superClass",&m_superClass);
	t+=dbg_decl("implments",&m_implments);
	t+=dbg_decl("implmentsAll",&m_implmentsAll);
	t+=dbg_decl("instances",&m_instances);
	t+=dbg_decl("instanceof",&m_instanceof);
	t+=dbg_decl("instArgs",&m_instArgs);
	t+=dbg_decl("objectType",&m_objectType);
	t+=dbg_decl("nullObjectClass",&c_ClassDecl::m_nullObjectClass);
	return t;
}
int bb_decl_PopEnv(){
	DBG_ENTER("PopEnv")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<35>");
	if(bb_decl__envStack->p_IsEmpty()){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<36>");
	gc_assign(bb_decl__env,bb_decl__envStack->p_RemoveLast());
	return 0;
}
c_VoidType::c_VoidType(){
}
c_VoidType* c_VoidType::m_new(){
	DBG_ENTER("VoidType.new")
	c_VoidType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<52>");
	c_Type::m_new();
	return this;
}
int c_VoidType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("VoidType.EqualsType")
	c_VoidType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<55>");
	int t_=((dynamic_cast<c_VoidType*>(t_ty)!=0)?1:0);
	return t_;
}
String c_VoidType::p_ToString(){
	DBG_ENTER("VoidType.ToString")
	c_VoidType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<59>");
	return String(L"Void",4);
}
void c_VoidType::mark(){
	c_Type::mark();
}
String c_VoidType::debug(){
	String t="(VoidType)\n";
	t=c_Type::debug()+t;
	return t;
}
c_IdentType::c_IdentType(){
	m_ident=String();
	m_args=Array<c_Type* >();
}
c_IdentType* c_IdentType::m_new(String t_ident,Array<c_Type* > t_args){
	DBG_ENTER("IdentType.new")
	c_IdentType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<243>");
	c_Type::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<244>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<245>");
	gc_assign(this->m_args,t_args);
	return this;
}
c_IdentType* c_IdentType::m_new2(){
	DBG_ENTER("IdentType.new")
	c_IdentType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<239>");
	c_Type::m_new();
	return this;
}
c_Type* c_IdentType::p_Semant(){
	DBG_ENTER("IdentType.Semant")
	c_IdentType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<257>");
	if(!((m_ident).Length()!=0)){
		DBG_BLOCK();
		c_Type* t_=(c_ClassDecl::m_nullObjectClass->m_objectType);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<259>");
	Array<c_Type* > t_targs=Array<c_Type* >(m_args.Length());
	DBG_LOCAL(t_targs,"targs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<260>");
	for(int t_i=0;t_i<m_args.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<261>");
		gc_assign(t_targs.At(t_i),m_args.At(t_i)->p_Semant());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<264>");
	String t_tyid=String();
	c_Type* t_type=0;
	DBG_LOCAL(t_tyid,"tyid")
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<265>");
	int t_i2=m_ident.Find(String(L".",1),0);
	DBG_LOCAL(t_i2,"i")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<267>");
	if(t_i2==-1){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<268>");
		t_tyid=m_ident;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<269>");
		t_type=bb_decl__env->p_FindType(t_tyid,t_targs);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<271>");
		String t_modid=m_ident.Slice(0,t_i2);
		DBG_LOCAL(t_modid,"modid")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<272>");
		c_ModuleDecl* t_mdecl=bb_decl__env->p_FindModuleDecl(t_modid);
		DBG_LOCAL(t_mdecl,"mdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<273>");
		if(!((t_mdecl)!=0)){
			DBG_BLOCK();
			bb_config_Err(String(L"Module '",8)+t_modid+String(L"' not found",11));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<274>");
		t_tyid=m_ident.Slice(t_i2+1);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<275>");
		t_type=t_mdecl->p_FindType(t_tyid,t_targs);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<277>");
	if(!((t_type)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Type '",6)+t_tyid+String(L"' not found",11));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<278>");
	return t_type;
}
c_ClassDecl* c_IdentType::p_SemantClass(){
	DBG_ENTER("IdentType.SemantClass")
	c_IdentType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<282>");
	c_ObjectType* t_type=dynamic_cast<c_ObjectType*>(p_Semant());
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<283>");
	if(!((t_type)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Type is not a class",19));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<284>");
	return t_type->m_classDecl;
}
int c_IdentType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("IdentType.EqualsType")
	c_IdentType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<249>");
	bb_config_InternalErr(String(L"Internal error",14));
	return 0;
}
int c_IdentType::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("IdentType.ExtendsType")
	c_IdentType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<253>");
	bb_config_InternalErr(String(L"Internal error",14));
	return 0;
}
String c_IdentType::p_ToString(){
	DBG_ENTER("IdentType.ToString")
	c_IdentType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<288>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<289>");
	Array<c_Type* > t_=m_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Type* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<290>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<291>");
		t_t=t_t+t_arg->p_ToString();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<293>");
	if((t_t).Length()!=0){
		DBG_BLOCK();
		String t_3=String(L"$",1)+m_ident+String(L"<",1)+t_t.Replace(String(L"$",1),String())+String(L">",1);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<294>");
	String t_4=String(L"$",1)+m_ident;
	return t_4;
}
void c_IdentType::mark(){
	c_Type::mark();
	gc_mark_q(m_args);
}
String c_IdentType::debug(){
	String t="(IdentType)\n";
	t=c_Type::debug()+t;
	t+=dbg_decl("ident",&m_ident);
	t+=dbg_decl("args",&m_args);
	return t;
}
c_Stack3::c_Stack3(){
	m_data=Array<c_Type* >();
	m_length=0;
}
c_Stack3* c_Stack3::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack3 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack3* c_Stack3::m_new2(Array<c_Type* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack3::p_Push7(c_Type* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack3::p_Push8(Array<c_Type* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push7(t_values.At(t_offset+t_i));
	}
}
void c_Stack3::p_Push9(Array<c_Type* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push8(t_values,t_offset,t_values.Length()-t_offset);
}
Array<c_Type* > c_Stack3::p_ToArray(){
	DBG_ENTER("Stack.ToArray")
	c_Stack3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<18>");
	Array<c_Type* > t_t=Array<c_Type* >(m_length);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<19>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<20>");
		gc_assign(t_t.At(t_i),m_data.At(t_i));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<22>");
	return t_t;
}
void c_Stack3::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack3::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_ArrayType::c_ArrayType(){
	m_elemType=0;
}
c_ArrayType* c_ArrayType::m_new(c_Type* t_elemType){
	DBG_ENTER("ArrayType.new")
	c_ArrayType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_elemType,"elemType")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<169>");
	c_Type::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<170>");
	gc_assign(this->m_elemType,t_elemType);
	return this;
}
c_ArrayType* c_ArrayType::m_new2(){
	DBG_ENTER("ArrayType.new")
	c_ArrayType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<166>");
	c_Type::m_new();
	return this;
}
int c_ArrayType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("ArrayType.EqualsType")
	c_ArrayType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<174>");
	c_ArrayType* t_arrayType=dynamic_cast<c_ArrayType*>(t_ty);
	DBG_LOCAL(t_arrayType,"arrayType")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<175>");
	int t_=((((t_arrayType)!=0) && ((m_elemType->p_EqualsType(t_arrayType->m_elemType))!=0))?1:0);
	return t_;
}
int c_ArrayType::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("ArrayType.ExtendsType")
	c_ArrayType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<179>");
	c_ArrayType* t_arrayType=dynamic_cast<c_ArrayType*>(t_ty);
	DBG_LOCAL(t_arrayType,"arrayType")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<180>");
	int t_=((((t_arrayType)!=0) && (((dynamic_cast<c_VoidType*>(m_elemType))!=0) || ((m_elemType->p_EqualsType(t_arrayType->m_elemType))!=0)))?1:0);
	return t_;
}
c_Type* c_ArrayType::p_Semant(){
	DBG_ENTER("ArrayType.Semant")
	c_ArrayType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<184>");
	c_Type* t_ty=m_elemType->p_Semant();
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<185>");
	if(t_ty!=m_elemType){
		DBG_BLOCK();
		c_Type* t_=((new c_ArrayType)->m_new(t_ty));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<186>");
	c_Type* t_2=(this);
	return t_2;
}
c_ClassDecl* c_ArrayType::p_GetClass(){
	DBG_ENTER("ArrayType.GetClass")
	c_ArrayType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<190>");
	c_ClassDecl* t_=dynamic_cast<c_ClassDecl*>(bb_decl__env->p_FindDecl(String(L"array",5)));
	return t_;
}
String c_ArrayType::p_ToString(){
	DBG_ENTER("ArrayType.ToString")
	c_ArrayType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<194>");
	String t_=m_elemType->p_ToString()+String(L"[]",2);
	return t_;
}
void c_ArrayType::mark(){
	c_Type::mark();
	gc_mark_q(m_elemType);
}
String c_ArrayType::debug(){
	String t="(ArrayType)\n";
	t=c_Type::debug()+t;
	t+=dbg_decl("elemType",&m_elemType);
	return t;
}
c_UnaryExpr::c_UnaryExpr(){
	m_op=String();
	m_expr=0;
}
c_UnaryExpr* c_UnaryExpr::m_new(String t_op,c_Expr* t_expr){
	DBG_ENTER("UnaryExpr.new")
	c_UnaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<668>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<669>");
	this->m_op=t_op;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<670>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_UnaryExpr* c_UnaryExpr::m_new2(){
	DBG_ENTER("UnaryExpr.new")
	c_UnaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<665>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_UnaryExpr::p_Copy(){
	DBG_ENTER("UnaryExpr.Copy")
	c_UnaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<674>");
	c_Expr* t_=((new c_UnaryExpr)->m_new(m_op,p_CopyExpr(m_expr)));
	return t_;
}
c_Expr* c_UnaryExpr::p_Semant(){
	DBG_ENTER("UnaryExpr.Semant")
	c_UnaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<678>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<680>");
	String t_1=m_op;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<681>");
	if(t_1==String(L"+",1) || t_1==String(L"-",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<682>");
		gc_assign(m_expr,m_expr->p_Semant());
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<683>");
		if(!((dynamic_cast<c_NumericType*>(m_expr->m_exprType))!=0)){
			DBG_BLOCK();
			bb_config_Err(m_expr->p_ToString()+String(L" must be numeric for use with unary operator '",46)+m_op+String(L"'",1));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<684>");
		gc_assign(m_exprType,m_expr->m_exprType);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<685>");
		if(t_1==String(L"~",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<686>");
			gc_assign(m_expr,m_expr->p_Semant2((c_Type::m_intType),0));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<687>");
			gc_assign(m_exprType,(c_Type::m_intType));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<688>");
			if(t_1==String(L"not",3)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<689>");
				gc_assign(m_expr,m_expr->p_Semant2((c_Type::m_boolType),1));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<690>");
				gc_assign(m_exprType,(c_Type::m_boolType));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<692>");
				bb_config_InternalErr(String(L"Internal error",14));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<695>");
	if((dynamic_cast<c_ConstExpr*>(m_expr))!=0){
		DBG_BLOCK();
		c_Expr* t_2=p_EvalConst();
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<697>");
	c_Expr* t_3=(this);
	return t_3;
}
String c_UnaryExpr::p_Eval(){
	DBG_ENTER("UnaryExpr.Eval")
	c_UnaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<701>");
	String t_val=m_expr->p_Eval();
	DBG_LOCAL(t_val,"val")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<702>");
	String t_2=m_op;
	DBG_LOCAL(t_2,"2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<703>");
	if(t_2==String(L"~",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<704>");
		String t_=String(~(t_val).ToInt());
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<705>");
		if(t_2==String(L"+",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<706>");
			return t_val;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<707>");
			if(t_2==String(L"-",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<708>");
				if(t_val.StartsWith(String(L"-",1))){
					DBG_BLOCK();
					String t_3=t_val.Slice(1);
					return t_3;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<709>");
				String t_4=String(L"-",1)+t_val;
				return t_4;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<710>");
				if(t_2==String(L"not",3)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<711>");
					if((t_val).Length()!=0){
						DBG_BLOCK();
						return String();
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<712>");
					return String(L"1",1);
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<714>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_UnaryExpr::p_Trans(){
	DBG_ENTER("UnaryExpr.Trans")
	c_UnaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<718>");
	String t_=bb_translator__trans->p_TransUnaryExpr(this);
	return t_;
}
void c_UnaryExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_expr);
}
String c_UnaryExpr::debug(){
	String t="(UnaryExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("op",&m_op);
	t+=dbg_decl("expr",&m_expr);
	return t;
}
c_ArrayExpr::c_ArrayExpr(){
	m_exprs=Array<c_Expr* >();
}
c_ArrayExpr* c_ArrayExpr::m_new(Array<c_Expr* > t_exprs){
	DBG_ENTER("ArrayExpr.new")
	c_ArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_exprs,"exprs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1060>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1061>");
	gc_assign(this->m_exprs,t_exprs);
	return this;
}
c_ArrayExpr* c_ArrayExpr::m_new2(){
	DBG_ENTER("ArrayExpr.new")
	c_ArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1057>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_ArrayExpr::p_Copy(){
	DBG_ENTER("ArrayExpr.Copy")
	c_ArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1065>");
	c_Expr* t_=((new c_ArrayExpr)->m_new(p_CopyArgs(m_exprs)));
	return t_;
}
c_Expr* c_ArrayExpr::p_Semant(){
	DBG_ENTER("ArrayExpr.Semant")
	c_ArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1069>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1071>");
	gc_assign(m_exprs.At(0),m_exprs.At(0)->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1072>");
	c_Type* t_ty=m_exprs.At(0)->m_exprType;
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1074>");
	for(int t_i=1;t_i<m_exprs.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1075>");
		gc_assign(m_exprs.At(t_i),m_exprs.At(t_i)->p_Semant());
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1076>");
		t_ty=p_BalanceTypes(t_ty,m_exprs.At(t_i)->m_exprType);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1079>");
	for(int t_i2=0;t_i2<m_exprs.Length();t_i2=t_i2+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i2,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1080>");
		gc_assign(m_exprs.At(t_i2),m_exprs.At(t_i2)->p_Cast(t_ty,0));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1083>");
	gc_assign(m_exprType,(t_ty->p_ArrayOf()));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1084>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_ArrayExpr::p_Trans(){
	DBG_ENTER("ArrayExpr.Trans")
	c_ArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1088>");
	String t_=bb_translator__trans->p_TransArrayExpr(this);
	return t_;
}
void c_ArrayExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_exprs);
}
String c_ArrayExpr::debug(){
	String t="(ArrayExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("exprs",&m_exprs);
	return t;
}
c_Stack4::c_Stack4(){
	m_data=Array<c_Expr* >();
	m_length=0;
}
c_Stack4* c_Stack4::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack4 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack4* c_Stack4::m_new2(Array<c_Expr* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack4::p_Push10(c_Expr* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack4::p_Push11(Array<c_Expr* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push10(t_values.At(t_offset+t_i));
	}
}
void c_Stack4::p_Push12(Array<c_Expr* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push11(t_values,t_offset,t_values.Length()-t_offset);
}
Array<c_Expr* > c_Stack4::p_ToArray(){
	DBG_ENTER("Stack.ToArray")
	c_Stack4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<18>");
	Array<c_Expr* > t_t=Array<c_Expr* >(m_length);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<19>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<20>");
		gc_assign(t_t.At(t_i),m_data.At(t_i));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<22>");
	return t_t;
}
void c_Stack4::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack4::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_ConstExpr::c_ConstExpr(){
	m_ty=0;
	m_value=String();
}
c_ConstExpr* c_ConstExpr::m_new(c_Type* t_ty,String t_value){
	DBG_ENTER("ConstExpr.new")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<159>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<160>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<161>");
		if(t_value.StartsWith(String(L"%",1))){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<162>");
			t_value=String(bb_config_StringToInt(t_value.Slice(1),2));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<163>");
			if(t_value.StartsWith(String(L"$",1))){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<164>");
				t_value=String(bb_config_StringToInt(t_value.Slice(1),16));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<167>");
				while(t_value.Length()>1 && t_value.StartsWith(String(L"0",1))){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<168>");
					t_value=t_value.Slice(1);
				}
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<171>");
		if((dynamic_cast<c_FloatType*>(t_ty))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<172>");
			if(!(t_value.Contains(String(L"e",1)) || t_value.Contains(String(L"E",1)) || t_value.Contains(String(L".",1)))){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<173>");
				t_value=t_value+String(L".0",2);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<176>");
	gc_assign(this->m_ty,t_ty);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<177>");
	this->m_value=t_value;
	return this;
}
c_ConstExpr* c_ConstExpr::m_new2(){
	DBG_ENTER("ConstExpr.new")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<155>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_ConstExpr::p_Semant(){
	DBG_ENTER("ConstExpr.Semant")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<193>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<194>");
	gc_assign(m_exprType,m_ty->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<195>");
	c_Expr* t_2=(this);
	return t_2;
}
c_Expr* c_ConstExpr::p_Copy(){
	DBG_ENTER("ConstExpr.Copy")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<181>");
	c_Expr* t_=((new c_ConstExpr)->m_new(m_ty,m_value));
	return t_;
}
String c_ConstExpr::p_ToString(){
	DBG_ENTER("ConstExpr.ToString")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<185>");
	String t_=String(L"ConstExpr(\"",11)+m_value+String(L"\")",2);
	return t_;
}
String c_ConstExpr::p_Eval(){
	DBG_ENTER("ConstExpr.Eval")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<199>");
	return m_value;
}
c_Expr* c_ConstExpr::p_EvalConst(){
	DBG_ENTER("ConstExpr.EvalConst")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<203>");
	c_Expr* t_=(this);
	return t_;
}
bool c_ConstExpr::p_SideEffects(){
	DBG_ENTER("ConstExpr.SideEffects")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<189>");
	return false;
}
String c_ConstExpr::p_Trans(){
	DBG_ENTER("ConstExpr.Trans")
	c_ConstExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<207>");
	String t_=bb_translator__trans->p_TransConstExpr(this);
	return t_;
}
void c_ConstExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_ty);
}
String c_ConstExpr::debug(){
	String t="(ConstExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("ty",&m_ty);
	t+=dbg_decl("value",&m_value);
	return t;
}
c_ScopeExpr::c_ScopeExpr(){
	m_scope=0;
}
c_ScopeExpr* c_ScopeExpr::m_new(c_ScopeDecl* t_scope){
	DBG_ENTER("ScopeExpr.new")
	c_ScopeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<14>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<15>");
	gc_assign(this->m_scope,t_scope);
	return this;
}
c_ScopeExpr* c_ScopeExpr::m_new2(){
	DBG_ENTER("ScopeExpr.new")
	c_ScopeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<11>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_ScopeExpr::p_Copy(){
	DBG_ENTER("ScopeExpr.Copy")
	c_ScopeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<19>");
	c_Expr* t_=(this);
	return t_;
}
String c_ScopeExpr::p_ToString(){
	DBG_ENTER("ScopeExpr.ToString")
	c_ScopeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<23>");
	bbPrint(String(L"ScopeExpr(",10)+m_scope->p_ToString()+String(L")",1));
	return String();
}
c_Expr* c_ScopeExpr::p_Semant(){
	DBG_ENTER("ScopeExpr.Semant")
	c_ScopeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<27>");
	bb_config_InternalErr(String(L"Internal error",14));
	return 0;
}
c_ScopeDecl* c_ScopeExpr::p_SemantScope(){
	DBG_ENTER("ScopeExpr.SemantScope")
	c_ScopeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<31>");
	return m_scope;
}
void c_ScopeExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_scope);
}
String c_ScopeExpr::debug(){
	String t="(ScopeExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("scope",&m_scope);
	return t;
}
c_NewArrayExpr::c_NewArrayExpr(){
	m_ty=0;
	m_expr=0;
}
c_NewArrayExpr* c_NewArrayExpr::m_new(c_Type* t_ty,c_Expr* t_expr){
	DBG_ENTER("NewArrayExpr.new")
	c_NewArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<425>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<426>");
	gc_assign(this->m_ty,t_ty);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<427>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_NewArrayExpr* c_NewArrayExpr::m_new2(){
	DBG_ENTER("NewArrayExpr.new")
	c_NewArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<421>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_NewArrayExpr::p_Copy(){
	DBG_ENTER("NewArrayExpr.Copy")
	c_NewArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<431>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<432>");
	c_Expr* t_=((new c_NewArrayExpr)->m_new(m_ty,p_CopyExpr(m_expr)));
	return t_;
}
c_Expr* c_NewArrayExpr::p_Semant(){
	DBG_ENTER("NewArrayExpr.Semant")
	c_NewArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<436>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<438>");
	gc_assign(m_ty,m_ty->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<439>");
	gc_assign(m_exprType,(m_ty->p_ArrayOf()));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<440>");
	gc_assign(m_expr,m_expr->p_Semant2((c_Type::m_intType),0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<441>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_NewArrayExpr::p_Trans(){
	DBG_ENTER("NewArrayExpr.Trans")
	c_NewArrayExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<445>");
	String t_=bb_translator__trans->p_TransNewArrayExpr(this);
	return t_;
}
void c_NewArrayExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_ty);
	gc_mark_q(m_expr);
}
String c_NewArrayExpr::debug(){
	String t="(NewArrayExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("ty",&m_ty);
	t+=dbg_decl("expr",&m_expr);
	return t;
}
c_NewObjectExpr::c_NewObjectExpr(){
	m_ty=0;
	m_args=Array<c_Expr* >();
	m_classDecl=0;
	m_ctor=0;
}
c_NewObjectExpr* c_NewObjectExpr::m_new(c_Type* t_ty,Array<c_Expr* > t_args){
	DBG_ENTER("NewObjectExpr.new")
	c_NewObjectExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<376>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<377>");
	gc_assign(this->m_ty,t_ty);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<378>");
	gc_assign(this->m_args,t_args);
	return this;
}
c_NewObjectExpr* c_NewObjectExpr::m_new2(){
	DBG_ENTER("NewObjectExpr.new")
	c_NewObjectExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<370>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_NewObjectExpr::p_Semant(){
	DBG_ENTER("NewObjectExpr.Semant")
	c_NewObjectExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<386>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<388>");
	gc_assign(m_ty,m_ty->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<389>");
	gc_assign(m_args,p_SemantArgs(m_args));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<391>");
	c_ObjectType* t_objTy=dynamic_cast<c_ObjectType*>(m_ty);
	DBG_LOCAL(t_objTy,"objTy")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<392>");
	if(!((t_objTy)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<393>");
		bb_config_Err(String(L"Expression is not a class.",26));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<396>");
	gc_assign(m_classDecl,t_objTy->m_classDecl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<398>");
	if((m_classDecl->p_IsInterface())!=0){
		DBG_BLOCK();
		bb_config_Err(String(L"Cannot create instance of an interface.",39));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<399>");
	if((m_classDecl->p_IsAbstract())!=0){
		DBG_BLOCK();
		bb_config_Err(String(L"Cannot create instance of an abstract class.",44));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<400>");
	if(((m_classDecl->m_args).Length()!=0) && !((m_classDecl->m_instanceof)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Cannot create instance of a generic class.",42));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<402>");
	if((m_classDecl->p_IsExtern())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<403>");
		if((m_args).Length()!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"No suitable constructor found for class ",40)+m_classDecl->p_ToString()+String(L".",1));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<405>");
		gc_assign(m_ctor,m_classDecl->p_FindFuncDecl(String(L"new",3),m_args,0));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<406>");
		if(!((m_ctor)!=0)){
			DBG_BLOCK();
			bb_config_Err(String(L"No suitable constructor found for class ",40)+m_classDecl->p_ToString()+String(L".",1));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<407>");
		gc_assign(m_args,p_CastArgs(m_args,m_ctor));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<410>");
	m_classDecl->m_attrs|=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<412>");
	gc_assign(m_exprType,m_ty);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<413>");
	c_Expr* t_2=(this);
	return t_2;
}
c_Expr* c_NewObjectExpr::p_Copy(){
	DBG_ENTER("NewObjectExpr.Copy")
	c_NewObjectExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<382>");
	c_Expr* t_=((new c_NewObjectExpr)->m_new(m_ty,p_CopyArgs(m_args)));
	return t_;
}
String c_NewObjectExpr::p_Trans(){
	DBG_ENTER("NewObjectExpr.Trans")
	c_NewObjectExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<417>");
	String t_=bb_translator__trans->p_TransNewObjectExpr(this);
	return t_;
}
void c_NewObjectExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_ty);
	gc_mark_q(m_args);
	gc_mark_q(m_classDecl);
	gc_mark_q(m_ctor);
}
String c_NewObjectExpr::debug(){
	String t="(NewObjectExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("ty",&m_ty);
	t+=dbg_decl("args",&m_args);
	t+=dbg_decl("ctor",&m_ctor);
	t+=dbg_decl("classDecl",&m_classDecl);
	return t;
}
c_CastExpr::c_CastExpr(){
	m_ty=0;
	m_expr=0;
	m_flags=0;
}
c_CastExpr* c_CastExpr::m_new(c_Type* t_ty,c_Expr* t_expr,int t_flags){
	DBG_ENTER("CastExpr.new")
	c_CastExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_flags,"flags")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<533>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<534>");
	gc_assign(this->m_ty,t_ty);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<535>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<536>");
	this->m_flags=t_flags;
	return this;
}
c_CastExpr* c_CastExpr::m_new2(){
	DBG_ENTER("CastExpr.new")
	c_CastExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<528>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_CastExpr::p_Semant(){
	DBG_ENTER("CastExpr.Semant")
	c_CastExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<544>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<546>");
	gc_assign(m_ty,m_ty->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<547>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<549>");
	c_Type* t_src=m_expr->m_exprType;
	DBG_LOCAL(t_src,"src")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<552>");
	if((t_src->p_EqualsType(m_ty))!=0){
		DBG_BLOCK();
		return m_expr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<555>");
	if((t_src->p_ExtendsType(m_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<558>");
		if(((dynamic_cast<c_ArrayType*>(t_src))!=0) && ((dynamic_cast<c_VoidType*>(dynamic_cast<c_ArrayType*>(t_src)->m_elemType))!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<559>");
			c_Expr* t_2=((new c_ConstExpr)->m_new(m_ty,String()))->p_Semant();
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<563>");
		if(((dynamic_cast<c_ObjectType*>(m_ty))!=0) && !((dynamic_cast<c_ObjectType*>(t_src))!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<566>");
			c_Expr* t_3[]={m_expr};
			gc_assign(m_expr,((new c_NewObjectExpr)->m_new(m_ty,Array<c_Expr* >(t_3,1)))->p_Semant());
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<568>");
			if(((dynamic_cast<c_ObjectType*>(t_src))!=0) && !((dynamic_cast<c_ObjectType*>(m_ty))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<571>");
				String t_op=String();
				DBG_LOCAL(t_op,"op")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<572>");
				if((dynamic_cast<c_BoolType*>(m_ty))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<573>");
					t_op=String(L"ToBool",6);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<574>");
					if((dynamic_cast<c_IntType*>(m_ty))!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<575>");
						t_op=String(L"ToInt",5);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<576>");
						if((dynamic_cast<c_FloatType*>(m_ty))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<577>");
							t_op=String(L"ToFloat",7);
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<578>");
							if((dynamic_cast<c_StringType*>(m_ty))!=0){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<579>");
								t_op=String(L"ToString",8);
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<581>");
								bb_config_InternalErr(String(L"Internal error",14));
							}
						}
					}
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<583>");
				c_FuncDecl* t_fdecl=t_src->p_GetClass()->p_FindFuncDecl(t_op,Array<c_Expr* >(),0);
				DBG_LOCAL(t_fdecl,"fdecl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<584>");
				gc_assign(m_expr,((new c_InvokeMemberExpr)->m_new(m_expr,t_fdecl,Array<c_Expr* >()))->p_Semant());
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<588>");
		gc_assign(m_exprType,m_ty);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<590>");
		if((dynamic_cast<c_BoolType*>(m_ty))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<592>");
			if((dynamic_cast<c_VoidType*>(t_src))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<593>");
				bb_config_Err(String(L"Cannot convert from Void to Bool.",33));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<596>");
			if((m_flags&1)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<597>");
				gc_assign(m_exprType,m_ty);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<600>");
			if((m_ty->p_ExtendsType(t_src))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<602>");
				if((m_flags&1)!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<605>");
					if(dynamic_cast<c_ObjectType*>(m_ty)!=0==(dynamic_cast<c_ObjectType*>(t_src)!=0)){
						DBG_BLOCK();
						gc_assign(m_exprType,m_ty);
					}
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<609>");
				if(((dynamic_cast<c_ObjectType*>(m_ty))!=0) && ((dynamic_cast<c_ObjectType*>(t_src))!=0)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<611>");
					if((m_flags&1)!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<613>");
						if(((t_src->p_GetClass()->p_IsInterface())!=0) || ((m_ty->p_GetClass()->p_IsInterface())!=0)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<614>");
							gc_assign(m_exprType,m_ty);
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<621>");
	if(!((m_exprType)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<622>");
		bb_config_Err(String(L"Cannot convert from ",20)+t_src->p_ToString()+String(L" to ",4)+m_ty->p_ToString()+String(L".",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<625>");
	if((dynamic_cast<c_ConstExpr*>(m_expr))!=0){
		DBG_BLOCK();
		c_Expr* t_4=p_EvalConst();
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<627>");
	c_Expr* t_5=(this);
	return t_5;
}
c_Expr* c_CastExpr::p_Copy(){
	DBG_ENTER("CastExpr.Copy")
	c_CastExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<540>");
	c_Expr* t_=((new c_CastExpr)->m_new(m_ty,p_CopyExpr(m_expr),m_flags));
	return t_;
}
String c_CastExpr::p_Eval(){
	DBG_ENTER("CastExpr.Eval")
	c_CastExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<631>");
	String t_val=m_expr->p_Eval();
	DBG_LOCAL(t_val,"val")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<632>");
	if((dynamic_cast<c_BoolType*>(m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<633>");
		if((dynamic_cast<c_IntType*>(m_expr->m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<634>");
			if(((t_val).ToInt())!=0){
				DBG_BLOCK();
				return String(L"1",1);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<635>");
			return String();
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<636>");
			if((dynamic_cast<c_FloatType*>(m_expr->m_exprType))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<637>");
				if(((t_val).ToFloat())!=0){
					DBG_BLOCK();
					return String(L"1",1);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<638>");
				return String();
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<639>");
				if((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<640>");
					if((t_val).Length()!=0){
						DBG_BLOCK();
						return String(L"1",1);
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<641>");
					return String();
				}
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<643>");
		if((dynamic_cast<c_IntType*>(m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<644>");
			if((dynamic_cast<c_BoolType*>(m_expr->m_exprType))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<645>");
				if((t_val).Length()!=0){
					DBG_BLOCK();
					return String(L"1",1);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<646>");
				return String(L"0",1);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<648>");
			String t_=String((t_val).ToInt());
			return t_;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<649>");
			if((dynamic_cast<c_FloatType*>(m_exprType))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<650>");
				String t_2=String((t_val).ToFloat());
				return t_2;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<651>");
				if((dynamic_cast<c_StringType*>(m_exprType))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<652>");
					return t_val;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<654>");
	if(!((t_val).Length()!=0)){
		DBG_BLOCK();
		return t_val;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<655>");
	String t_3=c_Expr::p_Eval();
	return t_3;
}
String c_CastExpr::p_Trans(){
	DBG_ENTER("CastExpr.Trans")
	c_CastExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<659>");
	String t_=bb_translator__trans->p_TransCastExpr(this);
	return t_;
}
void c_CastExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_ty);
	gc_mark_q(m_expr);
}
String c_CastExpr::debug(){
	String t="(CastExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("ty",&m_ty);
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("flags",&m_flags);
	return t;
}
c_IdentExpr::c_IdentExpr(){
	m_ident=String();
	m_expr=0;
	m_scope=0;
	m_static=false;
}
c_IdentExpr* c_IdentExpr::m_new(String t_ident,c_Expr* t_expr){
	DBG_ENTER("IdentExpr.new")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<164>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<165>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<166>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_IdentExpr* c_IdentExpr::m_new2(){
	DBG_ENTER("IdentExpr.new")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<158>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_IdentExpr::p_Copy(){
	DBG_ENTER("IdentExpr.Copy")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<170>");
	c_Expr* t_=((new c_IdentExpr)->m_new(m_ident,p_CopyExpr(m_expr)));
	return t_;
}
String c_IdentExpr::p_ToString(){
	DBG_ENTER("IdentExpr.ToString")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<174>");
	String t_t=String(L"IdentExpr(\"",11)+m_ident+String(L"\"",1);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<175>");
	if((m_expr)!=0){
		DBG_BLOCK();
		t_t=t_t+(String(L",",1)+m_expr->p_ToString());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<176>");
	String t_=t_t+String(L")",1);
	return t_;
}
int c_IdentExpr::p__Semant(){
	DBG_ENTER("IdentExpr._Semant")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<181>");
	if((m_scope)!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<183>");
	if((m_expr)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<184>");
		gc_assign(m_scope,m_expr->p_SemantScope());
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<185>");
		if((m_scope)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<186>");
			m_static=true;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<188>");
			gc_assign(m_expr,m_expr->p_Semant());
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<189>");
			gc_assign(m_scope,(m_expr->m_exprType->p_GetClass()));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<190>");
			if(!((m_scope)!=0)){
				DBG_BLOCK();
				bb_config_Err(String(L"Expression has no scope",23));
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<193>");
		gc_assign(m_scope,bb_decl__env);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<194>");
		m_static=bb_decl__env->p_FuncScope()==0 || bb_decl__env->p_FuncScope()->p_IsStatic();
	}
	return 0;
}
int c_IdentExpr::p_IdentErr(){
	DBG_ENTER("IdentExpr.IdentErr")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<200>");
	String t_close=String();
	DBG_LOCAL(t_close,"close")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<201>");
	c_Enumerator2* t_=m_scope->p_Decls()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<202>");
		if(m_ident.ToLower()==t_decl->m_ident.ToLower()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<203>");
			t_close=t_decl->m_ident;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<206>");
	if(((t_close).Length()!=0) && m_ident!=t_close){
		DBG_BLOCK();
		bb_config_Err(String(L"Identifier '",12)+m_ident+String(L"' not found - perhaps you meant '",33)+t_close+String(L"'?",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<207>");
	bb_config_Err(String(L"Identifier '",12)+m_ident+String(L"' not found.",12));
	return 0;
}
c_Expr* c_IdentExpr::p_SemantSet(String t_op,c_Expr* t_rhs){
	DBG_ENTER("IdentExpr.SemantSet")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<218>");
	p__Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<220>");
	c_ValDecl* t_vdecl=m_scope->p_FindValDecl(m_ident);
	DBG_LOCAL(t_vdecl,"vdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<221>");
	if((t_vdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<222>");
		if((dynamic_cast<c_ConstDecl*>(t_vdecl))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<223>");
			if((t_rhs)!=0){
				DBG_BLOCK();
				bb_config_Err(String(L"Constant '",10)+m_ident+String(L"' cannot be modified.",21));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<224>");
			c_ConstExpr* t_cexpr=(new c_ConstExpr)->m_new(t_vdecl->m_type,dynamic_cast<c_ConstDecl*>(t_vdecl)->m_value);
			DBG_LOCAL(t_cexpr,"cexpr")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<226>");
			if(!m_static && (((dynamic_cast<c_InvokeExpr*>(m_expr))!=0) || ((dynamic_cast<c_InvokeMemberExpr*>(m_expr))!=0))){
				DBG_BLOCK();
				c_Expr* t_=((new c_StmtExpr)->m_new(((new c_ExprStmt)->m_new(m_expr)),(t_cexpr)))->p_Semant();
				return t_;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<227>");
			c_Expr* t_2=t_cexpr->p_Semant();
			return t_2;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<228>");
			if((dynamic_cast<c_FieldDecl*>(t_vdecl))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<229>");
				if(m_static){
					DBG_BLOCK();
					bb_config_Err(String(L"Field '",7)+m_ident+String(L"' cannot be accessed from here.",31));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<230>");
				if((m_expr)!=0){
					DBG_BLOCK();
					c_Expr* t_3=((new c_MemberVarExpr)->m_new(m_expr,dynamic_cast<c_VarDecl*>(t_vdecl)))->p_Semant();
					return t_3;
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<232>");
		c_Expr* t_4=((new c_VarExpr)->m_new(dynamic_cast<c_VarDecl*>(t_vdecl)))->p_Semant();
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<235>");
	if(((t_op).Length()!=0) && t_op!=String(L"=",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<237>");
		c_FuncDecl* t_fdecl=m_scope->p_FindFuncDecl(m_ident,Array<c_Expr* >(),0);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<238>");
		if(!((t_fdecl)!=0)){
			DBG_BLOCK();
			p_IdentErr();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<240>");
		if(((bb_decl__env->p_ModuleScope()->p_IsStrict())!=0) && !t_fdecl->p_IsProperty()){
			DBG_BLOCK();
			bb_config_Err(String(L"Identifier '",12)+m_ident+String(L"' cannot be used in this way.",29));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<242>");
		c_Expr* t_lhs=0;
		DBG_LOCAL(t_lhs,"lhs")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<244>");
		if(t_fdecl->p_IsStatic() || m_scope==bb_decl__env && !bb_decl__env->p_FuncScope()->p_IsStatic()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<245>");
			t_lhs=((new c_InvokeExpr)->m_new(t_fdecl,Array<c_Expr* >()));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<246>");
			if((m_expr)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<247>");
				c_LocalDecl* t_tmp=(new c_LocalDecl)->m_new(String(),0,0,m_expr);
				DBG_LOCAL(t_tmp,"tmp")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<248>");
				t_lhs=((new c_InvokeMemberExpr)->m_new(((new c_VarExpr)->m_new(t_tmp)),t_fdecl,Array<c_Expr* >()));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<249>");
				t_lhs=((new c_StmtExpr)->m_new(((new c_DeclStmt)->m_new(t_tmp)),t_lhs));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<251>");
				return 0;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<254>");
		String t_bop=t_op.Slice(0,1);
		DBG_LOCAL(t_bop,"bop")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<255>");
		String t_1=t_bop;
		DBG_LOCAL(t_1,"1")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<256>");
		if(t_1==String(L"*",1) || t_1==String(L"/",1) || t_1==String(L"shl",3) || t_1==String(L"shr",3) || t_1==String(L"+",1) || t_1==String(L"-",1) || t_1==String(L"&",1) || t_1==String(L"|",1) || t_1==String(L"~",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<257>");
			t_rhs=((new c_BinaryMathExpr)->m_new(t_bop,t_lhs,t_rhs));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<259>");
			bb_config_InternalErr(String(L"Internal error",14));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<261>");
		t_rhs=t_rhs->p_Semant();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<264>");
	Array<c_Expr* > t_args=Array<c_Expr* >();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<265>");
	if((t_rhs)!=0){
		DBG_BLOCK();
		c_Expr* t_5[]={t_rhs};
		t_args=Array<c_Expr* >(t_5,1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<267>");
	c_FuncDecl* t_fdecl2=m_scope->p_FindFuncDecl(m_ident,t_args,0);
	DBG_LOCAL(t_fdecl2,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<268>");
	if((t_fdecl2)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<270>");
		if(((bb_decl__env->p_ModuleScope()->p_IsStrict())!=0) && !t_fdecl2->p_IsProperty()){
			DBG_BLOCK();
			bb_config_Err(String(L"Identifier '",12)+m_ident+String(L"' cannot be used in this way.",29));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<272>");
		if(!t_fdecl2->p_IsStatic()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<273>");
			if(m_static){
				DBG_BLOCK();
				bb_config_Err(String(L"Method '",8)+m_ident+String(L"' cannot be accessed from here.",31));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<274>");
			if((m_expr)!=0){
				DBG_BLOCK();
				c_Expr* t_6=((new c_InvokeMemberExpr)->m_new(m_expr,t_fdecl2,t_args))->p_Semant();
				return t_6;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<276>");
		c_Expr* t_7=((new c_InvokeExpr)->m_new(t_fdecl2,t_args))->p_Semant();
		return t_7;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<279>");
	p_IdentErr();
	return 0;
}
c_Expr* c_IdentExpr::p_Semant(){
	DBG_ENTER("IdentExpr.Semant")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<212>");
	c_Expr* t_=p_SemantSet(String(),0);
	return t_;
}
c_ScopeDecl* c_IdentExpr::p_SemantScope(){
	DBG_ENTER("IdentExpr.SemantScope")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<306>");
	p__Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<308>");
	c_ScopeDecl* t_=m_scope->p_FindScopeDecl(m_ident);
	return t_;
}
c_Expr* c_IdentExpr::p_SemantFunc(Array<c_Expr* > t_args){
	DBG_ENTER("IdentExpr.SemantFunc")
	c_IdentExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<284>");
	p__Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<286>");
	c_FuncDecl* t_fdecl=m_scope->p_FindFuncDecl(m_ident,t_args,0);
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<287>");
	if((t_fdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<288>");
		if(!t_fdecl->p_IsStatic()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<289>");
			if(m_static){
				DBG_BLOCK();
				bb_config_Err(String(L"Method '",8)+m_ident+String(L"' cannot be accessed from here.",31));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<290>");
			if((m_expr)!=0){
				DBG_BLOCK();
				c_Expr* t_=((new c_InvokeMemberExpr)->m_new(m_expr,t_fdecl,t_args))->p_Semant();
				return t_;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<292>");
		c_Expr* t_2=((new c_InvokeExpr)->m_new(t_fdecl,t_args))->p_Semant();
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<295>");
	c_Type* t_type=m_scope->p_FindType(m_ident,Array<c_Type* >());
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<296>");
	if((t_type)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<297>");
		if(t_args.Length()==1 && ((t_args.At(0))!=0)){
			DBG_BLOCK();
			c_Expr* t_3=t_args.At(0)->p_Cast(t_type,1);
			return t_3;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<298>");
		bb_config_Err(String(L"Illegal number of arguments for type conversion",47));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<301>");
	p_IdentErr();
	return 0;
}
void c_IdentExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_scope);
}
String c_IdentExpr::debug(){
	String t="(IdentExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("ident",&m_ident);
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("scope",&m_scope);
	t+=dbg_decl("static",&m_static);
	return t;
}
c_SelfExpr::c_SelfExpr(){
}
c_SelfExpr* c_SelfExpr::m_new(){
	DBG_ENTER("SelfExpr.new")
	c_SelfExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<497>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_SelfExpr::p_Copy(){
	DBG_ENTER("SelfExpr.Copy")
	c_SelfExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<500>");
	c_Expr* t_=((new c_SelfExpr)->m_new());
	return t_;
}
c_Expr* c_SelfExpr::p_Semant(){
	DBG_ENTER("SelfExpr.Semant")
	c_SelfExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<508>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<510>");
	if((bb_decl__env->p_FuncScope())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<511>");
		if(bb_decl__env->p_FuncScope()->p_IsStatic()){
			DBG_BLOCK();
			bb_config_Err(String(L"Illegal use of Self within static scope.",40));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<513>");
		bb_config_Err(String(L"Self cannot be used here.",25));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<516>");
	gc_assign(m_exprType,(bb_decl__env->p_ClassScope()->m_objectType));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<517>");
	c_Expr* t_2=(this);
	return t_2;
}
bool c_SelfExpr::p_SideEffects(){
	DBG_ENTER("SelfExpr.SideEffects")
	c_SelfExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<504>");
	return false;
}
String c_SelfExpr::p_Trans(){
	DBG_ENTER("SelfExpr.Trans")
	c_SelfExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<521>");
	String t_=bb_translator__trans->p_TransSelfExpr(this);
	return t_;
}
void c_SelfExpr::mark(){
	c_Expr::mark();
}
String c_SelfExpr::debug(){
	String t="(SelfExpr)\n";
	t=c_Expr::debug()+t;
	return t;
}
c_Stmt::c_Stmt(){
	m_errInfo=String();
}
c_Stmt* c_Stmt::m_new(){
	DBG_ENTER("Stmt.new")
	c_Stmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<13>");
	m_errInfo=bb_config__errInfo;
	return this;
}
c_Stmt* c_Stmt::p_Copy2(c_ScopeDecl* t_scope){
	DBG_ENTER("Stmt.Copy")
	c_Stmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<21>");
	c_Stmt* t_t=p_OnCopy2(t_scope);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<22>");
	t_t->m_errInfo=m_errInfo;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<23>");
	return t_t;
}
int c_Stmt::p_Semant(){
	DBG_ENTER("Stmt.Semant")
	c_Stmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<27>");
	bb_config_PushErr(m_errInfo);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<28>");
	p_OnSemant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<29>");
	bb_config_PopErr();
	return 0;
}
void c_Stmt::mark(){
	Object::mark();
}
String c_Stmt::debug(){
	String t="(Stmt)\n";
	t+=dbg_decl("errInfo",&m_errInfo);
	return t;
}
c_List5::c_List5(){
	m__head=((new c_HeadNode5)->m_new());
}
c_List5* c_List5::m_new(){
	DBG_ENTER("List.new")
	c_List5 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node10* c_List5::p_AddLast5(c_Stmt* t_data){
	DBG_ENTER("List.AddLast")
	c_List5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node10* t_=(new c_Node10)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List5* c_List5::m_new2(Array<c_Stmt* > t_data){
	DBG_ENTER("List.new")
	c_List5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_Stmt* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Stmt* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast5(t_t);
	}
	return this;
}
bool c_List5::p_IsEmpty(){
	DBG_ENTER("List.IsEmpty")
	c_List5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<50>");
	bool t_=m__head->m__succ==m__head;
	return t_;
}
c_Enumerator5* c_List5::p_ObjectEnumerator(){
	DBG_ENTER("List.ObjectEnumerator")
	c_List5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<186>");
	c_Enumerator5* t_=(new c_Enumerator5)->m_new(this);
	return t_;
}
c_Node10* c_List5::p_AddFirst(c_Stmt* t_data){
	DBG_ENTER("List.AddFirst")
	c_List5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<104>");
	c_Node10* t_=(new c_Node10)->m_new(m__head->m__succ,m__head,t_data);
	return t_;
}
void c_List5::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List5::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_Node10::c_Node10(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node10* c_Node10::m_new(c_Node10* t_succ,c_Node10* t_pred,c_Stmt* t_data){
	DBG_ENTER("Node.new")
	c_Node10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node10* c_Node10::m_new2(){
	DBG_ENTER("Node.new")
	c_Node10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
void c_Node10::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node10::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode5::c_HeadNode5(){
}
c_HeadNode5* c_HeadNode5::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node10::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode5::mark(){
	c_Node10::mark();
}
String c_HeadNode5::debug(){
	String t="(HeadNode)\n";
	t=c_Node10::debug()+t;
	return t;
}
c_InvokeSuperExpr::c_InvokeSuperExpr(){
	m_ident=String();
	m_args=Array<c_Expr* >();
	m_funcDecl=0;
}
c_InvokeSuperExpr* c_InvokeSuperExpr::m_new(String t_ident,Array<c_Expr* > t_args){
	DBG_ENTER("InvokeSuperExpr.new")
	c_InvokeSuperExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<458>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<459>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<460>");
	gc_assign(this->m_args,t_args);
	return this;
}
c_InvokeSuperExpr* c_InvokeSuperExpr::m_new2(){
	DBG_ENTER("InvokeSuperExpr.new")
	c_InvokeSuperExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<451>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_InvokeSuperExpr::p_Copy(){
	DBG_ENTER("InvokeSuperExpr.Copy")
	c_InvokeSuperExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<464>");
	c_Expr* t_=((new c_InvokeSuperExpr)->m_new(m_ident,p_CopyArgs(m_args)));
	return t_;
}
c_Expr* c_InvokeSuperExpr::p_Semant(){
	DBG_ENTER("InvokeSuperExpr.Semant")
	c_InvokeSuperExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<468>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<470>");
	if(bb_decl__env->p_FuncScope()->p_IsStatic()){
		DBG_BLOCK();
		bb_config_Err(String(L"Illegal use of Super.",21));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<472>");
	c_ClassDecl* t_classScope=bb_decl__env->p_ClassScope();
	DBG_LOCAL(t_classScope,"classScope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<473>");
	c_ClassDecl* t_superClass=t_classScope->m_superClass;
	DBG_LOCAL(t_superClass,"superClass")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<477>");
	if(!((t_superClass)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Class has no super class.",25));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<479>");
	gc_assign(m_args,p_SemantArgs(m_args));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<480>");
	gc_assign(m_funcDecl,t_superClass->p_FindFuncDecl(m_ident,m_args,0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<481>");
	if(!((m_funcDecl)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Can't find superclass method '",30)+m_ident+String(L"'.",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<483>");
	if((m_funcDecl->p_IsAbstract())!=0){
		DBG_BLOCK();
		bb_config_Err(String(L"Can't invoke abstract superclass method '",41)+m_ident+String(L"'.",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<485>");
	gc_assign(m_args,p_CastArgs(m_args,m_funcDecl));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<486>");
	gc_assign(m_exprType,m_funcDecl->m_retType);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<487>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_InvokeSuperExpr::p_Trans(){
	DBG_ENTER("InvokeSuperExpr.Trans")
	c_InvokeSuperExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<491>");
	String t_=bb_translator__trans->p_TransInvokeSuperExpr(this);
	return t_;
}
void c_InvokeSuperExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_args);
	gc_mark_q(m_funcDecl);
}
String c_InvokeSuperExpr::debug(){
	String t="(InvokeSuperExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("ident",&m_ident);
	t+=dbg_decl("args",&m_args);
	t+=dbg_decl("funcDecl",&m_funcDecl);
	return t;
}
c_IdentTypeExpr::c_IdentTypeExpr(){
	m_cdecl=0;
}
c_IdentTypeExpr* c_IdentTypeExpr::m_new(c_Type* t_type){
	DBG_ENTER("IdentTypeExpr.new")
	c_IdentTypeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<125>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<126>");
	gc_assign(this->m_exprType,t_type);
	return this;
}
c_IdentTypeExpr* c_IdentTypeExpr::m_new2(){
	DBG_ENTER("IdentTypeExpr.new")
	c_IdentTypeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<122>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_IdentTypeExpr::p_Copy(){
	DBG_ENTER("IdentTypeExpr.Copy")
	c_IdentTypeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<130>");
	c_Expr* t_=((new c_IdentTypeExpr)->m_new(m_exprType));
	return t_;
}
int c_IdentTypeExpr::p__Semant(){
	DBG_ENTER("IdentTypeExpr._Semant")
	c_IdentTypeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<134>");
	if((m_cdecl)!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<135>");
	gc_assign(m_exprType,m_exprType->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<136>");
	gc_assign(m_cdecl,m_exprType->p_GetClass());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<137>");
	if(!((m_cdecl)!=0)){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	return 0;
}
c_Expr* c_IdentTypeExpr::p_Semant(){
	DBG_ENTER("IdentTypeExpr.Semant")
	c_IdentTypeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<141>");
	p__Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<142>");
	bb_config_Err(String(L"Expression can't be used in this way",36));
	return 0;
}
c_ScopeDecl* c_IdentTypeExpr::p_SemantScope(){
	DBG_ENTER("IdentTypeExpr.SemantScope")
	c_IdentTypeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<152>");
	p__Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<153>");
	c_ScopeDecl* t_=(m_cdecl);
	return t_;
}
c_Expr* c_IdentTypeExpr::p_SemantFunc(Array<c_Expr* > t_args){
	DBG_ENTER("IdentTypeExpr.SemantFunc")
	c_IdentTypeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<146>");
	p__Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<147>");
	if(t_args.Length()==1 && ((t_args.At(0))!=0)){
		DBG_BLOCK();
		c_Expr* t_=t_args.At(0)->p_Cast((m_cdecl->m_objectType),1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<148>");
	bb_config_Err(String(L"Illegal number of arguments for type conversion",47));
	return 0;
}
void c_IdentTypeExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_cdecl);
}
String c_IdentTypeExpr::debug(){
	String t="(IdentTypeExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("cdecl",&m_cdecl);
	return t;
}
c_FuncCallExpr::c_FuncCallExpr(){
	m_expr=0;
	m_args=Array<c_Expr* >();
}
c_FuncCallExpr* c_FuncCallExpr::m_new(c_Expr* t_expr,Array<c_Expr* > t_args){
	DBG_ENTER("FuncCallExpr.new")
	c_FuncCallExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<317>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<318>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<319>");
	gc_assign(this->m_args,t_args);
	return this;
}
c_FuncCallExpr* c_FuncCallExpr::m_new2(){
	DBG_ENTER("FuncCallExpr.new")
	c_FuncCallExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<313>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_FuncCallExpr::p_Copy(){
	DBG_ENTER("FuncCallExpr.Copy")
	c_FuncCallExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<323>");
	c_Expr* t_=((new c_FuncCallExpr)->m_new(p_CopyExpr(m_expr),p_CopyArgs(m_args)));
	return t_;
}
String c_FuncCallExpr::p_ToString(){
	DBG_ENTER("FuncCallExpr.ToString")
	c_FuncCallExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<327>");
	String t_t=String(L"FuncCallExpr(",13)+m_expr->p_ToString();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<328>");
	Array<c_Expr* > t_=m_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<329>");
		t_t=t_t+(String(L",",1)+t_arg->p_ToString());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<331>");
	String t_3=t_t+String(L")",1);
	return t_3;
}
c_Expr* c_FuncCallExpr::p_Semant(){
	DBG_ENTER("FuncCallExpr.Semant")
	c_FuncCallExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<336>");
	gc_assign(m_args,p_SemantArgs(m_args));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<337>");
	c_Expr* t_=m_expr->p_SemantFunc(m_args);
	return t_;
}
void c_FuncCallExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_args);
}
String c_FuncCallExpr::debug(){
	String t="(FuncCallExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("args",&m_args);
	return t;
}
c_SliceExpr::c_SliceExpr(){
	m_expr=0;
	m_from=0;
	m_term=0;
}
c_SliceExpr* c_SliceExpr::m_new(c_Expr* t_expr,c_Expr* t_from,c_Expr* t_term){
	DBG_ENTER("SliceExpr.new")
	c_SliceExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_from,"from")
	DBG_LOCAL(t_term,"term")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1015>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1016>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1017>");
	gc_assign(this->m_from,t_from);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1018>");
	gc_assign(this->m_term,t_term);
	return this;
}
c_SliceExpr* c_SliceExpr::m_new2(){
	DBG_ENTER("SliceExpr.new")
	c_SliceExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1010>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_SliceExpr::p_Copy(){
	DBG_ENTER("SliceExpr.Copy")
	c_SliceExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1022>");
	c_Expr* t_=((new c_SliceExpr)->m_new(p_CopyExpr(m_expr),p_CopyExpr(m_from),p_CopyExpr(m_term)));
	return t_;
}
c_Expr* c_SliceExpr::p_Semant(){
	DBG_ENTER("SliceExpr.Semant")
	c_SliceExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1026>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1028>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1029>");
	if(((dynamic_cast<c_ArrayType*>(m_expr->m_exprType))!=0) || ((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1030>");
		if((m_from)!=0){
			DBG_BLOCK();
			gc_assign(m_from,m_from->p_Semant2((c_Type::m_intType),0));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1031>");
		if((m_term)!=0){
			DBG_BLOCK();
			gc_assign(m_term,m_term->p_Semant2((c_Type::m_intType),0));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1032>");
		gc_assign(m_exprType,m_expr->m_exprType);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1034>");
		bb_config_Err(String(L"Slices can only be used on strings or arrays.",45));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1039>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_SliceExpr::p_Eval(){
	DBG_ENTER("SliceExpr.Eval")
	c_SliceExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1043>");
	int t_from=(this->m_from->p_Eval()).ToInt();
	DBG_LOCAL(t_from,"from")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1044>");
	int t_term=(this->m_term->p_Eval()).ToInt();
	DBG_LOCAL(t_term,"term")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1045>");
	if((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1046>");
		String t_=m_expr->p_Eval().Slice(t_from,t_term);
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1047>");
		if((dynamic_cast<c_ArrayType*>(m_expr->m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1048>");
			bb_config_Err(String(L"TODO!",5));
		}
	}
	return String();
}
String c_SliceExpr::p_Trans(){
	DBG_ENTER("SliceExpr.Trans")
	c_SliceExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1053>");
	String t_=bb_translator__trans->p_TransSliceExpr(this);
	return t_;
}
void c_SliceExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_from);
	gc_mark_q(m_term);
}
String c_SliceExpr::debug(){
	String t="(SliceExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("from",&m_from);
	t+=dbg_decl("term",&m_term);
	return t;
}
c_IndexExpr::c_IndexExpr(){
	m_expr=0;
	m_index=0;
}
c_IndexExpr* c_IndexExpr::m_new(c_Expr* t_expr,c_Expr* t_index){
	DBG_ENTER("IndexExpr.new")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_index,"index")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<951>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<952>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<953>");
	gc_assign(this->m_index,t_index);
	return this;
}
c_IndexExpr* c_IndexExpr::m_new2(){
	DBG_ENTER("IndexExpr.new")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<947>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_IndexExpr::p_Copy(){
	DBG_ENTER("IndexExpr.Copy")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<957>");
	c_Expr* t_=((new c_IndexExpr)->m_new(p_CopyExpr(m_expr),p_CopyExpr(m_index)));
	return t_;
}
c_Expr* c_IndexExpr::p_Semant(){
	DBG_ENTER("IndexExpr.Semant")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<966>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<968>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<969>");
	gc_assign(m_index,m_index->p_Semant2((c_Type::m_intType),0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<971>");
	if((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<972>");
		gc_assign(m_exprType,(c_Type::m_intType));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<973>");
		if((dynamic_cast<c_ArrayType*>(m_expr->m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<974>");
			gc_assign(m_exprType,dynamic_cast<c_ArrayType*>(m_expr->m_exprType)->m_elemType);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<976>");
			bb_config_Err(String(L"Only strings and arrays may be indexed.",39));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<979>");
	if(((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0) && ((dynamic_cast<c_ConstExpr*>(m_expr))!=0) && ((dynamic_cast<c_ConstExpr*>(m_index))!=0)){
		DBG_BLOCK();
		c_Expr* t_2=p_EvalConst();
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<981>");
	c_Expr* t_3=(this);
	return t_3;
}
String c_IndexExpr::p_Eval(){
	DBG_ENTER("IndexExpr.Eval")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<985>");
	if((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<986>");
		String t_str=m_expr->p_Eval();
		DBG_LOCAL(t_str,"str")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<987>");
		int t_idx=(m_index->p_Eval()).ToInt();
		DBG_LOCAL(t_idx,"idx")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<988>");
		if(t_idx<0 || t_idx>=t_str.Length()){
			DBG_BLOCK();
			bb_config_Err(String(L"String index out of range.",26));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<989>");
		String t_=String((int)t_str.At(t_idx));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<991>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
c_Expr* c_IndexExpr::p_SemantSet(String t_op,c_Expr* t_rhs){
	DBG_ENTER("IndexExpr.SemantSet")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<995>");
	p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<996>");
	if((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0){
		DBG_BLOCK();
		bb_config_Err(String(L"Strings are read only.",22));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<997>");
	c_Expr* t_=(this);
	return t_;
}
bool c_IndexExpr::p_SideEffects(){
	DBG_ENTER("IndexExpr.SideEffects")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<962>");
	bool t_=m_expr->p_SideEffects() || m_index->p_SideEffects();
	return t_;
}
String c_IndexExpr::p_Trans(){
	DBG_ENTER("IndexExpr.Trans")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1001>");
	String t_=bb_translator__trans->p_TransIndexExpr(this);
	return t_;
}
String c_IndexExpr::p_TransVar(){
	DBG_ENTER("IndexExpr.TransVar")
	c_IndexExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<1005>");
	String t_=bb_translator__trans->p_TransIndexExpr(this);
	return t_;
}
void c_IndexExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_index);
}
String c_IndexExpr::debug(){
	String t="(IndexExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("index",&m_index);
	return t;
}
c_BinaryExpr::c_BinaryExpr(){
	m_op=String();
	m_lhs=0;
	m_rhs=0;
}
c_BinaryExpr* c_BinaryExpr::m_new(String t_op,c_Expr* t_lhs,c_Expr* t_rhs){
	DBG_ENTER("BinaryExpr.new")
	c_BinaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<728>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<729>");
	this->m_op=t_op;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<730>");
	gc_assign(this->m_lhs,t_lhs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<731>");
	gc_assign(this->m_rhs,t_rhs);
	return this;
}
c_BinaryExpr* c_BinaryExpr::m_new2(){
	DBG_ENTER("BinaryExpr.new")
	c_BinaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<723>");
	c_Expr::m_new();
	return this;
}
String c_BinaryExpr::p_Trans(){
	DBG_ENTER("BinaryExpr.Trans")
	c_BinaryExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<735>");
	String t_=bb_translator__trans->p_TransBinaryExpr(this);
	return t_;
}
void c_BinaryExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_lhs);
	gc_mark_q(m_rhs);
}
String c_BinaryExpr::debug(){
	String t="(BinaryExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("op",&m_op);
	t+=dbg_decl("lhs",&m_lhs);
	t+=dbg_decl("rhs",&m_rhs);
	return t;
}
c_BinaryMathExpr::c_BinaryMathExpr(){
}
c_BinaryMathExpr* c_BinaryMathExpr::m_new(String t_op,c_Expr* t_lhs,c_Expr* t_rhs){
	DBG_ENTER("BinaryMathExpr.new")
	c_BinaryMathExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<743>");
	c_BinaryExpr::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<744>");
	this->m_op=t_op;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<745>");
	gc_assign(this->m_lhs,t_lhs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<746>");
	gc_assign(this->m_rhs,t_rhs);
	return this;
}
c_BinaryMathExpr* c_BinaryMathExpr::m_new2(){
	DBG_ENTER("BinaryMathExpr.new")
	c_BinaryMathExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<741>");
	c_BinaryExpr::m_new2();
	return this;
}
c_Expr* c_BinaryMathExpr::p_Copy(){
	DBG_ENTER("BinaryMathExpr.Copy")
	c_BinaryMathExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<750>");
	c_Expr* t_=((new c_BinaryMathExpr)->m_new(m_op,p_CopyExpr(m_lhs),p_CopyExpr(m_rhs)));
	return t_;
}
c_Expr* c_BinaryMathExpr::p_Semant(){
	DBG_ENTER("BinaryMathExpr.Semant")
	c_BinaryMathExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<754>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<756>");
	gc_assign(m_lhs,m_lhs->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<757>");
	gc_assign(m_rhs,m_rhs->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<759>");
	String t_3=m_op;
	DBG_LOCAL(t_3,"3")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<760>");
	if(t_3==String(L"&",1) || t_3==String(L"~",1) || t_3==String(L"|",1) || t_3==String(L"shl",3) || t_3==String(L"shr",3)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<761>");
		gc_assign(m_exprType,(c_Type::m_intType));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<763>");
		gc_assign(m_exprType,p_BalanceTypes(m_lhs->m_exprType,m_rhs->m_exprType));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<764>");
		if((dynamic_cast<c_StringType*>(m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<765>");
			if(m_op!=String(L"+",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<766>");
				bb_config_Err(String(L"Illegal string operator.",24));
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<768>");
			if(!((dynamic_cast<c_NumericType*>(m_exprType))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<769>");
				bb_config_Err(String(L"Illegal expression type.",24));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<773>");
	gc_assign(m_lhs,m_lhs->p_Cast(m_exprType,0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<774>");
	gc_assign(m_rhs,m_rhs->p_Cast(m_exprType,0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<776>");
	if(((dynamic_cast<c_ConstExpr*>(m_lhs))!=0) && ((dynamic_cast<c_ConstExpr*>(m_rhs))!=0)){
		DBG_BLOCK();
		c_Expr* t_2=p_EvalConst();
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<778>");
	c_Expr* t_4=(this);
	return t_4;
}
String c_BinaryMathExpr::p_Eval(){
	DBG_ENTER("BinaryMathExpr.Eval")
	c_BinaryMathExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<782>");
	String t_lhs=this->m_lhs->p_Eval();
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<783>");
	String t_rhs=this->m_rhs->p_Eval();
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<784>");
	if((dynamic_cast<c_IntType*>(m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<785>");
		int t_x=(t_lhs).ToInt();
		int t_y=(t_rhs).ToInt();
		DBG_LOCAL(t_x,"x")
		DBG_LOCAL(t_y,"y")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<786>");
		String t_4=m_op;
		DBG_LOCAL(t_4,"4")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<787>");
		if(t_4==String(L"/",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<788>");
			if(!((t_y)!=0)){
				DBG_BLOCK();
				bb_config_Err(String(L"Divide by zero error.",21));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<789>");
			String t_=String(t_x/t_y);
			return t_;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<790>");
			if(t_4==String(L"*",1)){
				DBG_BLOCK();
				String t_2=String(t_x*t_y);
				return t_2;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<791>");
				if(t_4==String(L"mod",3)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<792>");
					if(!((t_y)!=0)){
						DBG_BLOCK();
						bb_config_Err(String(L"Divide by zero error.",21));
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<793>");
					String t_3=String(t_x % t_y);
					return t_3;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<794>");
					if(t_4==String(L"shl",3)){
						DBG_BLOCK();
						String t_5=String(t_x<<t_y);
						return t_5;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<795>");
						if(t_4==String(L"shr",3)){
							DBG_BLOCK();
							String t_6=String(t_x>>t_y);
							return t_6;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<796>");
							if(t_4==String(L"+",1)){
								DBG_BLOCK();
								String t_7=String(t_x+t_y);
								return t_7;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<797>");
								if(t_4==String(L"-",1)){
									DBG_BLOCK();
									String t_8=String(t_x-t_y);
									return t_8;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<798>");
									if(t_4==String(L"&",1)){
										DBG_BLOCK();
										String t_9=String(t_x&t_y);
										return t_9;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<799>");
										if(t_4==String(L"~",1)){
											DBG_BLOCK();
											String t_10=String(t_x^t_y);
											return t_10;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<800>");
											if(t_4==String(L"|",1)){
												DBG_BLOCK();
												String t_11=String(t_x|t_y);
												return t_11;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<802>");
		if((dynamic_cast<c_FloatType*>(m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<803>");
			Float t_x2=(t_lhs).ToFloat();
			Float t_y2=(t_rhs).ToFloat();
			DBG_LOCAL(t_x2,"x")
			DBG_LOCAL(t_y2,"y")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<804>");
			String t_52=m_op;
			DBG_LOCAL(t_52,"5")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<805>");
			if(t_52==String(L"/",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<806>");
				if(!((t_y2)!=0)){
					DBG_BLOCK();
					bb_config_Err(String(L"Divide by zero error.",21));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<807>");
				String t_12=String(t_x2/t_y2);
				return t_12;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<808>");
				if(t_52==String(L"*",1)){
					DBG_BLOCK();
					String t_13=String(t_x2*t_y2);
					return t_13;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<809>");
					if(t_52==String(L"mod",3)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<810>");
						if(!((t_y2)!=0)){
							DBG_BLOCK();
							bb_config_Err(String(L"Divide by zero error.",21));
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<811>");
						String t_14=String((Float)fmod(t_x2,t_y2));
						return t_14;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<812>");
						if(t_52==String(L"+",1)){
							DBG_BLOCK();
							String t_15=String(t_x2+t_y2);
							return t_15;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<813>");
							if(t_52==String(L"-",1)){
								DBG_BLOCK();
								String t_16=String(t_x2-t_y2);
								return t_16;
							}
						}
					}
				}
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<815>");
			if((dynamic_cast<c_StringType*>(m_exprType))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<816>");
				String t_62=m_op;
				DBG_LOCAL(t_62,"6")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<817>");
				if(t_62==String(L"+",1)){
					DBG_BLOCK();
					String t_17=t_lhs+t_rhs;
					return t_17;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<820>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
void c_BinaryMathExpr::mark(){
	c_BinaryExpr::mark();
}
String c_BinaryMathExpr::debug(){
	String t="(BinaryMathExpr)\n";
	t=c_BinaryExpr::debug()+t;
	return t;
}
c_BinaryCompareExpr::c_BinaryCompareExpr(){
	m_ty=0;
}
c_BinaryCompareExpr* c_BinaryCompareExpr::m_new(String t_op,c_Expr* t_lhs,c_Expr* t_rhs){
	DBG_ENTER("BinaryCompareExpr.new")
	c_BinaryCompareExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<829>");
	c_BinaryExpr::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<830>");
	this->m_op=t_op;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<831>");
	gc_assign(this->m_lhs,t_lhs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<832>");
	gc_assign(this->m_rhs,t_rhs);
	return this;
}
c_BinaryCompareExpr* c_BinaryCompareExpr::m_new2(){
	DBG_ENTER("BinaryCompareExpr.new")
	c_BinaryCompareExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<826>");
	c_BinaryExpr::m_new2();
	return this;
}
c_Expr* c_BinaryCompareExpr::p_Copy(){
	DBG_ENTER("BinaryCompareExpr.Copy")
	c_BinaryCompareExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<836>");
	c_Expr* t_=((new c_BinaryCompareExpr)->m_new(m_op,p_CopyExpr(m_lhs),p_CopyExpr(m_rhs)));
	return t_;
}
c_Expr* c_BinaryCompareExpr::p_Semant(){
	DBG_ENTER("BinaryCompareExpr.Semant")
	c_BinaryCompareExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<840>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<842>");
	gc_assign(m_lhs,m_lhs->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<843>");
	gc_assign(m_rhs,m_rhs->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<845>");
	gc_assign(m_ty,p_BalanceTypes(m_lhs->m_exprType,m_rhs->m_exprType));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<847>");
	if((dynamic_cast<c_ArrayType*>(m_ty))!=0){
		DBG_BLOCK();
		bb_config_Err(String(L"Arrays cannot be compared.",26));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<849>");
	if(((dynamic_cast<c_BoolType*>(m_ty))!=0) && m_op!=String(L"=",1) && m_op!=String(L"<>",2)){
		DBG_BLOCK();
		bb_config_Err(String(L"Bools can only be compared for equality.",40));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<851>");
	if(((dynamic_cast<c_ObjectType*>(m_ty))!=0) && m_op!=String(L"=",1) && m_op!=String(L"<>",2)){
		DBG_BLOCK();
		bb_config_Err(String(L"Objects can only be compared for equality.",42));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<853>");
	gc_assign(m_lhs,m_lhs->p_Cast(m_ty,0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<854>");
	gc_assign(m_rhs,m_rhs->p_Cast(m_ty,0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<856>");
	gc_assign(m_exprType,(c_Type::m_boolType));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<858>");
	if(((dynamic_cast<c_ConstExpr*>(m_lhs))!=0) && ((dynamic_cast<c_ConstExpr*>(m_rhs))!=0)){
		DBG_BLOCK();
		c_Expr* t_2=p_EvalConst();
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<860>");
	c_Expr* t_3=(this);
	return t_3;
}
String c_BinaryCompareExpr::p_Eval(){
	DBG_ENTER("BinaryCompareExpr.Eval")
	c_BinaryCompareExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<864>");
	int t_r=-1;
	DBG_LOCAL(t_r,"r")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<865>");
	if((dynamic_cast<c_BoolType*>(m_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<866>");
		String t_lhs=this->m_lhs->p_Eval();
		DBG_LOCAL(t_lhs,"lhs")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<867>");
		String t_rhs=this->m_rhs->p_Eval();
		DBG_LOCAL(t_rhs,"rhs")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<868>");
		String t_7=m_op;
		DBG_LOCAL(t_7,"7")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<869>");
		if(t_7==String(L"=",1)){
			DBG_BLOCK();
			t_r=((t_lhs==t_rhs)?1:0);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<870>");
			if(t_7==String(L"<>",2)){
				DBG_BLOCK();
				t_r=((t_lhs!=t_rhs)?1:0);
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<872>");
		if((dynamic_cast<c_IntType*>(m_ty))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<873>");
			int t_lhs2=(this->m_lhs->p_Eval()).ToInt();
			DBG_LOCAL(t_lhs2,"lhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<874>");
			int t_rhs2=(this->m_rhs->p_Eval()).ToInt();
			DBG_LOCAL(t_rhs2,"rhs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<875>");
			String t_8=m_op;
			DBG_LOCAL(t_8,"8")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<876>");
			if(t_8==String(L"=",1)){
				DBG_BLOCK();
				t_r=((t_lhs2==t_rhs2)?1:0);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<877>");
				if(t_8==String(L"<>",2)){
					DBG_BLOCK();
					t_r=((t_lhs2!=t_rhs2)?1:0);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<878>");
					if(t_8==String(L"<",1)){
						DBG_BLOCK();
						t_r=((t_lhs2<t_rhs2)?1:0);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<879>");
						if(t_8==String(L"<=",2)){
							DBG_BLOCK();
							t_r=((t_lhs2<=t_rhs2)?1:0);
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<880>");
							if(t_8==String(L">",1)){
								DBG_BLOCK();
								t_r=((t_lhs2>t_rhs2)?1:0);
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<881>");
								if(t_8==String(L">=",2)){
									DBG_BLOCK();
									t_r=((t_lhs2>=t_rhs2)?1:0);
								}
							}
						}
					}
				}
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<883>");
			if((dynamic_cast<c_FloatType*>(m_ty))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<884>");
				Float t_lhs3=(this->m_lhs->p_Eval()).ToFloat();
				DBG_LOCAL(t_lhs3,"lhs")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<885>");
				Float t_rhs3=(this->m_rhs->p_Eval()).ToFloat();
				DBG_LOCAL(t_rhs3,"rhs")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<886>");
				String t_9=m_op;
				DBG_LOCAL(t_9,"9")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<887>");
				if(t_9==String(L"=",1)){
					DBG_BLOCK();
					t_r=((t_lhs3==t_rhs3)?1:0);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<888>");
					if(t_9==String(L"<>",2)){
						DBG_BLOCK();
						t_r=((t_lhs3!=t_rhs3)?1:0);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<889>");
						if(t_9==String(L"<",1)){
							DBG_BLOCK();
							t_r=((t_lhs3<t_rhs3)?1:0);
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<890>");
							if(t_9==String(L"<=",2)){
								DBG_BLOCK();
								t_r=((t_lhs3<=t_rhs3)?1:0);
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<891>");
								if(t_9==String(L">",1)){
									DBG_BLOCK();
									t_r=((t_lhs3>t_rhs3)?1:0);
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<892>");
									if(t_9==String(L">=",2)){
										DBG_BLOCK();
										t_r=((t_lhs3>=t_rhs3)?1:0);
									}
								}
							}
						}
					}
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<894>");
				if((dynamic_cast<c_StringType*>(m_ty))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<895>");
					String t_lhs4=this->m_lhs->p_Eval();
					DBG_LOCAL(t_lhs4,"lhs")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<896>");
					String t_rhs4=this->m_rhs->p_Eval();
					DBG_LOCAL(t_rhs4,"rhs")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<897>");
					String t_10=m_op;
					DBG_LOCAL(t_10,"10")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<898>");
					if(t_10==String(L"=",1)){
						DBG_BLOCK();
						t_r=((t_lhs4==t_rhs4)?1:0);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<899>");
						if(t_10==String(L"<>",2)){
							DBG_BLOCK();
							t_r=((t_lhs4!=t_rhs4)?1:0);
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<900>");
							if(t_10==String(L"<",1)){
								DBG_BLOCK();
								t_r=((t_lhs4<t_rhs4)?1:0);
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<901>");
								if(t_10==String(L"<=",2)){
									DBG_BLOCK();
									t_r=((t_lhs4<=t_rhs4)?1:0);
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<902>");
									if(t_10==String(L">",1)){
										DBG_BLOCK();
										t_r=((t_lhs4>t_rhs4)?1:0);
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<903>");
										if(t_10==String(L">=",2)){
											DBG_BLOCK();
											t_r=((t_lhs4>=t_rhs4)?1:0);
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<906>");
	if(t_r==1){
		DBG_BLOCK();
		return String(L"1",1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<907>");
	if(t_r==0){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<908>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
void c_BinaryCompareExpr::mark(){
	c_BinaryExpr::mark();
	gc_mark_q(m_ty);
}
String c_BinaryCompareExpr::debug(){
	String t="(BinaryCompareExpr)\n";
	t=c_BinaryExpr::debug()+t;
	t+=dbg_decl("ty",&m_ty);
	return t;
}
c_BinaryLogicExpr::c_BinaryLogicExpr(){
}
c_BinaryLogicExpr* c_BinaryLogicExpr::m_new(String t_op,c_Expr* t_lhs,c_Expr* t_rhs){
	DBG_ENTER("BinaryLogicExpr.new")
	c_BinaryLogicExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<915>");
	c_BinaryExpr::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<916>");
	this->m_op=t_op;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<917>");
	gc_assign(this->m_lhs,t_lhs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<918>");
	gc_assign(this->m_rhs,t_rhs);
	return this;
}
c_BinaryLogicExpr* c_BinaryLogicExpr::m_new2(){
	DBG_ENTER("BinaryLogicExpr.new")
	c_BinaryLogicExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<913>");
	c_BinaryExpr::m_new2();
	return this;
}
c_Expr* c_BinaryLogicExpr::p_Copy(){
	DBG_ENTER("BinaryLogicExpr.Copy")
	c_BinaryLogicExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<922>");
	c_Expr* t_=((new c_BinaryLogicExpr)->m_new(m_op,p_CopyExpr(m_lhs),p_CopyExpr(m_rhs)));
	return t_;
}
c_Expr* c_BinaryLogicExpr::p_Semant(){
	DBG_ENTER("BinaryLogicExpr.Semant")
	c_BinaryLogicExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<926>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<928>");
	gc_assign(m_lhs,m_lhs->p_Semant2((c_Type::m_boolType),1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<929>");
	gc_assign(m_rhs,m_rhs->p_Semant2((c_Type::m_boolType),1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<931>");
	gc_assign(m_exprType,(c_Type::m_boolType));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<933>");
	if(((dynamic_cast<c_ConstExpr*>(m_lhs))!=0) && ((dynamic_cast<c_ConstExpr*>(m_rhs))!=0)){
		DBG_BLOCK();
		c_Expr* t_2=p_EvalConst();
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<935>");
	c_Expr* t_3=(this);
	return t_3;
}
String c_BinaryLogicExpr::p_Eval(){
	DBG_ENTER("BinaryLogicExpr.Eval")
	c_BinaryLogicExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<939>");
	String t_11=m_op;
	DBG_LOCAL(t_11,"11")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<940>");
	if(t_11==String(L"and",3)){
		DBG_BLOCK();
		if(((m_lhs->p_Eval()).Length()!=0) && ((m_rhs->p_Eval()).Length()!=0)){
			DBG_BLOCK();
			return String(L"1",1);
		}else{
			DBG_BLOCK();
			return String();
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<941>");
		if(t_11==String(L"or",2)){
			DBG_BLOCK();
			if(((m_lhs->p_Eval()).Length()!=0) || ((m_rhs->p_Eval()).Length()!=0)){
				DBG_BLOCK();
				return String(L"1",1);
			}else{
				DBG_BLOCK();
				return String();
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<943>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
void c_BinaryLogicExpr::mark(){
	c_BinaryExpr::mark();
}
String c_BinaryLogicExpr::debug(){
	String t="(BinaryLogicExpr)\n";
	t=c_BinaryExpr::debug()+t;
	return t;
}
c_VarDecl::c_VarDecl(){
}
c_VarDecl* c_VarDecl::m_new(){
	DBG_ENTER("VarDecl.new")
	c_VarDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<270>");
	c_ValDecl::m_new();
	return this;
}
void c_VarDecl::mark(){
	c_ValDecl::mark();
}
String c_VarDecl::debug(){
	String t="(VarDecl)\n";
	t=c_ValDecl::debug()+t;
	return t;
}
c_GlobalDecl::c_GlobalDecl(){
}
c_GlobalDecl* c_GlobalDecl::m_new(String t_ident,int t_attrs,c_Type* t_type,c_Expr* t_init){
	DBG_ENTER("GlobalDecl.new")
	c_GlobalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_type,"type")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<314>");
	c_VarDecl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<315>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<316>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<317>");
	gc_assign(this->m_type,t_type);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<318>");
	gc_assign(this->m_init,t_init);
	return this;
}
c_GlobalDecl* c_GlobalDecl::m_new2(){
	DBG_ENTER("GlobalDecl.new")
	c_GlobalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<312>");
	c_VarDecl::m_new();
	return this;
}
String c_GlobalDecl::p_ToString(){
	DBG_ENTER("GlobalDecl.ToString")
	c_GlobalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<326>");
	String t_=String(L"Global ",7)+c_ValDecl::p_ToString();
	return t_;
}
c_Decl* c_GlobalDecl::p_OnCopy(){
	DBG_ENTER("GlobalDecl.OnCopy")
	c_GlobalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<322>");
	c_Decl* t_=((new c_GlobalDecl)->m_new(m_ident,m_attrs,m_type,p_CopyInit()));
	return t_;
}
void c_GlobalDecl::mark(){
	c_VarDecl::mark();
}
String c_GlobalDecl::debug(){
	String t="(GlobalDecl)\n";
	t=c_VarDecl::debug()+t;
	return t;
}
c_FieldDecl::c_FieldDecl(){
}
c_FieldDecl* c_FieldDecl::m_new(String t_ident,int t_attrs,c_Type* t_type,c_Expr* t_init){
	DBG_ENTER("FieldDecl.new")
	c_FieldDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_type,"type")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<333>");
	c_VarDecl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<334>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<335>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<336>");
	gc_assign(this->m_type,t_type);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<337>");
	gc_assign(this->m_init,t_init);
	return this;
}
c_FieldDecl* c_FieldDecl::m_new2(){
	DBG_ENTER("FieldDecl.new")
	c_FieldDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<331>");
	c_VarDecl::m_new();
	return this;
}
String c_FieldDecl::p_ToString(){
	DBG_ENTER("FieldDecl.ToString")
	c_FieldDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<345>");
	String t_=String(L"Field ",6)+c_ValDecl::p_ToString();
	return t_;
}
c_Decl* c_FieldDecl::p_OnCopy(){
	DBG_ENTER("FieldDecl.OnCopy")
	c_FieldDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<341>");
	c_Decl* t_=((new c_FieldDecl)->m_new(m_ident,m_attrs,m_type,p_CopyInit()));
	return t_;
}
void c_FieldDecl::mark(){
	c_VarDecl::mark();
}
String c_FieldDecl::debug(){
	String t="(FieldDecl)\n";
	t=c_VarDecl::debug()+t;
	return t;
}
c_LocalDecl::c_LocalDecl(){
}
c_LocalDecl* c_LocalDecl::m_new(String t_ident,int t_attrs,c_Type* t_type,c_Expr* t_init){
	DBG_ENTER("LocalDecl.new")
	c_LocalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_type,"type")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<276>");
	c_VarDecl::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<277>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<278>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<279>");
	gc_assign(this->m_type,t_type);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<280>");
	gc_assign(this->m_init,t_init);
	return this;
}
c_LocalDecl* c_LocalDecl::m_new2(){
	DBG_ENTER("LocalDecl.new")
	c_LocalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<274>");
	c_VarDecl::m_new();
	return this;
}
String c_LocalDecl::p_ToString(){
	DBG_ENTER("LocalDecl.ToString")
	c_LocalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<288>");
	String t_=String(L"Local ",6)+c_ValDecl::p_ToString();
	return t_;
}
c_Decl* c_LocalDecl::p_OnCopy(){
	DBG_ENTER("LocalDecl.OnCopy")
	c_LocalDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<284>");
	c_Decl* t_=((new c_LocalDecl)->m_new(m_ident,m_attrs,m_type,p_CopyInit()));
	return t_;
}
void c_LocalDecl::mark(){
	c_VarDecl::mark();
}
String c_LocalDecl::debug(){
	String t="(LocalDecl)\n";
	t=c_VarDecl::debug()+t;
	return t;
}
c_Enumerator2::c_Enumerator2(){
	m__list=0;
	m__curr=0;
}
c_Enumerator2* c_Enumerator2::m_new(c_List3* t_list){
	DBG_ENTER("Enumerator.new")
	c_Enumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_list,"list")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<326>");
	gc_assign(m__list,t_list);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<327>");
	gc_assign(m__curr,t_list->m__head->m__succ);
	return this;
}
c_Enumerator2* c_Enumerator2::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<323>");
	return this;
}
bool c_Enumerator2::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<331>");
	while(m__curr->m__succ->m__pred!=m__curr){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<332>");
		gc_assign(m__curr,m__curr->m__succ);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<334>");
	bool t_=m__curr!=m__list->m__head;
	return t_;
}
c_Decl* c_Enumerator2::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<338>");
	c_Decl* t_data=m__curr->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<339>");
	gc_assign(m__curr,m__curr->m__succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<340>");
	return t_data;
}
void c_Enumerator2::mark(){
	Object::mark();
	gc_mark_q(m__list);
	gc_mark_q(m__curr);
}
String c_Enumerator2::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("_list",&m__list);
	t+=dbg_decl("_curr",&m__curr);
	return t;
}
c_Stack5::c_Stack5(){
	m_data=Array<c_IdentType* >();
	m_length=0;
}
c_Stack5* c_Stack5::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack5 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack5* c_Stack5::m_new2(Array<c_IdentType* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack5::p_Push13(c_IdentType* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack5::p_Push14(Array<c_IdentType* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push13(t_values.At(t_offset+t_i));
	}
}
void c_Stack5::p_Push15(Array<c_IdentType* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push14(t_values,t_offset,t_values.Length()-t_offset);
}
Array<c_IdentType* > c_Stack5::p_ToArray(){
	DBG_ENTER("Stack.ToArray")
	c_Stack5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<18>");
	Array<c_IdentType* > t_t=Array<c_IdentType* >(m_length);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<19>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<20>");
		gc_assign(t_t.At(t_i),m_data.At(t_i));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<22>");
	return t_t;
}
void c_Stack5::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack5::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_ObjectType::c_ObjectType(){
	m_classDecl=0;
}
c_ObjectType* c_ObjectType::m_new(c_ClassDecl* t_classDecl){
	DBG_ENTER("ObjectType.new")
	c_ObjectType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<202>");
	c_Type::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<203>");
	gc_assign(this->m_classDecl,t_classDecl);
	return this;
}
c_ObjectType* c_ObjectType::m_new2(){
	DBG_ENTER("ObjectType.new")
	c_ObjectType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<199>");
	c_Type::m_new();
	return this;
}
int c_ObjectType::p_EqualsType(c_Type* t_ty){
	DBG_ENTER("ObjectType.EqualsType")
	c_ObjectType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<207>");
	c_ObjectType* t_objty=dynamic_cast<c_ObjectType*>(t_ty);
	DBG_LOCAL(t_objty,"objty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<208>");
	int t_=((((t_objty)!=0) && m_classDecl==t_objty->m_classDecl)?1:0);
	return t_;
}
c_ClassDecl* c_ObjectType::p_GetClass(){
	DBG_ENTER("ObjectType.GetClass")
	c_ObjectType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<231>");
	return m_classDecl;
}
int c_ObjectType::p_ExtendsType(c_Type* t_ty){
	DBG_ENTER("ObjectType.ExtendsType")
	c_ObjectType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<212>");
	c_ObjectType* t_objty=dynamic_cast<c_ObjectType*>(t_ty);
	DBG_LOCAL(t_objty,"objty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<213>");
	if((t_objty)!=0){
		DBG_BLOCK();
		int t_=m_classDecl->p_ExtendsClass(t_objty->m_classDecl);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<214>");
	String t_op=String();
	DBG_LOCAL(t_op,"op")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<215>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<216>");
		t_op=String(L"ToBool",6);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<217>");
		if((dynamic_cast<c_IntType*>(t_ty))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<218>");
			t_op=String(L"ToInt",5);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<219>");
			if((dynamic_cast<c_FloatType*>(t_ty))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<220>");
				t_op=String(L"ToFloat",7);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<221>");
				if((dynamic_cast<c_StringType*>(t_ty))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<222>");
					t_op=String(L"ToString",8);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<224>");
					return 0;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<226>");
	c_FuncDecl* t_fdecl=p_GetClass()->p_FindFuncDecl(t_op,Array<c_Expr* >(),1);
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<227>");
	int t_2=((((t_fdecl)!=0) && t_fdecl->p_IsMethod() && ((t_fdecl->m_retType->p_EqualsType(t_ty))!=0))?1:0);
	return t_2;
}
String c_ObjectType::p_ToString(){
	DBG_ENTER("ObjectType.ToString")
	c_ObjectType *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/type.monkey<235>");
	String t_=m_classDecl->p_ToString();
	return t_;
}
void c_ObjectType::mark(){
	c_Type::mark();
	gc_mark_q(m_classDecl);
}
String c_ObjectType::debug(){
	String t="(ObjectType)\n";
	t=c_Type::debug()+t;
	t+=dbg_decl("classDecl",&m_classDecl);
	return t;
}
c_List6::c_List6(){
	m__head=((new c_HeadNode6)->m_new());
}
c_List6* c_List6::m_new(){
	DBG_ENTER("List.new")
	c_List6 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node11* c_List6::p_AddLast6(c_ClassDecl* t_data){
	DBG_ENTER("List.AddLast")
	c_List6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node11* t_=(new c_Node11)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List6* c_List6::m_new2(Array<c_ClassDecl* > t_data){
	DBG_ENTER("List.new")
	c_List6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_ClassDecl* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast6(t_t);
	}
	return this;
}
c_Enumerator4* c_List6::p_ObjectEnumerator(){
	DBG_ENTER("List.ObjectEnumerator")
	c_List6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<186>");
	c_Enumerator4* t_=(new c_Enumerator4)->m_new(this);
	return t_;
}
void c_List6::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List6::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_Node11::c_Node11(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node11* c_Node11::m_new(c_Node11* t_succ,c_Node11* t_pred,c_ClassDecl* t_data){
	DBG_ENTER("Node.new")
	c_Node11 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node11* c_Node11::m_new2(){
	DBG_ENTER("Node.new")
	c_Node11 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
void c_Node11::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node11::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode6::c_HeadNode6(){
}
c_HeadNode6* c_HeadNode6::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node11::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode6::mark(){
	c_Node11::mark();
}
String c_HeadNode6::debug(){
	String t="(HeadNode)\n";
	t=c_Node11::debug()+t;
	return t;
}
c_ArgDecl::c_ArgDecl(){
}
c_ArgDecl* c_ArgDecl::m_new(String t_ident,int t_attrs,c_Type* t_type,c_Expr* t_init){
	DBG_ENTER("ArgDecl.new")
	c_ArgDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_LOCAL(t_attrs,"attrs")
	DBG_LOCAL(t_type,"type")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<295>");
	c_LocalDecl::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<296>");
	this->m_ident=t_ident;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<297>");
	this->m_attrs=t_attrs;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<298>");
	gc_assign(this->m_type,t_type);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<299>");
	gc_assign(this->m_init,t_init);
	return this;
}
c_ArgDecl* c_ArgDecl::m_new2(){
	DBG_ENTER("ArgDecl.new")
	c_ArgDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<293>");
	c_LocalDecl::m_new2();
	return this;
}
String c_ArgDecl::p_ToString(){
	DBG_ENTER("ArgDecl.ToString")
	c_ArgDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<307>");
	String t_=c_LocalDecl::p_ToString();
	return t_;
}
c_Decl* c_ArgDecl::p_OnCopy(){
	DBG_ENTER("ArgDecl.OnCopy")
	c_ArgDecl *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/decl.monkey<303>");
	c_Decl* t_=((new c_ArgDecl)->m_new(m_ident,m_attrs,m_type,p_CopyInit()));
	return t_;
}
void c_ArgDecl::mark(){
	c_LocalDecl::mark();
}
String c_ArgDecl::debug(){
	String t="(ArgDecl)\n";
	t=c_LocalDecl::debug()+t;
	return t;
}
c_Stack6::c_Stack6(){
	m_data=Array<c_ArgDecl* >();
	m_length=0;
}
c_Stack6* c_Stack6::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack6 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack6* c_Stack6::m_new2(Array<c_ArgDecl* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack6::p_Push16(c_ArgDecl* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack6::p_Push17(Array<c_ArgDecl* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push16(t_values.At(t_offset+t_i));
	}
}
void c_Stack6::p_Push18(Array<c_ArgDecl* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push17(t_values,t_offset,t_values.Length()-t_offset);
}
Array<c_ArgDecl* > c_Stack6::p_ToArray(){
	DBG_ENTER("Stack.ToArray")
	c_Stack6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<18>");
	Array<c_ArgDecl* > t_t=Array<c_ArgDecl* >(m_length);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<19>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<20>");
		gc_assign(t_t.At(t_i),m_data.At(t_i));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<22>");
	return t_t;
}
void c_Stack6::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack6::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_List7::c_List7(){
	m__head=((new c_HeadNode7)->m_new());
}
c_List7* c_List7::m_new(){
	DBG_ENTER("List.new")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node12* c_List7::p_AddLast7(c_BlockDecl* t_data){
	DBG_ENTER("List.AddLast")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node12* t_=(new c_Node12)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List7* c_List7::m_new2(Array<c_BlockDecl* > t_data){
	DBG_ENTER("List.new")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_BlockDecl* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_BlockDecl* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast7(t_t);
	}
	return this;
}
bool c_List7::p_IsEmpty(){
	DBG_ENTER("List.IsEmpty")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<50>");
	bool t_=m__head->m__succ==m__head;
	return t_;
}
c_BlockDecl* c_List7::p_RemoveLast(){
	DBG_ENTER("List.RemoveLast")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<96>");
	if(p_IsEmpty()){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on empty list",31));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<98>");
	c_BlockDecl* t_data=m__head->m__pred->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<99>");
	m__head->m__pred->p_Remove();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<100>");
	return t_data;
}
bool c_List7::p_Equals3(c_BlockDecl* t_lhs,c_BlockDecl* t_rhs){
	DBG_ENTER("List.Equals")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<28>");
	bool t_=t_lhs==t_rhs;
	return t_;
}
c_Node12* c_List7::p_FindLast5(c_BlockDecl* t_value,c_Node12* t_start){
	DBG_ENTER("List.FindLast")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_start,"start")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<128>");
	while(t_start!=m__head){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<129>");
		if(p_Equals3(t_value,t_start->m__data)){
			DBG_BLOCK();
			return t_start;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<130>");
		t_start=t_start->m__pred;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<132>");
	return 0;
}
c_Node12* c_List7::p_FindLast6(c_BlockDecl* t_value){
	DBG_ENTER("List.FindLast")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<124>");
	c_Node12* t_=p_FindLast5(t_value,m__head->m__pred);
	return t_;
}
void c_List7::p_RemoveLast4(c_BlockDecl* t_value){
	DBG_ENTER("List.RemoveLast")
	c_List7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<146>");
	c_Node12* t_node=p_FindLast6(t_value);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<147>");
	if((t_node)!=0){
		DBG_BLOCK();
		t_node->p_Remove();
	}
}
void c_List7::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List7::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_Node12::c_Node12(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node12* c_Node12::m_new(c_Node12* t_succ,c_Node12* t_pred,c_BlockDecl* t_data){
	DBG_ENTER("Node.new")
	c_Node12 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node12* c_Node12::m_new2(){
	DBG_ENTER("Node.new")
	c_Node12 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
int c_Node12::p_Remove(){
	DBG_ENTER("Node.Remove")
	c_Node12 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<274>");
	if(m__succ->m__pred!=this){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on removed node",33));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<276>");
	gc_assign(m__succ->m__pred,m__pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<277>");
	gc_assign(m__pred->m__succ,m__succ);
	return 0;
}
void c_Node12::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node12::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode7::c_HeadNode7(){
}
c_HeadNode7* c_HeadNode7::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node12::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode7::mark(){
	c_Node12::mark();
}
String c_HeadNode7::debug(){
	String t="(HeadNode)\n";
	t=c_Node12::debug()+t;
	return t;
}
c_DeclStmt::c_DeclStmt(){
	m_decl=0;
}
c_DeclStmt* c_DeclStmt::m_new(c_Decl* t_decl){
	DBG_ENTER("DeclStmt.new")
	c_DeclStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<39>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<40>");
	gc_assign(this->m_decl,t_decl);
	return this;
}
c_DeclStmt* c_DeclStmt::m_new2(String t_id,c_Type* t_ty,c_Expr* t_init){
	DBG_ENTER("DeclStmt.new")
	c_DeclStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_id,"id")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<43>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<44>");
	gc_assign(this->m_decl,((new c_LocalDecl)->m_new(t_id,0,t_ty,t_init)));
	return this;
}
c_DeclStmt* c_DeclStmt::m_new3(){
	DBG_ENTER("DeclStmt.new")
	c_DeclStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<36>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_DeclStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("DeclStmt.OnCopy")
	c_DeclStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<48>");
	c_Stmt* t_=((new c_DeclStmt)->m_new(m_decl->p_Copy()));
	return t_;
}
int c_DeclStmt::p_OnSemant(){
	DBG_ENTER("DeclStmt.OnSemant")
	c_DeclStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<52>");
	m_decl->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<53>");
	bb_decl__env->p_InsertDecl(m_decl);
	return 0;
}
String c_DeclStmt::p_Trans(){
	DBG_ENTER("DeclStmt.Trans")
	c_DeclStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<57>");
	String t_=bb_translator__trans->p_TransDeclStmt(this);
	return t_;
}
void c_DeclStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_decl);
}
String c_DeclStmt::debug(){
	String t="(DeclStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("decl",&m_decl);
	return t;
}
c_ReturnStmt::c_ReturnStmt(){
	m_expr=0;
}
c_ReturnStmt* c_ReturnStmt::m_new(c_Expr* t_expr){
	DBG_ENTER("ReturnStmt.new")
	c_ReturnStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<196>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<197>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_ReturnStmt* c_ReturnStmt::m_new2(){
	DBG_ENTER("ReturnStmt.new")
	c_ReturnStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<193>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_ReturnStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("ReturnStmt.OnCopy")
	c_ReturnStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<201>");
	if((m_expr)!=0){
		DBG_BLOCK();
		c_Stmt* t_=((new c_ReturnStmt)->m_new(m_expr->p_Copy()));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<202>");
	c_Stmt* t_2=((new c_ReturnStmt)->m_new(0));
	return t_2;
}
int c_ReturnStmt::p_OnSemant(){
	DBG_ENTER("ReturnStmt.OnSemant")
	c_ReturnStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<206>");
	c_FuncDecl* t_fdecl=bb_decl__env->p_FuncScope();
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<207>");
	if((m_expr)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<208>");
		if(t_fdecl->p_IsCtor()){
			DBG_BLOCK();
			bb_config_Err(String(L"Constructors may not return a value.",36));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<209>");
		if((dynamic_cast<c_VoidType*>(t_fdecl->m_retType))!=0){
			DBG_BLOCK();
			bb_config_Err(String(L"Void functions may not return a value.",38));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<210>");
		gc_assign(m_expr,m_expr->p_Semant2(t_fdecl->m_retType,0));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<211>");
		if(t_fdecl->p_IsCtor()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<212>");
			gc_assign(m_expr,((new c_SelfExpr)->m_new())->p_Semant());
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<213>");
			if(!((dynamic_cast<c_VoidType*>(t_fdecl->m_retType))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<214>");
				if((bb_decl__env->p_ModuleScope()->p_IsStrict())!=0){
					DBG_BLOCK();
					bb_config_Err(String(L"Missing return expression.",26));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<215>");
				gc_assign(m_expr,((new c_ConstExpr)->m_new(t_fdecl->m_retType,String()))->p_Semant());
			}
		}
	}
	return 0;
}
String c_ReturnStmt::p_Trans(){
	DBG_ENTER("ReturnStmt.Trans")
	c_ReturnStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<220>");
	String t_=bb_translator__trans->p_TransReturnStmt(this);
	return t_;
}
void c_ReturnStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_expr);
}
String c_ReturnStmt::debug(){
	String t="(ReturnStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	return t;
}
c_BreakStmt::c_BreakStmt(){
}
c_BreakStmt* c_BreakStmt::m_new(){
	DBG_ENTER("BreakStmt.new")
	c_BreakStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<224>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_BreakStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("BreakStmt.OnCopy")
	c_BreakStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<227>");
	c_Stmt* t_=((new c_BreakStmt)->m_new());
	return t_;
}
int c_BreakStmt::p_OnSemant(){
	DBG_ENTER("BreakStmt.OnSemant")
	c_BreakStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<231>");
	if(!((bb_decl__loopnest)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Exit statement must appear inside a loop.",41));
	}
	return 0;
}
String c_BreakStmt::p_Trans(){
	DBG_ENTER("BreakStmt.Trans")
	c_BreakStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<235>");
	String t_=bb_translator__trans->p_TransBreakStmt(this);
	return t_;
}
void c_BreakStmt::mark(){
	c_Stmt::mark();
}
String c_BreakStmt::debug(){
	String t="(BreakStmt)\n";
	t=c_Stmt::debug()+t;
	return t;
}
c_ContinueStmt::c_ContinueStmt(){
}
c_ContinueStmt* c_ContinueStmt::m_new(){
	DBG_ENTER("ContinueStmt.new")
	c_ContinueStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<240>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_ContinueStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("ContinueStmt.OnCopy")
	c_ContinueStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<243>");
	c_Stmt* t_=((new c_ContinueStmt)->m_new());
	return t_;
}
int c_ContinueStmt::p_OnSemant(){
	DBG_ENTER("ContinueStmt.OnSemant")
	c_ContinueStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<247>");
	if(!((bb_decl__loopnest)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Continue statement must appear inside a loop.",45));
	}
	return 0;
}
String c_ContinueStmt::p_Trans(){
	DBG_ENTER("ContinueStmt.Trans")
	c_ContinueStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<251>");
	String t_=bb_translator__trans->p_TransContinueStmt(this);
	return t_;
}
void c_ContinueStmt::mark(){
	c_Stmt::mark();
}
String c_ContinueStmt::debug(){
	String t="(ContinueStmt)\n";
	t=c_Stmt::debug()+t;
	return t;
}
c_IfStmt::c_IfStmt(){
	m_expr=0;
	m_thenBlock=0;
	m_elseBlock=0;
}
c_IfStmt* c_IfStmt::m_new(c_Expr* t_expr,c_BlockDecl* t_thenBlock,c_BlockDecl* t_elseBlock){
	DBG_ENTER("IfStmt.new")
	c_IfStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_thenBlock,"thenBlock")
	DBG_LOCAL(t_elseBlock,"elseBlock")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<261>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<262>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<263>");
	gc_assign(this->m_thenBlock,t_thenBlock);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<264>");
	gc_assign(this->m_elseBlock,t_elseBlock);
	return this;
}
c_IfStmt* c_IfStmt::m_new2(){
	DBG_ENTER("IfStmt.new")
	c_IfStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<256>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_IfStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("IfStmt.OnCopy")
	c_IfStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<268>");
	c_Stmt* t_=((new c_IfStmt)->m_new(m_expr->p_Copy(),m_thenBlock->p_CopyBlock(t_scope),m_elseBlock->p_CopyBlock(t_scope)));
	return t_;
}
int c_IfStmt::p_OnSemant(){
	DBG_ENTER("IfStmt.OnSemant")
	c_IfStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<272>");
	gc_assign(m_expr,m_expr->p_Semant2((c_Type::m_boolType),1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<273>");
	m_thenBlock->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<274>");
	m_elseBlock->p_Semant();
	return 0;
}
String c_IfStmt::p_Trans(){
	DBG_ENTER("IfStmt.Trans")
	c_IfStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<278>");
	String t_=bb_translator__trans->p_TransIfStmt(this);
	return t_;
}
void c_IfStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_thenBlock);
	gc_mark_q(m_elseBlock);
}
String c_IfStmt::debug(){
	String t="(IfStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("thenBlock",&m_thenBlock);
	t+=dbg_decl("elseBlock",&m_elseBlock);
	return t;
}
c_WhileStmt::c_WhileStmt(){
	m_expr=0;
	m_block=0;
}
c_WhileStmt* c_WhileStmt::m_new(c_Expr* t_expr,c_BlockDecl* t_block){
	DBG_ENTER("WhileStmt.new")
	c_WhileStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<286>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<287>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<288>");
	gc_assign(this->m_block,t_block);
	return this;
}
c_WhileStmt* c_WhileStmt::m_new2(){
	DBG_ENTER("WhileStmt.new")
	c_WhileStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<282>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_WhileStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("WhileStmt.OnCopy")
	c_WhileStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<292>");
	c_Stmt* t_=((new c_WhileStmt)->m_new(m_expr->p_Copy(),m_block->p_CopyBlock(t_scope)));
	return t_;
}
int c_WhileStmt::p_OnSemant(){
	DBG_ENTER("WhileStmt.OnSemant")
	c_WhileStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<296>");
	gc_assign(m_expr,m_expr->p_Semant2((c_Type::m_boolType),1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<297>");
	bb_decl__loopnest+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<298>");
	m_block->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<299>");
	bb_decl__loopnest-=1;
	return 0;
}
String c_WhileStmt::p_Trans(){
	DBG_ENTER("WhileStmt.Trans")
	c_WhileStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<303>");
	String t_=bb_translator__trans->p_TransWhileStmt(this);
	return t_;
}
void c_WhileStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_block);
}
String c_WhileStmt::debug(){
	String t="(WhileStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("block",&m_block);
	return t;
}
c_RepeatStmt::c_RepeatStmt(){
	m_block=0;
	m_expr=0;
}
c_RepeatStmt* c_RepeatStmt::m_new(c_BlockDecl* t_block,c_Expr* t_expr){
	DBG_ENTER("RepeatStmt.new")
	c_RepeatStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_block,"block")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<311>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<312>");
	gc_assign(this->m_block,t_block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<313>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_RepeatStmt* c_RepeatStmt::m_new2(){
	DBG_ENTER("RepeatStmt.new")
	c_RepeatStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<307>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_RepeatStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("RepeatStmt.OnCopy")
	c_RepeatStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<317>");
	c_Stmt* t_=((new c_RepeatStmt)->m_new(m_block->p_CopyBlock(t_scope),m_expr->p_Copy()));
	return t_;
}
int c_RepeatStmt::p_OnSemant(){
	DBG_ENTER("RepeatStmt.OnSemant")
	c_RepeatStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<321>");
	bb_decl__loopnest+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<322>");
	m_block->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<323>");
	bb_decl__loopnest-=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<324>");
	gc_assign(m_expr,m_expr->p_Semant2((c_Type::m_boolType),1));
	return 0;
}
String c_RepeatStmt::p_Trans(){
	DBG_ENTER("RepeatStmt.Trans")
	c_RepeatStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<328>");
	String t_=bb_translator__trans->p_TransRepeatStmt(this);
	return t_;
}
void c_RepeatStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_block);
	gc_mark_q(m_expr);
}
String c_RepeatStmt::debug(){
	String t="(RepeatStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("block",&m_block);
	t+=dbg_decl("expr",&m_expr);
	return t;
}
c_ForEachinStmt::c_ForEachinStmt(){
	m_varid=String();
	m_varty=0;
	m_varlocal=0;
	m_expr=0;
	m_block=0;
}
c_ForEachinStmt* c_ForEachinStmt::m_new(String t_varid,c_Type* t_varty,int t_varlocal,c_Expr* t_expr,c_BlockDecl* t_block){
	DBG_ENTER("ForEachinStmt.new")
	c_ForEachinStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_varid,"varid")
	DBG_LOCAL(t_varty,"varty")
	DBG_LOCAL(t_varlocal,"varlocal")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<43>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<44>");
	this->m_varid=t_varid;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<45>");
	gc_assign(this->m_varty,t_varty);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<46>");
	this->m_varlocal=t_varlocal;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<47>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<48>");
	gc_assign(this->m_block,t_block);
	return this;
}
c_ForEachinStmt* c_ForEachinStmt::m_new2(){
	DBG_ENTER("ForEachinStmt.new")
	c_ForEachinStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<36>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_ForEachinStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("ForEachinStmt.OnCopy")
	c_ForEachinStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<52>");
	c_Stmt* t_=((new c_ForEachinStmt)->m_new(m_varid,m_varty,m_varlocal,m_expr->p_Copy(),m_block->p_CopyBlock(t_scope)));
	return t_;
}
int c_ForEachinStmt::p_OnSemant(){
	DBG_ENTER("ForEachinStmt.OnSemant")
	c_ForEachinStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<56>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<58>");
	if(((dynamic_cast<c_ArrayType*>(m_expr->m_exprType))!=0) || ((dynamic_cast<c_StringType*>(m_expr->m_exprType))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<60>");
		c_LocalDecl* t_exprTmp=(new c_LocalDecl)->m_new(String(),0,0,m_expr);
		DBG_LOCAL(t_exprTmp,"exprTmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<61>");
		c_LocalDecl* t_indexTmp=(new c_LocalDecl)->m_new(String(),0,0,((new c_ConstExpr)->m_new((c_Type::m_intType),String(L"0",1))));
		DBG_LOCAL(t_indexTmp,"indexTmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<63>");
		c_Expr* t_lenExpr=((new c_IdentExpr)->m_new(String(L"Length",6),((new c_VarExpr)->m_new(t_exprTmp))));
		DBG_LOCAL(t_lenExpr,"lenExpr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<65>");
		c_Expr* t_cmpExpr=((new c_BinaryCompareExpr)->m_new(String(L"<",1),((new c_VarExpr)->m_new(t_indexTmp)),t_lenExpr));
		DBG_LOCAL(t_cmpExpr,"cmpExpr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<67>");
		c_Expr* t_indexExpr=((new c_IndexExpr)->m_new(((new c_VarExpr)->m_new(t_exprTmp)),((new c_VarExpr)->m_new(t_indexTmp))));
		DBG_LOCAL(t_indexExpr,"indexExpr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<68>");
		c_Expr* t_addExpr=((new c_BinaryMathExpr)->m_new(String(L"+",1),((new c_VarExpr)->m_new(t_indexTmp)),((new c_ConstExpr)->m_new((c_Type::m_intType),String(L"1",1)))));
		DBG_LOCAL(t_addExpr,"addExpr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<70>");
		m_block->m_stmts->p_AddFirst((new c_AssignStmt)->m_new(String(L"=",1),((new c_VarExpr)->m_new(t_indexTmp)),t_addExpr));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<72>");
		if((m_varlocal)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<73>");
			c_LocalDecl* t_varTmp=(new c_LocalDecl)->m_new(m_varid,0,m_varty,t_indexExpr);
			DBG_LOCAL(t_varTmp,"varTmp")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<74>");
			m_block->m_stmts->p_AddFirst((new c_DeclStmt)->m_new(t_varTmp));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<76>");
			m_block->m_stmts->p_AddFirst((new c_AssignStmt)->m_new(String(L"=",1),((new c_IdentExpr)->m_new(m_varid,0)),t_indexExpr));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<79>");
		c_WhileStmt* t_whileStmt=(new c_WhileStmt)->m_new(t_cmpExpr,m_block);
		DBG_LOCAL(t_whileStmt,"whileStmt")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<81>");
		gc_assign(m_block,(new c_BlockDecl)->m_new(m_block->m_scope));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<82>");
		m_block->p_AddStmt((new c_DeclStmt)->m_new(t_exprTmp));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<83>");
		m_block->p_AddStmt((new c_DeclStmt)->m_new(t_indexTmp));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<84>");
		m_block->p_AddStmt(t_whileStmt);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<86>");
		if((dynamic_cast<c_ObjectType*>(m_expr->m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<88>");
			c_Expr* t_enumerInit=((new c_FuncCallExpr)->m_new(((new c_IdentExpr)->m_new(String(L"ObjectEnumerator",16),m_expr)),Array<c_Expr* >()));
			DBG_LOCAL(t_enumerInit,"enumerInit")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<89>");
			c_LocalDecl* t_enumerTmp=(new c_LocalDecl)->m_new(String(),0,0,t_enumerInit);
			DBG_LOCAL(t_enumerTmp,"enumerTmp")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<91>");
			c_Expr* t_hasNextExpr=((new c_FuncCallExpr)->m_new(((new c_IdentExpr)->m_new(String(L"HasNext",7),((new c_VarExpr)->m_new(t_enumerTmp)))),Array<c_Expr* >()));
			DBG_LOCAL(t_hasNextExpr,"hasNextExpr")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<92>");
			c_Expr* t_nextObjExpr=((new c_FuncCallExpr)->m_new(((new c_IdentExpr)->m_new(String(L"NextObject",10),((new c_VarExpr)->m_new(t_enumerTmp)))),Array<c_Expr* >()));
			DBG_LOCAL(t_nextObjExpr,"nextObjExpr")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<94>");
			if((m_varlocal)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<95>");
				c_LocalDecl* t_varTmp2=(new c_LocalDecl)->m_new(m_varid,0,m_varty,t_nextObjExpr);
				DBG_LOCAL(t_varTmp2,"varTmp")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<96>");
				m_block->m_stmts->p_AddFirst((new c_DeclStmt)->m_new(t_varTmp2));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<98>");
				m_block->m_stmts->p_AddFirst((new c_AssignStmt)->m_new(String(L"=",1),((new c_IdentExpr)->m_new(m_varid,0)),t_nextObjExpr));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<101>");
			c_WhileStmt* t_whileStmt2=(new c_WhileStmt)->m_new(t_hasNextExpr,m_block);
			DBG_LOCAL(t_whileStmt2,"whileStmt")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<103>");
			gc_assign(m_block,(new c_BlockDecl)->m_new(m_block->m_scope));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<104>");
			m_block->p_AddStmt((new c_DeclStmt)->m_new(t_enumerTmp));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<105>");
			m_block->p_AddStmt(t_whileStmt2);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<109>");
			bb_config_Err(String(L"Expression cannot be used with For Each.",40));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<113>");
	m_block->p_Semant();
	return 0;
}
String c_ForEachinStmt::p_Trans(){
	DBG_ENTER("ForEachinStmt.Trans")
	c_ForEachinStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<117>");
	String t_=bb_translator__trans->p_TransBlock(m_block);
	return t_;
}
void c_ForEachinStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_varty);
	gc_mark_q(m_expr);
	gc_mark_q(m_block);
}
String c_ForEachinStmt::debug(){
	String t="(ForEachinStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("varid",&m_varid);
	t+=dbg_decl("varty",&m_varty);
	t+=dbg_decl("varlocal",&m_varlocal);
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("block",&m_block);
	return t;
}
c_AssignStmt::c_AssignStmt(){
	m_op=String();
	m_lhs=0;
	m_rhs=0;
	m_tmp1=0;
	m_tmp2=0;
}
c_AssignStmt* c_AssignStmt::m_new(String t_op,c_Expr* t_lhs,c_Expr* t_rhs){
	DBG_ENTER("AssignStmt.new")
	c_AssignStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<68>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<69>");
	this->m_op=t_op;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<70>");
	gc_assign(this->m_lhs,t_lhs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<71>");
	gc_assign(this->m_rhs,t_rhs);
	return this;
}
c_AssignStmt* c_AssignStmt::m_new2(){
	DBG_ENTER("AssignStmt.new")
	c_AssignStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<61>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_AssignStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("AssignStmt.OnCopy")
	c_AssignStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<75>");
	c_Stmt* t_=((new c_AssignStmt)->m_new(m_op,m_lhs->p_Copy(),m_rhs->p_Copy()));
	return t_;
}
int c_AssignStmt::p_FixSideEffects(){
	DBG_ENTER("AssignStmt.FixSideEffects")
	c_AssignStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<84>");
	c_MemberVarExpr* t_e1=dynamic_cast<c_MemberVarExpr*>(m_lhs);
	DBG_LOCAL(t_e1,"e1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<85>");
	if((t_e1)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<86>");
		if(t_e1->m_expr->p_SideEffects()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<87>");
			gc_assign(m_tmp1,(new c_LocalDecl)->m_new(String(),0,t_e1->m_expr->m_exprType,t_e1->m_expr));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<88>");
			m_tmp1->p_Semant();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<89>");
			gc_assign(m_lhs,((new c_MemberVarExpr)->m_new(((new c_VarExpr)->m_new(m_tmp1)),t_e1->m_decl)));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<93>");
	c_IndexExpr* t_e2=dynamic_cast<c_IndexExpr*>(m_lhs);
	DBG_LOCAL(t_e2,"e2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<94>");
	if((t_e2)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<95>");
		c_Expr* t_expr=t_e2->m_expr;
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<96>");
		c_Expr* t_index=t_e2->m_index;
		DBG_LOCAL(t_index,"index")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<97>");
		if(t_expr->p_SideEffects() || t_index->p_SideEffects()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<98>");
			if(t_expr->p_SideEffects()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<99>");
				gc_assign(m_tmp1,(new c_LocalDecl)->m_new(String(),0,t_expr->m_exprType,t_expr));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<100>");
				m_tmp1->p_Semant();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<101>");
				t_expr=((new c_VarExpr)->m_new(m_tmp1));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<103>");
			if(t_index->p_SideEffects()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<104>");
				gc_assign(m_tmp2,(new c_LocalDecl)->m_new(String(),0,t_index->m_exprType,t_index));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<105>");
				m_tmp2->p_Semant();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<106>");
				t_index=((new c_VarExpr)->m_new(m_tmp2));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<108>");
			gc_assign(m_lhs,((new c_IndexExpr)->m_new(t_expr,t_index))->p_Semant());
		}
	}
	return 0;
}
int c_AssignStmt::p_OnSemant(){
	DBG_ENTER("AssignStmt.OnSemant")
	c_AssignStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<116>");
	gc_assign(m_rhs,m_rhs->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<117>");
	gc_assign(m_lhs,m_lhs->p_SemantSet(m_op,m_rhs));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<119>");
	if(((dynamic_cast<c_InvokeExpr*>(m_lhs))!=0) || ((dynamic_cast<c_InvokeMemberExpr*>(m_lhs))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<120>");
		m_rhs=0;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<121>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<124>");
	bool t_kludge=true;
	DBG_LOCAL(t_kludge,"kludge")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<126>");
	String t_1=m_op;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<127>");
	if(t_1==String(L"=",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<128>");
		gc_assign(m_rhs,m_rhs->p_Cast(m_lhs->m_exprType,0));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<129>");
		t_kludge=false;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<130>");
		if(t_1==String(L"*=",2) || t_1==String(L"/=",2) || t_1==String(L"+=",2) || t_1==String(L"-=",2)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<131>");
			if(((dynamic_cast<c_NumericType*>(m_lhs->m_exprType))!=0) && ((m_lhs->m_exprType->p_EqualsType(m_rhs->m_exprType))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<133>");
				t_kludge=false;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<137>");
				if(bb_config_ENV_LANG==String(L"js",2)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<138>");
					if(m_op==String(L"/=",2) && ((dynamic_cast<c_IntType*>(m_lhs->m_exprType))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<139>");
						t_kludge=true;
					}
				}
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<144>");
			if(t_1==String(L"&=",2) || t_1==String(L"|=",2) || t_1==String(L"~=",2) || t_1==String(L"shl=",4) || t_1==String(L"shr=",4) || t_1==String(L"mod=",4)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<145>");
				if(((dynamic_cast<c_IntType*>(m_lhs->m_exprType))!=0) && ((m_lhs->m_exprType->p_EqualsType(m_rhs->m_exprType))!=0)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<147>");
					t_kludge=false;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<151>");
				bb_config_InternalErr(String(L"Internal error",14));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<155>");
	if(bb_config_ENV_LANG==String()){
		DBG_BLOCK();
		t_kludge=true;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<157>");
	if(t_kludge){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<158>");
		p_FixSideEffects();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<159>");
		gc_assign(m_rhs,((new c_BinaryMathExpr)->m_new(m_op.Slice(0,-1),m_lhs,m_rhs))->p_Semant()->p_Cast(m_lhs->m_exprType,0));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<160>");
		m_op=String(L"=",1);
	}
	return 0;
}
String c_AssignStmt::p_Trans(){
	DBG_ENTER("AssignStmt.Trans")
	c_AssignStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<166>");
	bb_config__errInfo=m_errInfo;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<167>");
	String t_=bb_translator__trans->p_TransAssignStmt(this);
	return t_;
}
void c_AssignStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_lhs);
	gc_mark_q(m_rhs);
	gc_mark_q(m_tmp1);
	gc_mark_q(m_tmp2);
}
String c_AssignStmt::debug(){
	String t="(AssignStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("op",&m_op);
	t+=dbg_decl("lhs",&m_lhs);
	t+=dbg_decl("rhs",&m_rhs);
	t+=dbg_decl("tmp1",&m_tmp1);
	t+=dbg_decl("tmp2",&m_tmp2);
	return t;
}
c_ForStmt::c_ForStmt(){
	m_init=0;
	m_expr=0;
	m_incr=0;
	m_block=0;
}
c_ForStmt* c_ForStmt::m_new(c_Stmt* t_init,c_Expr* t_expr,c_Stmt* t_incr,c_BlockDecl* t_block){
	DBG_ENTER("ForStmt.new")
	c_ForStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_init,"init")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_incr,"incr")
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<338>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<339>");
	gc_assign(this->m_init,t_init);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<340>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<341>");
	gc_assign(this->m_incr,t_incr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<342>");
	gc_assign(this->m_block,t_block);
	return this;
}
c_ForStmt* c_ForStmt::m_new2(){
	DBG_ENTER("ForStmt.new")
	c_ForStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<332>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_ForStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("ForStmt.OnCopy")
	c_ForStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<346>");
	c_Stmt* t_=((new c_ForStmt)->m_new(m_init->p_Copy2(t_scope),m_expr->p_Copy(),m_incr->p_Copy2(t_scope),m_block->p_CopyBlock(t_scope)));
	return t_;
}
int c_ForStmt::p_OnSemant(){
	DBG_ENTER("ForStmt.OnSemant")
	c_ForStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<351>");
	bb_decl_PushEnv(m_block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<353>");
	m_init->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<355>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<357>");
	bb_decl__loopnest+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<359>");
	m_block->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<361>");
	bb_decl__loopnest-=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<363>");
	m_incr->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<365>");
	bb_decl_PopEnv();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<368>");
	c_AssignStmt* t_assop=dynamic_cast<c_AssignStmt*>(m_incr);
	DBG_LOCAL(t_assop,"assop")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<369>");
	c_BinaryExpr* t_addop=dynamic_cast<c_BinaryExpr*>(t_assop->m_rhs);
	DBG_LOCAL(t_addop,"addop")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<370>");
	if(!((t_addop)!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Invalid step expression",23));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<371>");
	String t_stpval=t_addop->m_rhs->p_Eval();
	DBG_LOCAL(t_stpval,"stpval")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<372>");
	if(t_stpval.StartsWith(String(L"-",1))){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<373>");
		c_BinaryExpr* t_bexpr=dynamic_cast<c_BinaryExpr*>(m_expr);
		DBG_LOCAL(t_bexpr,"bexpr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<374>");
		String t_2=t_bexpr->m_op;
		DBG_LOCAL(t_2,"2")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<375>");
		if(t_2==String(L"<",1)){
			DBG_BLOCK();
			t_bexpr->m_op=String(L">",1);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<376>");
			if(t_2==String(L"<=",2)){
				DBG_BLOCK();
				t_bexpr->m_op=String(L">=",2);
			}
		}
	}
	return 0;
}
String c_ForStmt::p_Trans(){
	DBG_ENTER("ForStmt.Trans")
	c_ForStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<383>");
	String t_=bb_translator__trans->p_TransForStmt(this);
	return t_;
}
void c_ForStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_init);
	gc_mark_q(m_expr);
	gc_mark_q(m_incr);
	gc_mark_q(m_block);
}
String c_ForStmt::debug(){
	String t="(ForStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("init",&m_init);
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("incr",&m_incr);
	t+=dbg_decl("block",&m_block);
	return t;
}
c_CatchStmt::c_CatchStmt(){
	m_init=0;
	m_block=0;
}
c_CatchStmt* c_CatchStmt::m_new(c_LocalDecl* t_init,c_BlockDecl* t_block){
	DBG_ENTER("CatchStmt.new")
	c_CatchStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_init,"init")
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<429>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<430>");
	gc_assign(this->m_init,t_init);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<431>");
	gc_assign(this->m_block,t_block);
	return this;
}
c_CatchStmt* c_CatchStmt::m_new2(){
	DBG_ENTER("CatchStmt.new")
	c_CatchStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<424>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_CatchStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("CatchStmt.OnCopy")
	c_CatchStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<435>");
	c_Stmt* t_=((new c_CatchStmt)->m_new(dynamic_cast<c_LocalDecl*>(m_init->p_Copy()),m_block->p_CopyBlock(t_scope)));
	return t_;
}
int c_CatchStmt::p_OnSemant(){
	DBG_ENTER("CatchStmt.OnSemant")
	c_CatchStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<439>");
	m_init->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<440>");
	if(!((dynamic_cast<c_ObjectType*>(m_init->m_type))!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Variable type must extend Throwable",35));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<441>");
	if(!((m_init->m_type->p_GetClass()->p_IsThrowable())!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Variable type must extend Throwable",35));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<442>");
	m_block->p_InsertDecl(m_init);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<443>");
	m_block->p_Semant();
	return 0;
}
String c_CatchStmt::p_Trans(){
	DBG_ENTER("CatchStmt.Trans")
	c_CatchStmt *self=this;
	DBG_LOCAL(self,"Self")
	return String();
}
void c_CatchStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_init);
	gc_mark_q(m_block);
}
String c_CatchStmt::debug(){
	String t="(CatchStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("init",&m_init);
	t+=dbg_decl("block",&m_block);
	return t;
}
c_Stack7::c_Stack7(){
	m_data=Array<c_CatchStmt* >();
	m_length=0;
}
c_Stack7* c_Stack7::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack7* c_Stack7::m_new2(Array<c_CatchStmt* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack7::p_Push19(c_CatchStmt* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack7::p_Push20(Array<c_CatchStmt* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push19(t_values.At(t_offset+t_i));
	}
}
void c_Stack7::p_Push21(Array<c_CatchStmt* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push20(t_values,t_offset,t_values.Length()-t_offset);
}
c_CatchStmt* c_Stack7::m_NIL;
void c_Stack7::p_Length(int t_newlength){
	DBG_ENTER("Stack.Length")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_newlength,"newlength")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<45>");
	if(t_newlength<m_length){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<46>");
		for(int t_i=t_newlength;t_i<m_length;t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<47>");
			gc_assign(m_data.At(t_i),m_NIL);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<49>");
		if(t_newlength>m_data.Length()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<50>");
			gc_assign(m_data,m_data.Resize(bb_math_Max(m_length*2+10,t_newlength)));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<52>");
	m_length=t_newlength;
}
int c_Stack7::p_Length2(){
	DBG_ENTER("Stack.Length")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<56>");
	return m_length;
}
Array<c_CatchStmt* > c_Stack7::p_ToArray(){
	DBG_ENTER("Stack.ToArray")
	c_Stack7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<18>");
	Array<c_CatchStmt* > t_t=Array<c_CatchStmt* >(m_length);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<19>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<20>");
		gc_assign(t_t.At(t_i),m_data.At(t_i));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<22>");
	return t_t;
}
void c_Stack7::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack7::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("NIL",&c_Stack7::m_NIL);
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
int bb_math_Max(int t_x,int t_y){
	DBG_ENTER("Max")
	DBG_LOCAL(t_x,"x")
	DBG_LOCAL(t_y,"y")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/math.monkey<56>");
	if(t_x>t_y){
		DBG_BLOCK();
		return t_x;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/math.monkey<57>");
	return t_y;
}
Float bb_math_Max2(Float t_x,Float t_y){
	DBG_ENTER("Max")
	DBG_LOCAL(t_x,"x")
	DBG_LOCAL(t_y,"y")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/math.monkey<83>");
	if(t_x>t_y){
		DBG_BLOCK();
		return t_x;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/math.monkey<84>");
	return t_y;
}
c_TryStmt::c_TryStmt(){
	m_block=0;
	m_catches=Array<c_CatchStmt* >();
}
c_TryStmt* c_TryStmt::m_new(c_BlockDecl* t_block,Array<c_CatchStmt* > t_catches){
	DBG_ENTER("TryStmt.new")
	c_TryStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_block,"block")
	DBG_LOCAL(t_catches,"catches")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<392>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<393>");
	gc_assign(this->m_block,t_block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<394>");
	gc_assign(this->m_catches,t_catches);
	return this;
}
c_TryStmt* c_TryStmt::m_new2(){
	DBG_ENTER("TryStmt.new")
	c_TryStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<387>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_TryStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("TryStmt.OnCopy")
	c_TryStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<398>");
	Array<c_CatchStmt* > t_tcatches=this->m_catches.Slice(0);
	DBG_LOCAL(t_tcatches,"tcatches")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<399>");
	for(int t_i=0;t_i<t_tcatches.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<400>");
		gc_assign(t_tcatches.At(t_i),dynamic_cast<c_CatchStmt*>(t_tcatches.At(t_i)->p_Copy2(t_scope)));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<402>");
	c_Stmt* t_=((new c_TryStmt)->m_new(m_block->p_CopyBlock(t_scope),t_tcatches));
	return t_;
}
int c_TryStmt::p_OnSemant(){
	DBG_ENTER("TryStmt.OnSemant")
	c_TryStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<406>");
	m_block->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<407>");
	for(int t_i=0;t_i<m_catches.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<408>");
		m_catches.At(t_i)->p_Semant();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<409>");
		for(int t_j=0;t_j<t_i;t_j=t_j+1){
			DBG_BLOCK();
			DBG_LOCAL(t_j,"j")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<410>");
			if((m_catches.At(t_i)->m_init->m_type->p_ExtendsType(m_catches.At(t_j)->m_init->m_type))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<411>");
				bb_config_PushErr(m_catches.At(t_i)->m_errInfo);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<412>");
				bb_config_Err(String(L"Catch variable class extends earlier catch variable class",57));
			}
		}
	}
	return 0;
}
String c_TryStmt::p_Trans(){
	DBG_ENTER("TryStmt.Trans")
	c_TryStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<419>");
	String t_=bb_translator__trans->p_TransTryStmt(this);
	return t_;
}
void c_TryStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_block);
	gc_mark_q(m_catches);
}
String c_TryStmt::debug(){
	String t="(TryStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("block",&m_block);
	t+=dbg_decl("catches",&m_catches);
	return t;
}
c_ThrowStmt::c_ThrowStmt(){
	m_expr=0;
}
c_ThrowStmt* c_ThrowStmt::m_new(c_Expr* t_expr){
	DBG_ENTER("ThrowStmt.new")
	c_ThrowStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<455>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<456>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_ThrowStmt* c_ThrowStmt::m_new2(){
	DBG_ENTER("ThrowStmt.new")
	c_ThrowStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<451>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_ThrowStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("ThrowStmt.OnCopy")
	c_ThrowStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<460>");
	c_Stmt* t_=((new c_ThrowStmt)->m_new(m_expr->p_Copy()));
	return t_;
}
int c_ThrowStmt::p_OnSemant(){
	DBG_ENTER("ThrowStmt.OnSemant")
	c_ThrowStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<464>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<465>");
	if(!((dynamic_cast<c_ObjectType*>(m_expr->m_exprType))!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Expression type must extend Throwable",37));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<466>");
	if(!((m_expr->m_exprType->p_GetClass()->p_IsThrowable())!=0)){
		DBG_BLOCK();
		bb_config_Err(String(L"Expression type must extend Throwable",37));
	}
	return 0;
}
String c_ThrowStmt::p_Trans(){
	DBG_ENTER("ThrowStmt.Trans")
	c_ThrowStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<470>");
	String t_=bb_translator__trans->p_TransThrowStmt(this);
	return t_;
}
void c_ThrowStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_expr);
}
String c_ThrowStmt::debug(){
	String t="(ThrowStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	return t;
}
c_ExprStmt::c_ExprStmt(){
	m_expr=0;
}
c_ExprStmt* c_ExprStmt::m_new(c_Expr* t_expr){
	DBG_ENTER("ExprStmt.new")
	c_ExprStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<175>");
	c_Stmt::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<176>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_ExprStmt* c_ExprStmt::m_new2(){
	DBG_ENTER("ExprStmt.new")
	c_ExprStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<172>");
	c_Stmt::m_new();
	return this;
}
c_Stmt* c_ExprStmt::p_OnCopy2(c_ScopeDecl* t_scope){
	DBG_ENTER("ExprStmt.OnCopy")
	c_ExprStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<180>");
	c_Stmt* t_=((new c_ExprStmt)->m_new(m_expr->p_Copy()));
	return t_;
}
int c_ExprStmt::p_OnSemant(){
	DBG_ENTER("ExprStmt.OnSemant")
	c_ExprStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<184>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<185>");
	if(!((m_expr)!=0)){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	return 0;
}
String c_ExprStmt::p_Trans(){
	DBG_ENTER("ExprStmt.Trans")
	c_ExprStmt *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/stmt.monkey<189>");
	String t_=bb_translator__trans->p_TransExprStmt(this);
	return t_;
}
void c_ExprStmt::mark(){
	c_Stmt::mark();
	gc_mark_q(m_expr);
}
String c_ExprStmt::debug(){
	String t="(ExprStmt)\n";
	t=c_Stmt::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	return t;
}
c_ModuleDecl* bb_parser_ParseModule(String t_modpath,String t_filepath,c_AppDecl* t_app){
	DBG_ENTER("ParseModule")
	DBG_LOCAL(t_modpath,"modpath")
	DBG_LOCAL(t_filepath,"filepath")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1723>");
	String t_ident=t_modpath;
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1724>");
	if(t_ident.Contains(String(L".",1))){
		DBG_BLOCK();
		t_ident=bb_os_ExtractExt(t_ident);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1726>");
	c_ModuleDecl* t_mdecl=(new c_ModuleDecl)->m_new(t_ident,0,String(),t_modpath,t_filepath,t_app);
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1728>");
	t_mdecl->p_ImportModule(String(L"monkey",6),0);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1730>");
	String t_source=bb_preprocessor_PreProcess(t_filepath,t_mdecl);
	DBG_LOCAL(t_source,"source")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1732>");
	c_Toker* t_toker=(new c_Toker)->m_new(t_filepath,t_source);
	DBG_LOCAL(t_toker,"toker")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1734>");
	c_Parser* t_parser=(new c_Parser)->m_new(t_toker,t_app,t_mdecl,0);
	DBG_LOCAL(t_parser,"parser")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1736>");
	t_parser->p_ParseMain();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1738>");
	return t_parser->m__module;
}
c_Enumerator3::c_Enumerator3(){
	m__list=0;
	m__curr=0;
}
c_Enumerator3* c_Enumerator3::m_new(c_List4* t_list){
	DBG_ENTER("Enumerator.new")
	c_Enumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_list,"list")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<326>");
	gc_assign(m__list,t_list);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<327>");
	gc_assign(m__curr,t_list->m__head->m__succ);
	return this;
}
c_Enumerator3* c_Enumerator3::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<323>");
	return this;
}
bool c_Enumerator3::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<331>");
	while(m__curr->m__succ->m__pred!=m__curr){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<332>");
		gc_assign(m__curr,m__curr->m__succ);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<334>");
	bool t_=m__curr!=m__list->m__head;
	return t_;
}
c_FuncDecl* c_Enumerator3::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<338>");
	c_FuncDecl* t_data=m__curr->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<339>");
	gc_assign(m__curr,m__curr->m__succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<340>");
	return t_data;
}
void c_Enumerator3::mark(){
	Object::mark();
	gc_mark_q(m__list);
	gc_mark_q(m__curr);
}
String c_Enumerator3::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("_list",&m__list);
	t+=dbg_decl("_curr",&m__curr);
	return t;
}
c_StringList* bb_config__errStack;
int bb_config_PushErr(String t_errInfo){
	DBG_ENTER("PushErr")
	DBG_LOCAL(t_errInfo,"errInfo")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<109>");
	bb_config__errStack->p_AddLast(bb_config__errInfo);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<110>");
	bb_config__errInfo=t_errInfo;
	return 0;
}
c_List8::c_List8(){
	m__head=((new c_HeadNode8)->m_new());
}
c_List8* c_List8::m_new(){
	DBG_ENTER("List.new")
	c_List8 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node13* c_List8::p_AddLast8(c_GlobalDecl* t_data){
	DBG_ENTER("List.AddLast")
	c_List8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node13* t_=(new c_Node13)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List8* c_List8::m_new2(Array<c_GlobalDecl* > t_data){
	DBG_ENTER("List.new")
	c_List8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_GlobalDecl* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_GlobalDecl* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast8(t_t);
	}
	return this;
}
c_Enumerator7* c_List8::p_ObjectEnumerator(){
	DBG_ENTER("List.ObjectEnumerator")
	c_List8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<186>");
	c_Enumerator7* t_=(new c_Enumerator7)->m_new(this);
	return t_;
}
void c_List8::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List8::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_Node13::c_Node13(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node13* c_Node13::m_new(c_Node13* t_succ,c_Node13* t_pred,c_GlobalDecl* t_data){
	DBG_ENTER("Node.new")
	c_Node13 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node13* c_Node13::m_new2(){
	DBG_ENTER("Node.new")
	c_Node13 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
void c_Node13::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node13::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode8::c_HeadNode8(){
}
c_HeadNode8* c_HeadNode8::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node13::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode8::mark(){
	c_Node13::mark();
}
String c_HeadNode8::debug(){
	String t="(HeadNode)\n";
	t=c_Node13::debug()+t;
	return t;
}
int bb_config_PopErr(){
	DBG_ENTER("PopErr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<114>");
	bb_config__errInfo=bb_config__errStack->p_RemoveLast();
	return 0;
}
c_InvokeMemberExpr::c_InvokeMemberExpr(){
	m_expr=0;
	m_decl=0;
	m_args=Array<c_Expr* >();
	m_isResize=0;
}
c_InvokeMemberExpr* c_InvokeMemberExpr::m_new(c_Expr* t_expr,c_FuncDecl* t_decl,Array<c_Expr* > t_args){
	DBG_ENTER("InvokeMemberExpr.new")
	c_InvokeMemberExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<329>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<330>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<331>");
	gc_assign(this->m_decl,t_decl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<332>");
	gc_assign(this->m_args,t_args);
	return this;
}
c_InvokeMemberExpr* c_InvokeMemberExpr::m_new2(){
	DBG_ENTER("InvokeMemberExpr.new")
	c_InvokeMemberExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<323>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_InvokeMemberExpr::p_Semant(){
	DBG_ENTER("InvokeMemberExpr.Semant")
	c_InvokeMemberExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<344>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<346>");
	gc_assign(m_exprType,m_decl->m_retType);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<347>");
	gc_assign(m_args,p_CastArgs(m_args,m_decl));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<350>");
	if(((dynamic_cast<c_ArrayType*>(m_exprType))!=0) && ((dynamic_cast<c_VoidType*>(dynamic_cast<c_ArrayType*>(m_exprType)->m_elemType))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<351>");
		m_isResize=1;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<352>");
		gc_assign(m_exprType,m_expr->m_exprType);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<355>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_InvokeMemberExpr::p_ToString(){
	DBG_ENTER("InvokeMemberExpr.ToString")
	c_InvokeMemberExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<336>");
	String t_t=String(L"InvokeMemberExpr(",17)+m_expr->p_ToString()+String(L",",1)+m_decl->p_ToString();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<337>");
	Array<c_Expr* > t_=m_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<338>");
		t_t=t_t+(String(L",",1)+t_arg->p_ToString());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<340>");
	String t_3=t_t+String(L")",1);
	return t_3;
}
String c_InvokeMemberExpr::p_Trans(){
	DBG_ENTER("InvokeMemberExpr.Trans")
	c_InvokeMemberExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<360>");
	if((m_isResize)!=0){
		DBG_BLOCK();
		String t_=bb_translator__trans->p_TransInvokeMemberExpr(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<361>");
	String t_2=bb_translator__trans->p_TransInvokeMemberExpr(this);
	return t_2;
}
String c_InvokeMemberExpr::p_TransStmt(){
	DBG_ENTER("InvokeMemberExpr.TransStmt")
	c_InvokeMemberExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<365>");
	String t_=bb_translator__trans->p_TransInvokeMemberExpr(this);
	return t_;
}
void c_InvokeMemberExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_decl);
	gc_mark_q(m_args);
}
String c_InvokeMemberExpr::debug(){
	String t="(InvokeMemberExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("decl",&m_decl);
	t+=dbg_decl("args",&m_args);
	t+=dbg_decl("isResize",&m_isResize);
	return t;
}
c_Expr* bb_preprocessor_EvalExpr(c_Toker* t_toker){
	DBG_ENTER("EvalExpr")
	DBG_LOCAL(t_toker,"toker")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<6>");
	c_StringStack* t_buf=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_buf,"buf")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<7>");
	while(((t_toker->p_Toke()).Length()!=0) && t_toker->p_Toke()!=String(L"\n",1) && t_toker->p_TokeType()!=9){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<8>");
		t_buf->p_Push(t_toker->p_Toke());
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<9>");
		t_toker->p_NextToke();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<11>");
	String t_source=t_buf->p_Join(String());
	DBG_LOCAL(t_source,"source")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<13>");
	t_toker=(new c_Toker)->m_new(String(),t_source);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<14>");
	c_Parser* t_parser=(new c_Parser)->m_new(t_toker,0,0,0);
	DBG_LOCAL(t_parser,"parser")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<15>");
	c_Expr* t_expr=t_parser->p_ParseExpr()->p_Semant();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<17>");
	return t_expr;
}
bool bb_preprocessor_EvalBool(c_Toker* t_toker){
	DBG_ENTER("EvalBool")
	DBG_LOCAL(t_toker,"toker")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<21>");
	c_Expr* t_expr=bb_preprocessor_EvalExpr(t_toker);
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<22>");
	if(!((dynamic_cast<c_BoolType*>(t_expr->m_exprType))!=0)){
		DBG_BLOCK();
		t_expr=t_expr->p_Cast((c_Type::m_boolType),1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<23>");
	if((t_expr->p_Eval()).Length()!=0){
		DBG_BLOCK();
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<24>");
	return false;
}
String bb_preprocessor_EvalText(c_Toker* t_toker){
	DBG_ENTER("EvalText")
	DBG_LOCAL(t_toker,"toker")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<29>");
	c_Expr* t_expr=bb_preprocessor_EvalExpr(t_toker);
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<30>");
	String t_val=t_expr->p_Eval();
	DBG_LOCAL(t_val,"val")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<32>");
	if((dynamic_cast<c_StringType*>(t_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<33>");
		String t_=bb_config_EvalConfigTags(t_val);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<36>");
	if((dynamic_cast<c_BoolType*>(t_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<37>");
		if((t_val).Length()!=0){
			DBG_BLOCK();
			return String(L"True",4);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<38>");
		return String(L"False",5);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<41>");
	return t_val;
}
c_StringMap2* bb_config_GetConfigVars(){
	DBG_ENTER("GetConfigVars")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<78>");
	return bb_config__cfgScope->m_vars;
}
c_Type* bb_config_GetConfigVarType(String t_key){
	DBG_ENTER("GetConfigVarType")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<72>");
	c_ConstDecl* t_decl=bb_config__cfgScope->m_cdecls->p_Get(t_key);
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<73>");
	if((t_decl)!=0){
		DBG_BLOCK();
		return t_decl->m_type;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<74>");
	return 0;
}
String bb_preprocessor_PreProcess(String t_path,c_ModuleDecl* t_mdecl){
	DBG_ENTER("PreProcess")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<46>");
	int t_cnest=0;
	int t_ifnest=0;
	int t_line=0;
	c_StringStack* t_source=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_cnest,"cnest")
	DBG_LOCAL(t_ifnest,"ifnest")
	DBG_LOCAL(t_line,"line")
	DBG_LOCAL(t_source,"source")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<48>");
	bb_decl_PushEnv(bb_config_GetConfigScope());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<50>");
	String t_p_cd=bb_config_GetConfigVar(String(L"CD",2));
	DBG_LOCAL(t_p_cd,"p_cd")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<51>");
	String t_p_modpath=bb_config_GetConfigVar(String(L"MODPATH",7));
	DBG_LOCAL(t_p_modpath,"p_modpath")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<53>");
	bb_config_SetConfigVar2(String(L"CD",2),bb_os_ExtractDir(RealPath(t_path)));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<54>");
	if((t_mdecl)!=0){
		DBG_BLOCK();
		bb_config_SetConfigVar2(String(L"MODPATH",7),t_mdecl->m_rmodpath);
	}else{
		DBG_BLOCK();
		bb_config_SetConfigVar2(String(L"MODPATH",7),String());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<56>");
	c_Toker* t_toker=(new c_Toker)->m_new(t_path,LoadString(t_path));
	DBG_LOCAL(t_toker,"toker")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<57>");
	t_toker->p_NextToke();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<59>");
	int t_attrs=0;
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<62>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<64>");
		if((t_line)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<65>");
			t_source->p_Push(String(L"\n",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<66>");
			while(((t_toker->p_Toke()).Length()!=0) && t_toker->p_Toke()!=String(L"\n",1) && t_toker->p_TokeType()!=9){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<67>");
				t_toker->p_NextToke();
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<69>");
			if(!((t_toker->p_Toke()).Length()!=0)){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<70>");
			t_toker->p_NextToke();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<72>");
		t_line+=1;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<74>");
		bb_config__errInfo=t_toker->p_Path()+String(L"<",1)+String(t_toker->p_Line())+String(L">",1);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<76>");
		if(t_toker->p_TokeType()==1){
			DBG_BLOCK();
			t_toker->p_NextToke();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<78>");
		if(t_toker->p_Toke()!=String(L"#",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<79>");
			if(t_cnest==t_ifnest){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<80>");
				String t_line2=String();
				DBG_LOCAL(t_line2,"line")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<81>");
				while(((t_toker->p_Toke()).Length()!=0) && t_toker->p_Toke()!=String(L"\n",1) && t_toker->p_TokeType()!=9){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<83>");
					String t_toke=t_toker->p_Toke();
					DBG_LOCAL(t_toke,"toke")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<84>");
					t_toker->p_NextToke();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<86>");
					if((t_mdecl)!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<87>");
						String t_1=t_toke.ToLower();
						DBG_LOCAL(t_1,"1")
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<88>");
						if(t_1==String(L"public",6)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<89>");
							t_attrs=0;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<90>");
							if(t_1==String(L"private",7)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<91>");
								t_attrs=512;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<92>");
								if(t_1==String(L"import",6)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<93>");
									while(t_toker->p_TokeType()==1){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<94>");
										t_toke=t_toke+t_toker->p_Toke();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<95>");
										t_toker->p_NextToke();
									}
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<97>");
									if(t_toker->p_TokeType()==2){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<98>");
										String t_modpath=t_toker->p_Toke();
										DBG_LOCAL(t_modpath,"modpath")
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<99>");
										while(t_toker->p_NextToke()==String(L".",1)){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<100>");
											t_modpath=t_modpath+String(L".",1);
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<101>");
											t_toker->p_NextToke();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<102>");
											if(t_toker->p_TokeType()!=2){
												DBG_BLOCK();
												break;
											}
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<103>");
											t_modpath=t_modpath+t_toker->p_Toke();
										}
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<105>");
										t_toke=t_toke+t_modpath;
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<107>");
										t_mdecl->p_ImportModule(t_modpath,t_attrs);
									}
								}
							}
						}
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<112>");
					t_line2=t_line2+t_toke;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<114>");
				if((t_line2).Length()!=0){
					DBG_BLOCK();
					t_source->p_Push(t_line2);
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<116>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<119>");
		String t_toke2=t_toker->p_NextToke();
		DBG_LOCAL(t_toke2,"toke")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<120>");
		if(t_toker->p_TokeType()==1){
			DBG_BLOCK();
			t_toke2=t_toker->p_NextToke();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<122>");
		String t_stm=t_toke2.ToLower();
		DBG_LOCAL(t_stm,"stm")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<123>");
		int t_ty=t_toker->p_TokeType();
		DBG_LOCAL(t_ty,"ty")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<125>");
		t_toker->p_NextToke();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<127>");
		if(t_stm==String(L"end",3) || t_stm==String(L"else",4)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<128>");
			if(t_toker->p_TokeType()==1){
				DBG_BLOCK();
				t_toker->p_NextToke();
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<129>");
			if(t_toker->p_Toke().ToLower()==String(L"if",2)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<130>");
				t_toker->p_NextToke();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<131>");
				t_stm=t_stm+String(L"if",2);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<135>");
		String t_2=t_stm;
		DBG_LOCAL(t_2,"2")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<136>");
		if(t_2==String(L"rem",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<138>");
			t_ifnest+=1;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<140>");
			if(t_2==String(L"if",2)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<142>");
				t_ifnest+=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<144>");
				if(t_cnest==t_ifnest-1){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<145>");
					if(bb_preprocessor_EvalBool(t_toker)){
						DBG_BLOCK();
						t_cnest=t_ifnest;
					}
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<148>");
				if(t_2==String(L"else",4)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<150>");
					if(!((t_ifnest)!=0)){
						DBG_BLOCK();
						bb_config_Err(String(L"#Else without #If",17));
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<152>");
					if(t_cnest==t_ifnest){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<153>");
						t_cnest|=65536;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<154>");
						if(t_cnest==t_ifnest-1){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<155>");
							t_cnest=t_ifnest;
						}
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<158>");
					if(t_2==String(L"elseif",6)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<160>");
						if(!((t_ifnest)!=0)){
							DBG_BLOCK();
							bb_config_Err(String(L"#ElseIf without #If",19));
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<162>");
						if(t_cnest==t_ifnest){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<163>");
							t_cnest|=65536;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<164>");
							if(t_cnest==t_ifnest-1){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<165>");
								if(bb_preprocessor_EvalBool(t_toker)){
									DBG_BLOCK();
									t_cnest=t_ifnest;
								}
							}
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<168>");
						if(t_2==String(L"end",3) || t_2==String(L"endif",5)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<170>");
							if(!((t_ifnest)!=0)){
								DBG_BLOCK();
								bb_config_Err(String(L"#End without #If or #Rem",24));
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<172>");
							t_ifnest-=1;
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<174>");
							if(t_ifnest<(t_cnest&65535)){
								DBG_BLOCK();
								t_cnest=t_ifnest;
							}
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<176>");
							if(t_2==String(L"print",5)){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<178>");
								if(t_cnest==t_ifnest){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<179>");
									bbPrint(bb_preprocessor_EvalText(t_toker));
								}
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<182>");
								if(t_2==String(L"error",5)){
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<184>");
									if(t_cnest==t_ifnest){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<185>");
										bb_config_Err(bb_preprocessor_EvalText(t_toker));
									}
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<190>");
									if(t_cnest==t_ifnest){
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<191>");
										if(t_ty==2){
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<193>");
											if(t_toker->p_TokeType()==1){
												DBG_BLOCK();
												t_toker->p_NextToke();
											}
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<194>");
											String t_op=t_toker->p_Toke();
											DBG_LOCAL(t_op,"op")
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<196>");
											String t_3=t_op;
											DBG_LOCAL(t_3,"3")
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<197>");
											if(t_3==String(L"=",1) || t_3==String(L"+=",2)){
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<199>");
												String t_4=t_toke2;
												DBG_LOCAL(t_4,"4")
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<200>");
												if(t_4==String(L"HOST",4) || t_4==String(L"LANG",4) || t_4==String(L"CONFIG",6) || t_4==String(L"TARGET",6) || t_4==String(L"SAFEMODE",8)){
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<201>");
													bb_config_Err(String(L"App config var '",16)+t_toke2+String(L"' cannot be modified",20));
												}
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<204>");
												t_toker->p_NextToke();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<206>");
												String t_5=t_op;
												DBG_LOCAL(t_5,"5")
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<207>");
												if(t_5==String(L"=",1)){
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<208>");
													c_Expr* t_expr=bb_preprocessor_EvalExpr(t_toker);
													DBG_LOCAL(t_expr,"expr")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<209>");
													String t_val=t_expr->p_Eval();
													DBG_LOCAL(t_val,"val")
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<210>");
													if(!bb_config_GetConfigVars()->p_Contains(t_toke2)){
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<211>");
														if((dynamic_cast<c_StringType*>(t_expr->m_exprType))!=0){
															DBG_BLOCK();
															t_val=bb_config_EvalConfigTags(t_val);
														}
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<212>");
														bb_config_SetConfigVar(t_toke2,t_val,t_expr->m_exprType);
													}
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<214>");
													if(t_5==String(L"+=",2)){
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<215>");
														String t_val2=bb_preprocessor_EvalText(t_toker);
														DBG_LOCAL(t_val2,"val")
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<216>");
														String t_var=bb_config_GetConfigVar(t_toke2);
														DBG_LOCAL(t_var,"var")
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<217>");
														if((dynamic_cast<c_BoolType*>(bb_config_GetConfigVarType(t_toke2)))!=0){
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<218>");
															if(t_var==String(L"1",1)){
																DBG_BLOCK();
																t_var=String(L"True",4);
															}else{
																DBG_BLOCK();
																t_var=String(L"False",5);
															}
														}
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<220>");
														if(((t_var).Length()!=0) && !t_val2.StartsWith(String(L";",1))){
															DBG_BLOCK();
															t_val2=String(L";",1)+t_val2;
														}
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<221>");
														bb_config_SetConfigVar2(t_toke2,t_var+t_val2);
													}
												}
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<225>");
												bb_config_Err(String(L"Expecting assignment operator.",30));
											}
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<228>");
											bb_config_Err(String(L"Unrecognized preprocessor directive '",37)+t_toke2+String(L"'",1));
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}while(!(false));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<236>");
	bb_config_SetConfigVar2(String(L"MODPATH",7),t_p_modpath);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<237>");
	bb_config_SetConfigVar2(String(L"CD",2),t_p_cd);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<239>");
	bb_decl_PopEnv();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/preprocessor.monkey<241>");
	String t_=t_source->p_Join(String());
	return t_;
}
c_Target::c_Target(){
	m_dir=String();
	m_name=String();
	m_system=String();
	m_builder=0;
}
c_Target* c_Target::m_new(String t_dir,String t_name,String t_system,c_Builder* t_builder){
	DBG_ENTER("Target.new")
	c_Target *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_dir,"dir")
	DBG_LOCAL(t_name,"name")
	DBG_LOCAL(t_system,"system")
	DBG_LOCAL(t_builder,"builder")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<124>");
	this->m_dir=t_dir;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<125>");
	this->m_name=t_name;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<126>");
	this->m_system=t_system;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<127>");
	gc_assign(this->m_builder,t_builder);
	return this;
}
c_Target* c_Target::m_new2(){
	DBG_ENTER("Target.new")
	c_Target *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<117>");
	return this;
}
void c_Target::mark(){
	Object::mark();
	gc_mark_q(m_builder);
}
String c_Target::debug(){
	String t="(Target)\n";
	t+=dbg_decl("dir",&m_dir);
	t+=dbg_decl("name",&m_name);
	t+=dbg_decl("system",&m_system);
	t+=dbg_decl("builder",&m_builder);
	return t;
}
c_Map6::c_Map6(){
	m_root=0;
}
c_Map6* c_Map6::m_new(){
	DBG_ENTER("Map.new")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
int c_Map6::p_RotateLeft6(c_Node14* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node14* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map6::p_RotateRight6(c_Node14* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node14* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map6::p_InsertFixup6(c_Node14* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node14* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft6(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight6(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node14* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight6(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft6(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map6::p_Set6(String t_key,c_Target* t_value){
	DBG_ENTER("Map.Set")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node14* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node14* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node14)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup6(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
c_Node14* c_Map6::p_FirstNode(){
	DBG_ENTER("Map.FirstNode")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<125>");
	if(!((m_root)!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<127>");
	c_Node14* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<128>");
	while((t_node->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<129>");
		t_node=t_node->m_left;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<131>");
	return t_node;
}
c_NodeEnumerator2* c_Map6::p_ObjectEnumerator(){
	DBG_ENTER("Map.ObjectEnumerator")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<121>");
	c_NodeEnumerator2* t_=(new c_NodeEnumerator2)->m_new(p_FirstNode());
	return t_;
}
c_Node14* c_Map6::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node14* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
c_Target* c_Map6::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node14* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
void c_Map6::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map6::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap6::c_StringMap6(){
}
c_StringMap6* c_StringMap6::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map6::m_new();
	return this;
}
int c_StringMap6::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap6::mark(){
	c_Map6::mark();
}
String c_StringMap6::debug(){
	String t="(StringMap)\n";
	t=c_Map6::debug()+t;
	return t;
}
c_Node14::c_Node14(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node14* c_Node14::m_new(String t_key,c_Target* t_value,int t_color,c_Node14* t_parent){
	DBG_ENTER("Node.new")
	c_Node14 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node14* c_Node14::m_new2(){
	DBG_ENTER("Node.new")
	c_Node14 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
c_Node14* c_Node14::p_NextNode(){
	DBG_ENTER("Node.NextNode")
	c_Node14 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<385>");
	c_Node14* t_node=0;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<386>");
	if((m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<387>");
		t_node=m_right;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<388>");
		while((t_node->m_left)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<389>");
			t_node=t_node->m_left;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<391>");
		return t_node;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<393>");
	t_node=this;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<394>");
	c_Node14* t_parent=this->m_parent;
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<395>");
	while(((t_parent)!=0) && t_node==t_parent->m_right){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<396>");
		t_node=t_parent;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<397>");
		t_parent=t_parent->m_parent;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<399>");
	return t_parent;
}
String c_Node14::p_Key(){
	DBG_ENTER("Node.Key")
	c_Node14 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<377>");
	return m_key;
}
void c_Node14::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node14::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
void bb_config_PopConfigScope(){
	DBG_ENTER("PopConfigScope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<41>");
	gc_assign(bb_config__cfgScope,bb_config__cfgScopeStack->p_Pop());
}
c_NodeEnumerator2::c_NodeEnumerator2(){
	m_node=0;
}
c_NodeEnumerator2* c_NodeEnumerator2::m_new(c_Node14* t_node){
	DBG_ENTER("NodeEnumerator.new")
	c_NodeEnumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<437>");
	gc_assign(this->m_node,t_node);
	return this;
}
c_NodeEnumerator2* c_NodeEnumerator2::m_new2(){
	DBG_ENTER("NodeEnumerator.new")
	c_NodeEnumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<434>");
	return this;
}
bool c_NodeEnumerator2::p_HasNext(){
	DBG_ENTER("NodeEnumerator.HasNext")
	c_NodeEnumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<441>");
	bool t_=m_node!=0;
	return t_;
}
c_Node14* c_NodeEnumerator2::p_NextObject(){
	DBG_ENTER("NodeEnumerator.NextObject")
	c_NodeEnumerator2 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<445>");
	c_Node14* t_t=m_node;
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<446>");
	gc_assign(m_node,m_node->p_NextNode());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<447>");
	return t_t;
}
void c_NodeEnumerator2::mark(){
	Object::mark();
	gc_mark_q(m_node);
}
String c_NodeEnumerator2::debug(){
	String t="(NodeEnumerator)\n";
	t+=dbg_decl("node",&m_node);
	return t;
}
String bb_config_ENV_HOST;
String bb_config_ENV_CONFIG;
String bb_config_ENV_TARGET;
String bb_config_ENV_LANG;
String bb_os_StripAll(String t_path){
	DBG_ENTER("StripAll")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<159>");
	String t_=bb_os_StripDir(bb_os_StripExt(t_path));
	return t_;
}
c_AppDecl* bb_parser_ParseApp(String t_filepath){
	DBG_ENTER("ParseApp")
	DBG_LOCAL(t_filepath,"filepath")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1743>");
	bb_config__errInfo=t_filepath+String(L"<1>",3);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1745>");
	c_AppDecl* t_app=(new c_AppDecl)->m_new();
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1747>");
	String t_modpath=bb_os_StripAll(t_filepath);
	DBG_LOCAL(t_modpath,"modpath")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1749>");
	bb_parser_ParseModule(t_modpath,t_filepath,t_app);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1751>");
	return t_app;
}
c_Reflector::c_Reflector(){
	m_debug=false;
	m_refmod=0;
	m_langmod=0;
	m_boxesmod=0;
	m_munged=(new c_StringMap7)->m_new();
	m_modexprs=(new c_StringMap2)->m_new();
	m_refmods=(new c_StringSet)->m_new();
	m_classdecls=(new c_Stack8)->m_new();
	m_classids=(new c_StringMap7)->m_new();
	m_output=(new c_StringStack)->m_new2();
}
c_Reflector* c_Reflector::m_new(){
	DBG_ENTER("Reflector.new")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<6>");
	return this;
}
bool c_Reflector::m_MatchPath(String t_text,String t_pattern){
	DBG_ENTER("Reflector.MatchPath")
	DBG_LOCAL(t_text,"text")
	DBG_LOCAL(t_pattern,"pattern")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<74>");
	Array<String > t_alts=t_pattern.Split(String(L"|",1));
	DBG_LOCAL(t_alts,"alts")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<76>");
	Array<String > t_=t_alts;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_alt=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_alt,"alt")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<77>");
		if(!((t_alt).Length()!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<79>");
		Array<String > t_bits=t_alt.Split(String(L"*",1));
		DBG_LOCAL(t_bits,"bits")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<80>");
		if(t_bits.Length()==1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<81>");
			if(t_bits.At(0)==t_text){
				DBG_BLOCK();
				return true;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<82>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<85>");
		if(!t_text.StartsWith(t_bits.At(0))){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<87>");
		int t_i=t_bits.At(0).Length();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<88>");
		for(int t_j=1;t_j<t_bits.Length()-1;t_j=t_j+1){
			DBG_BLOCK();
			DBG_LOCAL(t_j,"j")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<89>");
			String t_bit=t_bits.At(t_j);
			DBG_LOCAL(t_bit,"bit")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<90>");
			t_i=t_text.Find(t_bit,t_i);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<91>");
			if(t_i==-1){
				DBG_BLOCK();
				break;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<92>");
			t_i+=t_bit.Length();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<95>");
		if(t_i!=-1 && t_text.Slice(t_i).EndsWith(t_bits.At(t_bits.Length()-1))){
			DBG_BLOCK();
			return true;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<97>");
	return false;
}
String c_Reflector::p_Mung(String t_ident){
	DBG_ENTER("Reflector.Mung")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<48>");
	if(m_debug){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<49>");
		t_ident=String(L"R",1)+t_ident;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<50>");
		t_ident=t_ident.Replace(String(L"_",1),String(L"_0",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<51>");
		t_ident=t_ident.Replace(String(L"[",1),String(L"_1",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<52>");
		t_ident=t_ident.Replace(String(L"]",1),String(L"_2",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<53>");
		t_ident=t_ident.Replace(String(L"<",1),String(L"_3",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<54>");
		t_ident=t_ident.Replace(String(L">",1),String(L"_4",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<55>");
		t_ident=t_ident.Replace(String(L",",1),String(L"_5",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<56>");
		t_ident=t_ident.Replace(String(L".",1),String(L"_",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<58>");
		t_ident=String(L"R",1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<61>");
	if(m_munged->p_Contains(t_ident)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<62>");
		int t_n=m_munged->p_Get(t_ident);
		DBG_LOCAL(t_n,"n")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<63>");
		t_n+=1;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<64>");
		m_munged->p_Set7(t_ident,t_n);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<65>");
		t_ident=t_ident+String(t_n);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<67>");
		m_munged->p_Set7(t_ident,1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<69>");
	return t_ident;
}
bool c_Reflector::p_ValidClass(c_ClassDecl* t_cdecl){
	DBG_ENTER("Reflector.ValidClass")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<190>");
	if(t_cdecl->m_munged==String(L"Object",6)){
		DBG_BLOCK();
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<191>");
	if(t_cdecl->m_munged==String(L"ThrowableObject",15)){
		DBG_BLOCK();
		return true;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<192>");
	if(!((t_cdecl->p_ExtendsObject())!=0)){
		DBG_BLOCK();
		return false;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<193>");
	if(!m_refmods->p_Contains(t_cdecl->p_ModuleScope()->m_filepath)){
		DBG_BLOCK();
		return false;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<194>");
	Array<c_Type* > t_=t_cdecl->m_instArgs;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Type* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<195>");
		if(((dynamic_cast<c_ObjectType*>(t_arg))!=0) && !p_ValidClass(t_arg->p_GetClass())){
			DBG_BLOCK();
			return false;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<197>");
	if((t_cdecl->m_superClass)!=0){
		DBG_BLOCK();
		bool t_3=p_ValidClass(t_cdecl->m_superClass);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<198>");
	return true;
}
String c_Reflector::p_TypeExpr(c_Type* t_ty,bool t_path){
	DBG_ENTER("Reflector.TypeExpr")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<129>");
	if((dynamic_cast<c_VoidType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Void",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<130>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Bool",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<131>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Int",3);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<132>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Float",5);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<133>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"String",6);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<134>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=p_TypeExpr(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType,t_path)+String(L"[]",2);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<135>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=p_DeclExpr((t_ty->p_GetClass()),t_path);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<136>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_Reflector::p_DeclExpr(c_Decl* t_decl,bool t_path){
	DBG_ENTER("Reflector.DeclExpr")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<141>");
	if(t_path && ((dynamic_cast<c_ClassDecl*>(t_decl->m_scope))!=0)){
		DBG_BLOCK();
		return t_decl->m_ident;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<143>");
	c_ModuleDecl* t_mdecl=dynamic_cast<c_ModuleDecl*>(t_decl);
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<144>");
	if((t_mdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<145>");
		if(t_path){
			DBG_BLOCK();
			return t_mdecl->m_rmodpath;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<147>");
		String t_expr=m_modexprs->p_Get(t_mdecl->m_filepath);
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<148>");
		if(!((t_expr).Length()!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<149>");
			bbPrint(String(L"REFLECTION ERROR",16));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<150>");
			t_expr=p_Mung(t_mdecl->m_rmodpath);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<151>");
			m_refmod->p_InsertDecl((new c_AliasDecl)->m_new(t_expr,0,(t_mdecl)));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<152>");
			m_modexprs->p_Set2(t_mdecl->m_filepath,t_expr);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<155>");
		return t_expr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<159>");
	c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl);
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<160>");
	if(((t_cdecl)!=0) && t_cdecl->m_munged==String(L"Object",6)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<161>");
		if(t_path){
			DBG_BLOCK();
			return String(L"monkey.lang.Object",18);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<162>");
		return String(L"Object",6);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<164>");
	if(((t_cdecl)!=0) && t_cdecl->m_munged==String(L"ThrowableObject",15)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<165>");
		if(t_path){
			DBG_BLOCK();
			return String(L"monkey.lang.Throwable",21);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<166>");
		return String(L"Throwable",9);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<169>");
	String t_ident=p_DeclExpr((t_decl->m_scope),t_path)+String(L".",1)+t_decl->m_ident;
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<171>");
	if(((t_cdecl)!=0) && ((t_cdecl->m_instArgs).Length()!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<172>");
		String t_t=String();
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<173>");
		Array<c_Type* > t_=t_cdecl->m_instArgs;
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			c_Type* t_arg=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_arg,"arg")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<174>");
			if((t_t).Length()!=0){
				DBG_BLOCK();
				t_t=t_t+String(L",",1);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<175>");
			t_t=t_t+p_TypeExpr(t_arg,t_path);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<177>");
		t_ident=t_ident+(String(L"<",1)+t_t+String(L">",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<180>");
	return t_ident;
}
int c_Reflector::p_Emit(String t_t){
	DBG_ENTER("Reflector.Emit")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<202>");
	m_output->p_Push(t_t);
	return 0;
}
bool c_Reflector::p_ValidType(c_Type* t_ty){
	DBG_ENTER("Reflector.ValidType")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<184>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		bool t_=p_ValidType(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<185>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		bool t_2=p_ValidClass(t_ty->p_GetClass());
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<186>");
	return true;
}
String c_Reflector::p_TypeInfo(c_Type* t_ty){
	DBG_ENTER("Reflector.TypeInfo")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<101>");
	if((dynamic_cast<c_VoidType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Null",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<102>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"_boolClass",10);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<103>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"_intClass",9);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<104>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"_floatClass",11);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<105>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"_stringClass",12);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<106>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<107>");
		c_Type* t_elemType=dynamic_cast<c_ArrayType*>(t_ty)->m_elemType;
		DBG_LOCAL(t_elemType,"elemType")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<108>");
		String t_name=String(L"monkey.boxes.ArrayObject<",25)+p_TypeExpr(t_elemType,true)+String(L">",1);
		DBG_LOCAL(t_name,"name")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<109>");
		if(m_classids->p_Contains(t_name)){
			DBG_BLOCK();
			String t_=String(L"_classes[",9)+String(m_classids->p_Get(t_name))+String(L"]",1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<110>");
		if(m_debug){
			DBG_BLOCK();
			bbPrint(String(L"Instantiating class: ",21)+t_name);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<111>");
		c_Type* t_2[]={t_elemType};
		c_ClassDecl* t_cdecl=m_boxesmod->p_FindType(String(L"ArrayObject",11),Array<c_Type* >(t_2,1))->p_GetClass();
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<112>");
		c_Enumerator2* t_3=t_cdecl->p_Decls()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl=t_3->p_NextObject();
			DBG_LOCAL(t_decl,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<113>");
			if(!((dynamic_cast<c_AliasDecl*>(t_decl))!=0)){
				DBG_BLOCK();
				t_decl->p_Semant();
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<115>");
		int t_id=m_classdecls->p_Length2();
		DBG_LOCAL(t_id,"id")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<116>");
		m_classids->p_Set7(t_name,t_id);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<117>");
		m_classdecls->p_Push22(t_cdecl);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<118>");
		String t_4=String(L"_classes[",9)+String(t_id)+String(L"]",1);
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<120>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<121>");
		String t_name2=p_DeclExpr((t_ty->p_GetClass()),true);
		DBG_LOCAL(t_name2,"name")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<122>");
		if(m_classids->p_Contains(t_name2)){
			DBG_BLOCK();
			String t_5=String(L"_classes[",9)+String(m_classids->p_Get(t_name2))+String(L"]",1);
			return t_5;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<123>");
		return String(L"_unknownClass",13);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<125>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
int c_Reflector::p_Attrs(c_Decl* t_decl){
	DBG_ENTER("Reflector.Attrs")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<206>");
	int t_=t_decl->m_attrs>>8&255;
	return t_;
}
String c_Reflector::p_Box(c_Type* t_ty,String t_expr){
	DBG_ENTER("Reflector.Box")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<25>");
	if((dynamic_cast<c_VoidType*>(t_ty))!=0){
		DBG_BLOCK();
		return t_expr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<26>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=String(L"New BoolObject(",15)+t_expr+String(L")",1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<27>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=String(L"New IntObject(",14)+t_expr+String(L")",1);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<28>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_3=String(L"New FloatObject(",16)+t_expr+String(L")",1);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<29>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_4=String(L"New StringObject(",17)+t_expr+String(L")",1);
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<30>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_5=String(L"New ArrayObject<",16)+p_TypeExpr(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType,false)+String(L">(",2)+t_expr+String(L")",1);
		return t_5;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<31>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		return t_expr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<32>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_Reflector::p_Emit2(c_ConstDecl* t_tdecl){
	DBG_ENTER("Reflector.Emit")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tdecl,"tdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<210>");
	if(!p_ValidType(t_tdecl->m_type)){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<212>");
	String t_name=p_DeclExpr((t_tdecl),true);
	DBG_LOCAL(t_name,"name")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<213>");
	String t_expr=p_DeclExpr((t_tdecl),false);
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<214>");
	String t_type=p_TypeInfo(t_tdecl->m_type);
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<216>");
	String t_=String(L"New ConstInfo(\"",15)+t_name+String(L"\",",2)+String(p_Attrs(t_tdecl))+String(L",",1)+t_type+String(L",",1)+p_Box(t_tdecl->m_type,t_expr)+String(L")",1);
	return t_;
}
String c_Reflector::p_Unbox(c_Type* t_ty,String t_expr){
	DBG_ENTER("Reflector.Unbox")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<37>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=String(L"BoolObject(",11)+t_expr+String(L").value",7);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<38>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=String(L"IntObject(",10)+t_expr+String(L").value",7);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<39>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_3=String(L"FloatObject(",12)+t_expr+String(L").value",7);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<40>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_4=String(L"StringObject(",13)+t_expr+String(L").value",7);
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<41>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_5=String(L"ArrayObject<",12)+p_TypeExpr(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType,false)+String(L">(",2)+t_expr+String(L").value",7);
		return t_5;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<42>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_6=p_DeclExpr((t_ty->p_GetClass()),false)+String(L"(",1)+t_expr+String(L")",1);
		return t_6;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<43>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_Reflector::p_Emit3(c_ClassDecl* t_cdecl){
	DBG_ENTER("Reflector.Emit")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<324>");
	if((t_cdecl->m_args).Length()!=0){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<326>");
	String t_name=p_DeclExpr((t_cdecl),true);
	DBG_LOCAL(t_name,"name")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<327>");
	String t_expr=p_DeclExpr((t_cdecl),false);
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<328>");
	String t_ident=p_Mung(t_name);
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<330>");
	String t_sclass=String(L"Null",4);
	DBG_LOCAL(t_sclass,"sclass")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<331>");
	if((t_cdecl->m_superClass)!=0){
		DBG_BLOCK();
		t_sclass=p_TypeInfo(t_cdecl->m_superClass->m_objectType);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<333>");
	String t_ifaces=String();
	DBG_LOCAL(t_ifaces,"ifaces")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<334>");
	Array<c_ClassDecl* > t_=t_cdecl->m_implments;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_idecl=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_idecl,"idecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<335>");
		if((t_ifaces).Length()!=0){
			DBG_BLOCK();
			t_ifaces=t_ifaces+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<336>");
		t_ifaces=t_ifaces+p_TypeInfo(t_idecl->m_objectType);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<339>");
	c_StringStack* t_consts=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_consts,"consts")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<340>");
	c_StringStack* t_globals=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_globals,"globals")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<341>");
	c_StringStack* t_fields=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_fields,"fields")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<342>");
	c_StringStack* t_methods=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_methods,"methods")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<343>");
	c_StringStack* t_functions=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_functions,"functions")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<344>");
	c_StringStack* t_ctors=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_ctors,"ctors")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<346>");
	c_Enumerator2* t_3=t_cdecl->p_Decls()->p_ObjectEnumerator();
	while(t_3->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_3->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<347>");
		if((dynamic_cast<c_AliasDecl*>(t_decl))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<353>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<356>");
		if(!((t_decl->p_IsSemanted())!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<358>");
		c_ConstDecl* t_pdecl=dynamic_cast<c_ConstDecl*>(t_decl);
		DBG_LOCAL(t_pdecl,"pdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<359>");
		if((t_pdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<360>");
			String t_p=p_Emit2(t_pdecl);
			DBG_LOCAL(t_p,"p")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<361>");
			if((t_p).Length()!=0){
				DBG_BLOCK();
				t_consts->p_Push(t_p);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<362>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<365>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<366>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<367>");
			String t_g=p_Emit6(t_gdecl);
			DBG_LOCAL(t_g,"g")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<368>");
			if((t_g).Length()!=0){
				DBG_BLOCK();
				t_globals->p_Push(t_g);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<369>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<372>");
		c_FieldDecl* t_tdecl=dynamic_cast<c_FieldDecl*>(t_decl);
		DBG_LOCAL(t_tdecl,"tdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<373>");
		if((t_tdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<374>");
			String t_f=p_Emit5(t_tdecl);
			DBG_LOCAL(t_f,"f")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<375>");
			if((t_f).Length()!=0){
				DBG_BLOCK();
				t_fields->p_Push(t_f);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<376>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<379>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<380>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<381>");
			String t_f2=p_Emit4(t_fdecl);
			DBG_LOCAL(t_f2,"f")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<382>");
			if((t_f2).Length()!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<383>");
				if(t_fdecl->p_IsCtor()){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<384>");
					t_ctors->p_Push(t_f2);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<385>");
					if(t_fdecl->p_IsMethod()){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<386>");
						t_methods->p_Push(t_f2);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<388>");
						t_functions->p_Push(t_f2);
					}
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<391>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<395>");
	p_Emit(String(L"Class ",6)+t_ident+String(L" Extends ClassInfo",18));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<396>");
	p_Emit(String(L" Method New()",13));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<397>");
	p_Emit(String(L"  Super.New(\"",13)+t_name+String(L"\",",2)+String(p_Attrs(t_cdecl))+String(L",",1)+t_sclass+String(L",[",2)+t_ifaces+String(L"])",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<398>");
	String t_1=t_name;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<399>");
	if(t_1==String(L"monkey.boxes.BoolObject",23)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<400>");
		p_Emit(String(L"  _boolClass=Self",17));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<401>");
		if(t_1==String(L"monkey.boxes.IntObject",22)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<402>");
			p_Emit(String(L"  _intClass=Self",16));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<403>");
			if(t_1==String(L"monkey.boxes.FloatObject",24)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<404>");
				p_Emit(String(L"  _floatClass=Self",18));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<405>");
				if(t_1==String(L"monkey.boxes.StringObject",25)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<406>");
					p_Emit(String(L"  _stringClass=Self",19));
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<408>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<410>");
	if(t_name.StartsWith(String(L"monkey.boxes.ArrayObject<",25))){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<411>");
		c_Type* t_elemType=t_cdecl->m_instArgs.At(0);
		DBG_LOCAL(t_elemType,"elemType")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<412>");
		String t_elemExpr=p_TypeExpr(t_elemType,false);
		DBG_LOCAL(t_elemExpr,"elemExpr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<413>");
		int t_i=t_elemExpr.Find(String(L"[]",2),0);
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<414>");
		if(t_i==-1){
			DBG_BLOCK();
			t_i=t_elemExpr.Length();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<415>");
		String t_ARRAY_PREFIX=m_modexprs->p_Get(m_boxesmod->m_filepath)+String(L".ArrayObject<",13);
		DBG_LOCAL(t_ARRAY_PREFIX,"ARRAY_PREFIX")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<416>");
		p_Emit(String(L" Method ElementType:ClassInfo() Property",40));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<417>");
		p_Emit(String(L"  Return ",9)+p_TypeInfo(t_elemType));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<418>");
		p_Emit(String(L" End",4));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<419>");
		p_Emit(String(L" Method ArrayLength:Int(i:Object) Property",42));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<420>");
		p_Emit(String(L"  Return ",9)+t_ARRAY_PREFIX+t_elemExpr+String(L">(i).value.Length",17));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<421>");
		p_Emit(String(L" End",4));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<422>");
		p_Emit(String(L" Method GetElement:Object(i:Object,e)",37));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<423>");
		p_Emit(String(L"  Return ",9)+p_Box(t_elemType,t_ARRAY_PREFIX+t_elemExpr+String(L">(i).value[e]",13)));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<424>");
		p_Emit(String(L" End",4));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<425>");
		p_Emit(String(L" Method SetElement:Void(i:Object,e,v:Object)",44));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<426>");
		p_Emit(String(L"  ",2)+t_ARRAY_PREFIX+t_elemExpr+String(L">(i).value[e]=",14)+p_Unbox(t_elemType,String(L"v",1)));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<427>");
		p_Emit(String(L" End",4));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<428>");
		p_Emit(String(L" Method NewArray:Object(l:Int)",30));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<430>");
		p_Emit(String(L"  Return ",9)+p_Box((t_elemType->p_ArrayOf()),String(L"New ",4)+t_elemExpr.Slice(0,t_i)+String(L"[l]",3)+t_elemExpr.Slice(t_i)));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<431>");
		p_Emit(String(L" End",4));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<434>");
	if(!((t_cdecl->p_IsAbstract())!=0) && !((t_cdecl->p_IsExtern())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<435>");
		p_Emit(String(L" Method NewInstance:Object()",28));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<436>");
		p_Emit(String(L"  Return New ",13)+t_expr);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<437>");
		p_Emit(String(L" End",4));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<440>");
	p_Emit(String(L" Method Init()",14));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<441>");
	if((t_consts->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<442>");
		p_Emit(String(L"  _consts=new ConstInfo[",24)+String(t_consts->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<443>");
		for(int t_i2=0;t_i2<t_consts->p_Length2();t_i2=t_i2+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i2,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<444>");
			p_Emit(String(L"  _consts[",10)+String(t_i2)+String(L"]=",2)+t_consts->p_Get2(t_i2));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<447>");
	if((t_globals->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<448>");
		p_Emit(String(L"  _globals=new GlobalInfo[",26)+String(t_globals->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<449>");
		for(int t_i3=0;t_i3<t_globals->p_Length2();t_i3=t_i3+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i3,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<450>");
			p_Emit(String(L"  _globals[",11)+String(t_i3)+String(L"]=New ",6)+t_globals->p_Get2(t_i3));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<453>");
	if((t_fields->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<454>");
		p_Emit(String(L"  _fields=New FieldInfo[",24)+String(t_fields->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<455>");
		for(int t_i4=0;t_i4<t_fields->p_Length2();t_i4=t_i4+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i4,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<456>");
			p_Emit(String(L"  _fields[",10)+String(t_i4)+String(L"]=New ",6)+t_fields->p_Get2(t_i4));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<459>");
	if((t_methods->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<460>");
		p_Emit(String(L"  _methods=New MethodInfo[",26)+String(t_methods->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<461>");
		for(int t_i5=0;t_i5<t_methods->p_Length2();t_i5=t_i5+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i5,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<462>");
			p_Emit(String(L"  _methods[",11)+String(t_i5)+String(L"]=New ",6)+t_methods->p_Get2(t_i5));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<465>");
	if((t_functions->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<466>");
		p_Emit(String(L"  _functions=New FunctionInfo[",30)+String(t_functions->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<467>");
		for(int t_i6=0;t_i6<t_functions->p_Length2();t_i6=t_i6+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i6,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<468>");
			p_Emit(String(L"  _functions[",13)+String(t_i6)+String(L"]=New ",6)+t_functions->p_Get2(t_i6));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<471>");
	if((t_ctors->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<472>");
		p_Emit(String(L"  _ctors=New FunctionInfo[",26)+String(t_ctors->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<473>");
		for(int t_i7=0;t_i7<t_ctors->p_Length2();t_i7=t_i7+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i7,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<474>");
			p_Emit(String(L"  _ctors[",9)+String(t_i7)+String(L"]=New ",6)+t_ctors->p_Get2(t_i7));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<477>");
	p_Emit(String(L" InitR()",8));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<478>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<479>");
	p_Emit(String(L"End",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<481>");
	return t_ident;
}
String c_Reflector::p_Emit4(c_FuncDecl* t_fdecl){
	DBG_ENTER("Reflector.Emit")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<267>");
	if(!p_ValidType(t_fdecl->m_retType)){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<268>");
	Array<c_ArgDecl* > t_=t_fdecl->m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<269>");
		if(!p_ValidType(t_arg->m_type)){
			DBG_BLOCK();
			return String();
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<272>");
	String t_name=p_DeclExpr((t_fdecl),true);
	DBG_LOCAL(t_name,"name")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<273>");
	String t_expr=p_DeclExpr((t_fdecl),false);
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<274>");
	String t_ident=p_Mung(t_name);
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<275>");
	String t_rtype=p_TypeInfo(t_fdecl->m_retType);
	DBG_LOCAL(t_rtype,"rtype")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<277>");
	String t_base=String(L"FunctionInfo",12);
	DBG_LOCAL(t_base,"base")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<278>");
	if(t_fdecl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<279>");
		String t_clas=p_DeclExpr((t_fdecl->p_ClassScope()),false);
		DBG_LOCAL(t_clas,"clas")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<280>");
		t_expr=t_clas+String(L"(i).",4)+t_fdecl->m_ident;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<281>");
		t_base=String(L"MethodInfo",10);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<284>");
	Array<String > t_argtys=Array<String >(t_fdecl->m_argDecls.Length());
	DBG_LOCAL(t_argtys,"argtys")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<285>");
	for(int t_i=0;t_i<t_argtys.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<286>");
		t_argtys.At(t_i)=p_TypeInfo(t_fdecl->m_argDecls.At(t_i)->m_type);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<289>");
	p_Emit(String(L"Class ",6)+t_ident+String(L" Extends ",9)+t_base);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<290>");
	p_Emit(String(L" Method New()",13));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<291>");
	p_Emit(String(L"  Super.New(\"",13)+t_name+String(L"\",",2)+String(p_Attrs(t_fdecl))+String(L",",1)+t_rtype+String(L",[",2)+String(L",",1).Join(t_argtys)+String(L"])",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<292>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<294>");
	if(t_fdecl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<295>");
		p_Emit(String(L" Method Invoke:Object(i:Object,p:Object[])",42));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<297>");
		p_Emit(String(L" Method Invoke:Object(p:Object[])",33));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<299>");
	c_StringStack* t_args=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<300>");
	for(int t_i2=0;t_i2<t_fdecl->m_argDecls.Length();t_i2=t_i2+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i2,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<301>");
		c_ArgDecl* t_arg2=t_fdecl->m_argDecls.At(t_i2);
		DBG_LOCAL(t_arg2,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<302>");
		t_args->p_Push(p_Unbox(t_arg2->m_type,String(L"p[",2)+String(t_i2)+String(L"]",1)));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<304>");
	if(t_fdecl->p_IsCtor()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<305>");
		c_ClassDecl* t_cdecl=t_fdecl->p_ClassScope();
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<306>");
		if((t_cdecl->p_IsAbstract())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<307>");
			p_Emit(String(L"  Return Null",13));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<309>");
			p_Emit(String(L"  Return New ",13)+p_DeclExpr((t_cdecl),false)+String(L"(",1)+t_args->p_Join(String(L",",1))+String(L")",1));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<311>");
		if((dynamic_cast<c_VoidType*>(t_fdecl->m_retType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<312>");
			p_Emit(String(L"  ",2)+t_expr+String(L"(",1)+t_args->p_Join(String(L",",1))+String(L")",1));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<314>");
			p_Emit(String(L"  Return ",9)+p_Box(t_fdecl->m_retType,t_expr+String(L"(",1)+t_args->p_Join(String(L",",1))+String(L")",1)));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<316>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<318>");
	p_Emit(String(L"End",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<320>");
	return t_ident;
}
String c_Reflector::p_Emit5(c_FieldDecl* t_tdecl){
	DBG_ENTER("Reflector.Emit")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_tdecl,"tdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<243>");
	if(!p_ValidType(t_tdecl->m_type)){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<245>");
	String t_name=t_tdecl->m_ident;
	DBG_LOCAL(t_name,"name")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<246>");
	String t_ident=p_Mung(t_name);
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<247>");
	String t_type=p_TypeInfo(t_tdecl->m_type);
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<248>");
	String t_clas=p_DeclExpr((t_tdecl->p_ClassScope()),false);
	DBG_LOCAL(t_clas,"clas")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<249>");
	String t_expr=t_clas+String(L"(i).",4)+t_tdecl->m_ident;
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<251>");
	p_Emit(String(L"Class ",6)+t_ident+String(L" Extends FieldInfo",18));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<252>");
	p_Emit(String(L" Method New()",13));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<253>");
	p_Emit(String(L"  Super.New(\"",13)+t_name+String(L"\",",2)+String(p_Attrs(t_tdecl))+String(L",",1)+t_type+String(L")",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<254>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<255>");
	p_Emit(String(L" Method GetValue:Object(i:Object)",33));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<256>");
	p_Emit(String(L"  Return ",9)+p_Box(t_tdecl->m_type,t_expr));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<257>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<258>");
	p_Emit(String(L" Method SetValue:Void(i:Object,v:Object)",40));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<259>");
	p_Emit(String(L"  ",2)+t_expr+String(L"=",1)+p_Unbox(t_tdecl->m_type,String(L"v",1)));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<260>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<261>");
	p_Emit(String(L"End",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<263>");
	return t_ident;
}
String c_Reflector::p_Emit6(c_GlobalDecl* t_gdecl){
	DBG_ENTER("Reflector.Emit")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_gdecl,"gdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<220>");
	if(!p_ValidType(t_gdecl->m_type)){
		DBG_BLOCK();
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<222>");
	String t_name=p_DeclExpr((t_gdecl),true);
	DBG_LOCAL(t_name,"name")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<223>");
	String t_expr=p_DeclExpr((t_gdecl),false);
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<224>");
	String t_ident=p_Mung(t_name);
	DBG_LOCAL(t_ident,"ident")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<225>");
	String t_type=p_TypeInfo(t_gdecl->m_type);
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<227>");
	p_Emit(String(L"Class ",6)+t_ident+String(L" Extends GlobalInfo",19));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<228>");
	p_Emit(String(L" Method New()",13));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<229>");
	p_Emit(String(L"  Super.New(\"",13)+t_name+String(L"\",",2)+String(p_Attrs(t_gdecl))+String(L",",1)+t_type+String(L")",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<230>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<231>");
	p_Emit(String(L" Method GetValue:Object()",25));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<232>");
	p_Emit(String(L"  Return ",9)+p_Box(t_gdecl->m_type,t_expr));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<233>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<234>");
	p_Emit(String(L" Method SetValue:Void(v:Object)",31));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<235>");
	p_Emit(String(L"  ",2)+t_expr+String(L"=",1)+p_Unbox(t_gdecl->m_type,String(L"v",1)));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<236>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<237>");
	p_Emit(String(L"End",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<239>");
	return t_ident;
}
int c_Reflector::p_Semant3(c_AppDecl* t_app){
	DBG_ENTER("Reflector.Semant")
	c_Reflector *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<486>");
	String t_filter=bb_config_GetConfigVar(String(L"REFLECTION_FILTER",17));
	DBG_LOCAL(t_filter,"filter")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<487>");
	if(!((t_filter).Length()!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<488>");
	t_filter=t_filter.Replace(String(L";",1),String(L"|",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<490>");
	m_debug=bb_config_GetConfigVar(String(L"DEBUG_REFLECTION",16))==String(L"1",1);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<492>");
	c_ValueEnumerator* t_=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_mdecl=t_->p_NextObject();
		DBG_LOCAL(t_mdecl,"mdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<493>");
		String t_path=t_mdecl->m_rmodpath;
		DBG_LOCAL(t_path,"path")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<494>");
		if(t_path==String(L"reflection",10)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<495>");
			gc_assign(m_refmod,t_mdecl);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<496>");
			if(t_path==String(L"monkey.lang",11)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<497>");
				gc_assign(m_langmod,t_mdecl);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<498>");
				if(t_path==String(L"monkey.boxes",12)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<499>");
					gc_assign(m_boxesmod,t_mdecl);
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<502>");
	if(!((m_refmod)!=0)){
		DBG_BLOCK();
		bbError(String(L"reflection module not found!",28));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<504>");
	if(m_debug){
		DBG_BLOCK();
		bbPrint(String(L"Semanting all",13));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<506>");
	c_ValueEnumerator* t_2=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_mdecl2=t_2->p_NextObject();
		DBG_LOCAL(t_mdecl2,"mdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<507>");
		String t_path2=t_mdecl2->m_rmodpath;
		DBG_LOCAL(t_path2,"path")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<509>");
		if(t_mdecl2!=m_boxesmod && t_mdecl2!=m_langmod && !m_MatchPath(t_path2,t_filter)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<511>");
		String t_expr=p_Mung(t_path2);
		DBG_LOCAL(t_expr,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<512>");
		m_refmod->p_InsertDecl((new c_AliasDecl)->m_new(t_expr,0,(t_mdecl2)));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<513>");
		m_modexprs->p_Set2(t_mdecl2->m_filepath,t_expr);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<515>");
		m_refmods->p_Insert(t_mdecl2->m_filepath);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<516>");
		t_mdecl2->p_SemantAll();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<519>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<520>");
		int t_n=t_app->m_allSemantedDecls->p_Count();
		DBG_LOCAL(t_n,"n")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<521>");
		c_ValueEnumerator* t_3=t_app->m_imported->p_Values()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_ModuleDecl* t_mdecl3=t_3->p_NextObject();
			DBG_LOCAL(t_mdecl3,"mdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<522>");
			if(!m_refmods->p_Contains(t_mdecl3->m_filepath)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<523>");
			t_mdecl3->p_SemantAll();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<525>");
		t_n=t_app->m_allSemantedDecls->p_Count()-t_n;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<526>");
		if(!((t_n)!=0)){
			DBG_BLOCK();
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<527>");
		if(m_debug){
			DBG_BLOCK();
			bbPrint(String(L"Semanting more: ",16)+String(t_n));
		}
	}while(!(false));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<531>");
	c_Enumerator2* t_4=t_app->m_allSemantedDecls->p_ObjectEnumerator();
	while(t_4->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_4->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<534>");
		if(!m_refmods->p_Contains(t_decl->p_ModuleScope()->m_filepath)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<536>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<537>");
		if(((t_cdecl)!=0) && p_ValidClass(t_cdecl)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<538>");
			m_classids->p_Set7(p_DeclExpr((t_cdecl),true),m_classdecls->p_Length2());
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<539>");
			m_classdecls->p_Push22(t_cdecl);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<540>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<544>");
	c_StringStack* t_classes=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_classes,"classes")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<545>");
	c_StringStack* t_consts=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_consts,"consts")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<546>");
	c_StringStack* t_globals=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_globals,"globals")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<547>");
	c_StringStack* t_functions=(new c_StringStack)->m_new2();
	DBG_LOCAL(t_functions,"functions")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<549>");
	if(m_debug){
		DBG_BLOCK();
		bbPrint(String(L"Generating reflection info",26));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<551>");
	c_Enumerator2* t_5=t_app->m_allSemantedDecls->p_ObjectEnumerator();
	while(t_5->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_5->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<554>");
		if(!m_refmods->p_Contains(t_decl2->p_ModuleScope()->m_filepath)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<556>");
		c_ConstDecl* t_pdecl=dynamic_cast<c_ConstDecl*>(t_decl2);
		DBG_LOCAL(t_pdecl,"pdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<557>");
		if((t_pdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<558>");
			String t_p=p_Emit2(t_pdecl);
			DBG_LOCAL(t_p,"p")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<559>");
			if((t_p).Length()!=0){
				DBG_BLOCK();
				t_consts->p_Push(t_p);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<560>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<563>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl2);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<564>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<565>");
			String t_g=p_Emit6(t_gdecl);
			DBG_LOCAL(t_g,"g")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<566>");
			if((t_g).Length()!=0){
				DBG_BLOCK();
				t_globals->p_Push(t_g);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<567>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<570>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl2);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<571>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<572>");
			String t_f=p_Emit4(t_fdecl);
			DBG_LOCAL(t_f,"f")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<573>");
			if((t_f).Length()!=0){
				DBG_BLOCK();
				t_functions->p_Push(t_f);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<574>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<578>");
	if(m_debug){
		DBG_BLOCK();
		bbPrint(String(L"Finalizing classes",18));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<581>");
	t_app->p_FinalizeClasses();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<583>");
	if(m_debug){
		DBG_BLOCK();
		bbPrint(String(L"Generating class reflection info",32));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<585>");
	for(int t_i=0;t_i<m_classdecls->p_Length2();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<586>");
		t_classes->p_Push(p_Emit3(m_classdecls->p_Get2(t_i)));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<589>");
	p_Emit(String(L"Global _init:=__init()",22));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<590>");
	p_Emit(String(L"Function __init()",17));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<591>");
	if((t_classes->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<592>");
		p_Emit(String(L" _classes=New ClassInfo[",24)+String(t_classes->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<593>");
		for(int t_i2=0;t_i2<t_classes->p_Length2();t_i2=t_i2+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i2,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<594>");
			p_Emit(String(L" _classes[",10)+String(t_i2)+String(L"]=New ",6)+t_classes->p_Get2(t_i2));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<596>");
		for(int t_i3=0;t_i3<t_classes->p_Length2();t_i3=t_i3+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i3,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<597>");
			p_Emit(String(L" _classes[",10)+String(t_i3)+String(L"].Init()",8));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<600>");
	if((t_consts->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<601>");
		p_Emit(String(L" _consts=new ConstInfo[",23)+String(t_consts->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<602>");
		for(int t_i4=0;t_i4<t_consts->p_Length2();t_i4=t_i4+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i4,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<603>");
			p_Emit(String(L" _consts[",9)+String(t_i4)+String(L"]=",2)+t_consts->p_Get2(t_i4));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<606>");
	if((t_globals->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<607>");
		p_Emit(String(L" _globals=New GlobalInfo[",25)+String(t_globals->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<608>");
		for(int t_i5=0;t_i5<t_globals->p_Length2();t_i5=t_i5+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i5,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<609>");
			p_Emit(String(L" _globals[",10)+String(t_i5)+String(L"]=New ",6)+t_globals->p_Get2(t_i5));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<612>");
	if((t_functions->p_Length2())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<613>");
		p_Emit(String(L" _functions=New FunctionInfo[",29)+String(t_functions->p_Length2())+String(L"]",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<614>");
		for(int t_i6=0;t_i6<t_functions->p_Length2();t_i6=t_i6+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i6,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<615>");
			p_Emit(String(L" _functions[",12)+String(t_i6)+String(L"]=New ",6)+t_functions->p_Get2(t_i6));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<618>");
	p_Emit(String(L" _getClass=New __GetClass",25));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<619>");
	p_Emit(String(L"End",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<621>");
	p_Emit(String(L"Class __GetClass Extends _GetClass",34));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<622>");
	p_Emit(String(L" Method GetClass:ClassInfo(o:Object)",36));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<623>");
	for(int t_i7=t_classes->p_Length2()-1;t_i7>=0;t_i7=t_i7+-1){
		DBG_BLOCK();
		DBG_LOCAL(t_i7,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<624>");
		String t_expr2=p_DeclExpr((m_classdecls->p_Get2(t_i7)),false);
		DBG_LOCAL(t_expr2,"expr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<625>");
		p_Emit(String(L"  If ",5)+t_expr2+String(L"(o)<>Null Return _classes[",26)+String(t_i7)+String(L"]",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<627>");
	p_Emit(String(L"  Return _unknownClass",22));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<628>");
	p_Emit(String(L" End",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<629>");
	p_Emit(String(L"End",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<631>");
	String t_source=m_output->p_Join(String(L"\n",1));
	DBG_LOCAL(t_source,"source")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<633>");
	int t_attrs=8388608;
	DBG_LOCAL(t_attrs,"attrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<635>");
	if(m_debug){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<636>");
		bbPrint(String(L"Reflection source:\n",19)+t_source);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<638>");
		t_attrs|=4194304;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<641>");
	bb_parser_ParseSource(t_source,t_app,m_refmod,t_attrs);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<643>");
	m_refmod->p_FindValDecl(String(L"_init",5));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/reflection/reflector.monkey<645>");
	t_app->p_Semant();
	return 0;
}
void c_Reflector::mark(){
	Object::mark();
	gc_mark_q(m_refmod);
	gc_mark_q(m_langmod);
	gc_mark_q(m_boxesmod);
	gc_mark_q(m_munged);
	gc_mark_q(m_modexprs);
	gc_mark_q(m_refmods);
	gc_mark_q(m_classdecls);
	gc_mark_q(m_classids);
	gc_mark_q(m_output);
}
String c_Reflector::debug(){
	String t="(Reflector)\n";
	t+=dbg_decl("debug",&m_debug);
	t+=dbg_decl("refmod",&m_refmod);
	t+=dbg_decl("langmod",&m_langmod);
	t+=dbg_decl("boxesmod",&m_boxesmod);
	t+=dbg_decl("output",&m_output);
	t+=dbg_decl("munged",&m_munged);
	t+=dbg_decl("refmods",&m_refmods);
	t+=dbg_decl("modexprs",&m_modexprs);
	t+=dbg_decl("classids",&m_classids);
	t+=dbg_decl("classdecls",&m_classdecls);
	return t;
}
c_MapValues::c_MapValues(){
	m_map=0;
}
c_MapValues* c_MapValues::m_new(c_Map5* t_map){
	DBG_ENTER("MapValues.new")
	c_MapValues *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_map,"map")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<519>");
	gc_assign(this->m_map,t_map);
	return this;
}
c_MapValues* c_MapValues::m_new2(){
	DBG_ENTER("MapValues.new")
	c_MapValues *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<516>");
	return this;
}
c_ValueEnumerator* c_MapValues::p_ObjectEnumerator(){
	DBG_ENTER("MapValues.ObjectEnumerator")
	c_MapValues *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<523>");
	c_ValueEnumerator* t_=(new c_ValueEnumerator)->m_new(m_map->p_FirstNode());
	return t_;
}
void c_MapValues::mark(){
	Object::mark();
	gc_mark_q(m_map);
}
String c_MapValues::debug(){
	String t="(MapValues)\n";
	t+=dbg_decl("map",&m_map);
	return t;
}
c_ValueEnumerator::c_ValueEnumerator(){
	m_node=0;
}
c_ValueEnumerator* c_ValueEnumerator::m_new(c_Node7* t_node){
	DBG_ENTER("ValueEnumerator.new")
	c_ValueEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<481>");
	gc_assign(this->m_node,t_node);
	return this;
}
c_ValueEnumerator* c_ValueEnumerator::m_new2(){
	DBG_ENTER("ValueEnumerator.new")
	c_ValueEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<478>");
	return this;
}
bool c_ValueEnumerator::p_HasNext(){
	DBG_ENTER("ValueEnumerator.HasNext")
	c_ValueEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<485>");
	bool t_=m_node!=0;
	return t_;
}
c_ModuleDecl* c_ValueEnumerator::p_NextObject(){
	DBG_ENTER("ValueEnumerator.NextObject")
	c_ValueEnumerator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<489>");
	c_Node7* t_t=m_node;
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<490>");
	gc_assign(m_node,m_node->p_NextNode());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<491>");
	return t_t->m_value;
}
void c_ValueEnumerator::mark(){
	Object::mark();
	gc_mark_q(m_node);
}
String c_ValueEnumerator::debug(){
	String t="(ValueEnumerator)\n";
	t+=dbg_decl("node",&m_node);
	return t;
}
c_Map7::c_Map7(){
	m_root=0;
}
c_Map7* c_Map7::m_new(){
	DBG_ENTER("Map.new")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
c_Node15* c_Map7::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node15* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
bool c_Map7::p_Contains(String t_key){
	DBG_ENTER("Map.Contains")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<25>");
	bool t_=p_FindNode(t_key)!=0;
	return t_;
}
int c_Map7::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node15* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
int c_Map7::p_RotateLeft7(c_Node15* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node15* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map7::p_RotateRight7(c_Node15* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node15* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map7::p_InsertFixup7(c_Node15* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node15* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft7(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight7(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node15* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight7(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft7(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map7::p_Set7(String t_key,int t_value){
	DBG_ENTER("Map.Set")
	c_Map7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node15* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node15* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				t_node->m_value=t_value;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node15)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup7(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
void c_Map7::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map7::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap7::c_StringMap7(){
}
c_StringMap7* c_StringMap7::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map7::m_new();
	return this;
}
int c_StringMap7::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap7::mark(){
	c_Map7::mark();
}
String c_StringMap7::debug(){
	String t="(StringMap)\n";
	t=c_Map7::debug()+t;
	return t;
}
c_Node15::c_Node15(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node15* c_Node15::m_new(String t_key,int t_value,int t_color,c_Node15* t_parent){
	DBG_ENTER("Node.new")
	c_Node15 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	this->m_value=t_value;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node15* c_Node15::m_new2(){
	DBG_ENTER("Node.new")
	c_Node15 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
void c_Node15::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_parent);
}
String c_Node15::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
c_Enumerator4::c_Enumerator4(){
	m__list=0;
	m__curr=0;
}
c_Enumerator4* c_Enumerator4::m_new(c_List6* t_list){
	DBG_ENTER("Enumerator.new")
	c_Enumerator4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_list,"list")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<326>");
	gc_assign(m__list,t_list);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<327>");
	gc_assign(m__curr,t_list->m__head->m__succ);
	return this;
}
c_Enumerator4* c_Enumerator4::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<323>");
	return this;
}
bool c_Enumerator4::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<331>");
	while(m__curr->m__succ->m__pred!=m__curr){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<332>");
		gc_assign(m__curr,m__curr->m__succ);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<334>");
	bool t_=m__curr!=m__list->m__head;
	return t_;
}
c_ClassDecl* c_Enumerator4::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator4 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<338>");
	c_ClassDecl* t_data=m__curr->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<339>");
	gc_assign(m__curr,m__curr->m__succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<340>");
	return t_data;
}
void c_Enumerator4::mark(){
	Object::mark();
	gc_mark_q(m__list);
	gc_mark_q(m__curr);
}
String c_Enumerator4::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("_list",&m__list);
	t+=dbg_decl("_curr",&m__curr);
	return t;
}
c_Stack8::c_Stack8(){
	m_data=Array<c_ClassDecl* >();
	m_length=0;
}
c_Stack8* c_Stack8::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack8* c_Stack8::m_new2(Array<c_ClassDecl* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
c_ClassDecl* c_Stack8::m_NIL;
void c_Stack8::p_Length(int t_newlength){
	DBG_ENTER("Stack.Length")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_newlength,"newlength")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<45>");
	if(t_newlength<m_length){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<46>");
		for(int t_i=t_newlength;t_i<m_length;t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<47>");
			gc_assign(m_data.At(t_i),m_NIL);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<49>");
		if(t_newlength>m_data.Length()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<50>");
			gc_assign(m_data,m_data.Resize(bb_math_Max(m_length*2+10,t_newlength)));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<52>");
	m_length=t_newlength;
}
int c_Stack8::p_Length2(){
	DBG_ENTER("Stack.Length")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<56>");
	return m_length;
}
void c_Stack8::p_Push22(c_ClassDecl* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack8::p_Push23(Array<c_ClassDecl* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push22(t_values.At(t_offset+t_i));
	}
}
void c_Stack8::p_Push24(Array<c_ClassDecl* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push23(t_values,t_offset,t_values.Length()-t_offset);
}
c_ClassDecl* c_Stack8::p_Get2(int t_index){
	DBG_ENTER("Stack.Get")
	c_Stack8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_index,"index")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<104>");
	return m_data.At(t_index);
}
void c_Stack8::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack8::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("NIL",&c_Stack8::m_NIL);
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
int bb_parser_ParseSource(String t_source,c_AppDecl* t_app,c_ModuleDecl* t_mdecl,int t_defattrs){
	DBG_ENTER("ParseSource")
	DBG_LOCAL(t_source,"source")
	DBG_LOCAL(t_app,"app")
	DBG_LOCAL(t_mdecl,"mdecl")
	DBG_LOCAL(t_defattrs,"defattrs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1713>");
	c_Toker* t_toker=(new c_Toker)->m_new(String(L"$SOURCE",7),t_source);
	DBG_LOCAL(t_toker,"toker")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1715>");
	c_Parser* t_parser=(new c_Parser)->m_new(t_toker,t_app,t_mdecl,t_defattrs);
	DBG_LOCAL(t_parser,"parser")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/parser.monkey<1717>");
	t_parser->p_ParseMain();
	return 0;
}
c_Translator::c_Translator(){
}
c_Translator* c_Translator::m_new(){
	DBG_ENTER("Translator.new")
	c_Translator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<6>");
	return this;
}
void c_Translator::mark(){
	Object::mark();
}
String c_Translator::debug(){
	String t="(Translator)\n";
	return t;
}
c_Translator* bb_translator__trans;
int bb_os_DeleteDir(String t_path,bool t_recursive){
	DBG_ENTER("DeleteDir")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_recursive,"recursive")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<111>");
	if(!t_recursive){
		DBG_BLOCK();
		int t_=DeleteDir(t_path);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<113>");
	int t_4=FileType(t_path);
	DBG_LOCAL(t_4,"4")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<114>");
	if(t_4==0){
		DBG_BLOCK();
		return 1;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<115>");
		if(t_4==1){
			DBG_BLOCK();
			return 0;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<118>");
	Array<String > t_2=LoadDir(t_path);
	int t_3=0;
	while(t_3<t_2.Length()){
		DBG_BLOCK();
		String t_f=t_2.At(t_3);
		t_3=t_3+1;
		DBG_LOCAL(t_f,"f")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<119>");
		if(t_f==String(L".",1) || t_f==String(L"..",2)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<121>");
		String t_fpath=t_path+String(L"/",1)+t_f;
		DBG_LOCAL(t_fpath,"fpath")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<123>");
		if(FileType(t_fpath)==2){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<124>");
			if(!((bb_os_DeleteDir(t_fpath,true))!=0)){
				DBG_BLOCK();
				return 0;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<126>");
			if(!((DeleteFile(t_fpath))!=0)){
				DBG_BLOCK();
				return 0;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<130>");
	int t_5=DeleteDir(t_path);
	return t_5;
}
int bb_os_CopyDir(String t_srcpath,String t_dstpath,bool t_recursive,bool t_hidden){
	DBG_ENTER("CopyDir")
	DBG_LOCAL(t_srcpath,"srcpath")
	DBG_LOCAL(t_dstpath,"dstpath")
	DBG_LOCAL(t_recursive,"recursive")
	DBG_LOCAL(t_hidden,"hidden")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<79>");
	if(FileType(t_srcpath)!=2){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<83>");
	Array<String > t_files=LoadDir(t_srcpath);
	DBG_LOCAL(t_files,"files")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<85>");
	int t_2=FileType(t_dstpath);
	DBG_LOCAL(t_2,"2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<86>");
	if(t_2==0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<87>");
		if(!((CreateDir(t_dstpath))!=0)){
			DBG_BLOCK();
			return 0;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<88>");
		if(t_2==1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<89>");
			return 0;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<92>");
	Array<String > t_=t_files;
	int t_3=0;
	while(t_3<t_.Length()){
		DBG_BLOCK();
		String t_f=t_.At(t_3);
		t_3=t_3+1;
		DBG_LOCAL(t_f,"f")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<93>");
		if(!t_hidden && t_f.StartsWith(String(L".",1))){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<95>");
		String t_srcp=t_srcpath+String(L"/",1)+t_f;
		DBG_LOCAL(t_srcp,"srcp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<96>");
		String t_dstp=t_dstpath+String(L"/",1)+t_f;
		DBG_LOCAL(t_dstp,"dstp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<98>");
		int t_32=FileType(t_srcp);
		DBG_LOCAL(t_32,"3")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<99>");
		if(t_32==1){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<100>");
			if(!((CopyFile(t_srcp,t_dstp))!=0)){
				DBG_BLOCK();
				return 0;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<101>");
			if(t_32==2){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<102>");
				if(t_recursive && !((bb_os_CopyDir(t_srcp,t_dstp,t_recursive,t_hidden))!=0)){
					DBG_BLOCK();
					return 0;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/os/os.monkey<106>");
	return 1;
}
int bbMain(){
	DBG_ENTER("Main")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<13>");
	c_TransCC* t_tcc=(new c_TransCC)->m_new();
	DBG_LOCAL(t_tcc,"tcc")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<14>");
	t_tcc->p_Run(AppArgs());
	return 0;
}
c_CTranslator::c_CTranslator(){
	m_funcMungs=(new c_StringMap8)->m_new();
	m_mungedFuncs=(new c_StringMap9)->m_new();
	m_mungedScopes=(new c_StringMap10)->m_new();
	m_indent=String();
	m_lines=(new c_StringStack)->m_new2();
	m_emitDebugInfo=false;
	m_unreachable=0;
	m_broken=0;
}
c_CTranslator* c_CTranslator::m_new(){
	DBG_ENTER("CTranslator.new")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<78>");
	c_Translator::m_new();
	return this;
}
int c_CTranslator::p_MungMethodDecl(c_FuncDecl* t_fdecl){
	DBG_ENTER("CTranslator.MungMethodDecl")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<121>");
	if((t_fdecl->m_munged).Length()!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<123>");
	if((t_fdecl->m_overrides)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<124>");
		p_MungMethodDecl(t_fdecl->m_overrides);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<125>");
		t_fdecl->m_munged=t_fdecl->m_overrides->m_munged;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<126>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<129>");
	c_FuncDeclList* t_funcs=m_funcMungs->p_Get(t_fdecl->m_ident);
	DBG_LOCAL(t_funcs,"funcs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<130>");
	if((t_funcs)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<131>");
		c_Enumerator3* t_=t_funcs->p_ObjectEnumerator();
		while(t_->p_HasNext()){
			DBG_BLOCK();
			c_FuncDecl* t_tdecl=t_->p_NextObject();
			DBG_LOCAL(t_tdecl,"tdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<132>");
			if(t_fdecl->p_EqualsArgs(t_tdecl)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<133>");
				t_fdecl->m_munged=t_tdecl->m_munged;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<134>");
				return 0;
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<138>");
		t_funcs=(new c_FuncDeclList)->m_new();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<139>");
		m_funcMungs->p_Set8(t_fdecl->m_ident,t_funcs);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<142>");
	String t_id=t_fdecl->m_ident;
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<143>");
	if(m_mungedFuncs->p_Contains(t_id)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<144>");
		int t_n=1;
		DBG_LOCAL(t_n,"n")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<145>");
		do{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<146>");
			t_n+=1;
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<147>");
			t_id=t_fdecl->m_ident+String(t_n);
		}while(!(!m_mungedFuncs->p_Contains(t_id)));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<151>");
	m_mungedFuncs->p_Set9(t_id,t_fdecl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<152>");
	t_fdecl->m_munged=String(L"p_",2)+t_id;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<153>");
	t_funcs->p_AddLast4(t_fdecl);
	return 0;
}
int c_CTranslator::p_MungDecl(c_Decl* t_decl){
	DBG_ENTER("CTranslator.MungDecl")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<158>");
	if((t_decl->m_munged).Length()!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<160>");
	c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
	DBG_LOCAL(t_fdecl,"fdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<161>");
	if(((t_fdecl)!=0) && t_fdecl->p_IsMethod()){
		DBG_BLOCK();
		int t_=p_MungMethodDecl(t_fdecl);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<163>");
	String t_id=t_decl->m_ident;
	String t_munged=String();
	String t_scope=String();
	DBG_LOCAL(t_id,"id")
	DBG_LOCAL(t_munged,"munged")
	DBG_LOCAL(t_scope,"scope")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<165>");
	if((dynamic_cast<c_LocalDecl*>(t_decl))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<166>");
		t_scope=String(L"$",1);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<167>");
		t_munged=String(L"t_",2)+t_id;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<168>");
		if((dynamic_cast<c_ClassDecl*>(t_decl))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<169>");
			t_scope=String();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<170>");
			t_munged=String(L"c_",2)+t_id;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<171>");
			if((dynamic_cast<c_ModuleDecl*>(t_decl))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<172>");
				t_scope=String();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<173>");
				t_munged=String(L"bb_",3)+t_id;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<174>");
				if((dynamic_cast<c_ClassDecl*>(t_decl->m_scope))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<175>");
					t_scope=t_decl->m_scope->m_munged;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<176>");
					t_munged=String(L"m_",2)+t_id;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<177>");
					if((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<178>");
						if(bb_config_ENV_LANG==String(L"cs",2) || bb_config_ENV_LANG==String(L"java",4)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<179>");
							t_scope=t_decl->m_scope->m_munged;
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<180>");
							t_munged=String(L"g_",2)+t_id;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<182>");
							t_scope=String();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<183>");
							t_munged=t_decl->m_scope->m_munged+String(L"_",1)+t_id;
						}
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<186>");
						bb_config_InternalErr(String(L"Internal error",14));
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<189>");
	c_StringSet* t_set=m_mungedScopes->p_Get(t_scope);
	DBG_LOCAL(t_set,"set")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<190>");
	if((t_set)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<191>");
		if(t_set->p_Contains(t_munged.ToLower())){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<192>");
			int t_id2=1;
			DBG_LOCAL(t_id2,"id")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<193>");
			do{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<194>");
				t_id2+=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<195>");
				String t_t=t_munged+String(t_id2);
				DBG_LOCAL(t_t,"t")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<196>");
				if(t_set->p_Contains(t_t.ToLower())){
					DBG_BLOCK();
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<197>");
				t_munged=t_t;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<198>");
				break;
			}while(!(false));
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<202>");
		if(t_scope==String(L"$",1)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<203>");
			bbPrint(String(L"OOPS2",5));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<204>");
			bb_config_InternalErr(String(L"Internal error",14));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<206>");
		t_set=(new c_StringSet)->m_new();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<207>");
		m_mungedScopes->p_Set10(t_scope,t_set);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<209>");
	t_set->p_Insert(t_munged.ToLower());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<210>");
	t_decl->m_munged=t_munged;
	return 0;
}
int c_CTranslator::p_Emit(String t_t){
	DBG_ENTER("CTranslator.Emit")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<454>");
	if(!((t_t).Length()!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<455>");
	if(t_t.StartsWith(String(L"}",1))){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<456>");
		m_indent=m_indent.Slice(0,m_indent.Length()-1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<458>");
	m_lines->p_Push(m_indent+t_t);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<459>");
	if(t_t.EndsWith(String(L"{",1))){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<460>");
		m_indent=m_indent+String(L"\t",1);
	}
	return 0;
}
String c_CTranslator::p_Bra(String t_str){
	DBG_ENTER("CTranslator.Bra")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_str,"str")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<214>");
	if(t_str.StartsWith(String(L"(",1)) && t_str.EndsWith(String(L")",1))){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<215>");
		int t_n=1;
		DBG_LOCAL(t_n,"n")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<216>");
		for(int t_i=1;t_i<t_str.Length()-1;t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<217>");
			String t_1=t_str.Slice(t_i,t_i+1);
			DBG_LOCAL(t_1,"1")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<218>");
			if(t_1==String(L"(",1)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<219>");
				t_n+=1;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<220>");
				if(t_1==String(L")",1)){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<221>");
					t_n-=1;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<222>");
					if(!((t_n)!=0)){
						DBG_BLOCK();
						String t_=String(L"(",1)+t_str+String(L")",1);
						return t_;
					}
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<225>");
		if(t_n==1){
			DBG_BLOCK();
			return t_str;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<227>");
	String t_2=String(L"(",1)+t_str+String(L")",1);
	return t_2;
}
int c_CTranslator::p_BeginLocalScope(){
	DBG_ENTER("CTranslator.BeginLocalScope")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<112>");
	m_mungedScopes->p_Set10(String(L"$",1),(new c_StringSet)->m_new());
	return 0;
}
int c_CTranslator::p_BeginLoop(){
	DBG_ENTER("CTranslator.BeginLoop")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
int c_CTranslator::p_EmitEnter(c_FuncDecl* t_func){
	DBG_ENTER("CTranslator.EmitEnter")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
int c_CTranslator::p_EmitEnterBlock(){
	DBG_ENTER("CTranslator.EmitEnterBlock")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
int c_CTranslator::p_EmitSetErr(String t_errInfo){
	DBG_ENTER("CTranslator.EmitSetErr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
String c_CTranslator::p_CreateLocal(c_Expr* t_expr){
	DBG_ENTER("CTranslator.CreateLocal")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<318>");
	c_LocalDecl* t_tmp=(new c_LocalDecl)->m_new(String(),0,t_expr->m_exprType,t_expr);
	DBG_LOCAL(t_tmp,"tmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<319>");
	p_MungDecl(t_tmp);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<320>");
	p_Emit(p_TransLocalDecl(t_tmp->m_munged,t_expr)+String(L";",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<321>");
	return t_tmp->m_munged;
}
String c_CTranslator::p_TransExprNS(c_Expr* t_expr){
	DBG_ENTER("CTranslator.TransExprNS")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<313>");
	if(!t_expr->p_SideEffects()){
		DBG_BLOCK();
		String t_=t_expr->p_Trans();
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<314>");
	String t_2=p_CreateLocal(t_expr);
	return t_2;
}
int c_CTranslator::p_EmitLeave(){
	DBG_ENTER("CTranslator.EmitLeave")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
int c_CTranslator::p_EmitLeaveBlock(){
	DBG_ENTER("CTranslator.EmitLeaveBlock")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
int c_CTranslator::p_EmitBlock(c_BlockDecl* t_block,bool t_realBlock){
	DBG_ENTER("CTranslator.EmitBlock")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_block,"block")
	DBG_LOCAL(t_realBlock,"realBlock")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<478>");
	bb_decl_PushEnv(t_block);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<480>");
	c_FuncDecl* t_func=dynamic_cast<c_FuncDecl*>(t_block);
	DBG_LOCAL(t_func,"func")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<482>");
	if((t_func)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<483>");
		m_emitDebugInfo=bb_config_ENV_CONFIG!=String(L"release",7);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<484>");
		if((t_func->m_attrs&4194304)!=0){
			DBG_BLOCK();
			m_emitDebugInfo=false;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<485>");
		if(m_emitDebugInfo){
			DBG_BLOCK();
			p_EmitEnter(t_func);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<487>");
		if(m_emitDebugInfo && t_realBlock){
			DBG_BLOCK();
			p_EmitEnterBlock();
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<490>");
	c_Stmt* t_lastStmt=0;
	DBG_LOCAL(t_lastStmt,"lastStmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<491>");
	c_Enumerator5* t_=t_block->m_stmts->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Stmt* t_stmt=t_->p_NextObject();
		DBG_LOCAL(t_stmt,"stmt")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<493>");
		bb_config__errInfo=t_stmt->m_errInfo;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<495>");
		if((m_unreachable)!=0){
			DBG_BLOCK();
			break;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<497>");
		t_lastStmt=t_stmt;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<499>");
		if(m_emitDebugInfo){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<500>");
			c_ReturnStmt* t_rs=dynamic_cast<c_ReturnStmt*>(t_stmt);
			DBG_LOCAL(t_rs,"rs")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<501>");
			if((t_rs)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<502>");
				if((t_rs->m_expr)!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<504>");
					if((t_stmt->m_errInfo).Length()!=0){
						DBG_BLOCK();
						p_EmitSetErr(t_stmt->m_errInfo);
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<506>");
					String t_t_expr=p_TransExprNS(t_rs->m_expr);
					DBG_LOCAL(t_t_expr,"t_expr")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<507>");
					p_EmitLeave();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<508>");
					p_Emit(String(L"return ",7)+t_t_expr+String(L";",1));
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<510>");
					p_EmitLeave();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<511>");
					p_Emit(String(L"return;",7));
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<513>");
				m_unreachable=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<514>");
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<516>");
			if((t_stmt->m_errInfo).Length()!=0){
				DBG_BLOCK();
				p_EmitSetErr(t_stmt->m_errInfo);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<519>");
		String t_t=t_stmt->p_Trans();
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<520>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			p_Emit(t_t+String(L";",1));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<524>");
	bb_config__errInfo=String();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<526>");
	int t_unr=m_unreachable;
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<527>");
	m_unreachable=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<529>");
	if((t_unr)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<532>");
		if(((t_func)!=0) && bb_config_ENV_LANG==String(L"as",2) && !((dynamic_cast<c_VoidType*>(t_func->m_retType))!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<533>");
			if(!((dynamic_cast<c_ReturnStmt*>(t_lastStmt))!=0)){
				DBG_BLOCK();
				p_Emit(String(L"return ",7)+p_TransValue(t_func->m_retType,String())+String(L";",1));
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<536>");
		if((t_func)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<538>");
			if(m_emitDebugInfo){
				DBG_BLOCK();
				p_EmitLeave();
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<540>");
			if(!((dynamic_cast<c_VoidType*>(t_func->m_retType))!=0)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<541>");
				if(t_func->p_IsCtor()){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<542>");
					p_Emit(String(L"return this;",12));
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<544>");
					if((t_func->p_ModuleScope()->p_IsStrict())!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<545>");
						bb_config__errInfo=t_func->m_errInfo;
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<546>");
						bb_config_Err(String(L"Missing return statement.",25));
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<548>");
					p_Emit(String(L"return ",7)+p_TransValue(t_func->m_retType,String())+String(L";",1));
				}
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<553>");
			if(m_emitDebugInfo && t_realBlock){
				DBG_BLOCK();
				p_EmitLeaveBlock();
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<557>");
	bb_decl_PopEnv();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<559>");
	return t_unr;
}
int c_CTranslator::p_EndLoop(){
	DBG_ENTER("CTranslator.EndLoop")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	return 0;
}
int c_CTranslator::p_EndLocalScope(){
	DBG_ENTER("CTranslator.EndLocalScope")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<116>");
	m_mungedScopes->p_Set10(String(L"$",1),0);
	return 0;
}
int c_CTranslator::p_ExprPri(c_Expr* t_expr){
	DBG_ENTER("CTranslator.ExprPri")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<281>");
	if((dynamic_cast<c_NewObjectExpr*>(t_expr))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<282>");
		return 3;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<283>");
		if((dynamic_cast<c_UnaryExpr*>(t_expr))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<284>");
			String t_5=dynamic_cast<c_UnaryExpr*>(t_expr)->m_op;
			DBG_LOCAL(t_5,"5")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<285>");
			if(t_5==String(L"+",1) || t_5==String(L"-",1) || t_5==String(L"~",1) || t_5==String(L"not",3)){
				DBG_BLOCK();
				return 3;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<287>");
			bb_config_InternalErr(String(L"Internal error",14));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<288>");
			if((dynamic_cast<c_BinaryExpr*>(t_expr))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<289>");
				String t_6=dynamic_cast<c_BinaryExpr*>(t_expr)->m_op;
				DBG_LOCAL(t_6,"6")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<290>");
				if(t_6==String(L"*",1) || t_6==String(L"/",1) || t_6==String(L"mod",3)){
					DBG_BLOCK();
					return 4;
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<291>");
					if(t_6==String(L"+",1) || t_6==String(L"-",1)){
						DBG_BLOCK();
						return 5;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<292>");
						if(t_6==String(L"shl",3) || t_6==String(L"shr",3)){
							DBG_BLOCK();
							return 6;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<293>");
							if(t_6==String(L"<",1) || t_6==String(L"<=",2) || t_6==String(L">",1) || t_6==String(L">=",2)){
								DBG_BLOCK();
								return 7;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<294>");
								if(t_6==String(L"=",1) || t_6==String(L"<>",2)){
									DBG_BLOCK();
									return 8;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<295>");
									if(t_6==String(L"&",1)){
										DBG_BLOCK();
										return 9;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<296>");
										if(t_6==String(L"~",1)){
											DBG_BLOCK();
											return 10;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<297>");
											if(t_6==String(L"|",1)){
												DBG_BLOCK();
												return 11;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<298>");
												if(t_6==String(L"and",3)){
													DBG_BLOCK();
													return 12;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<299>");
													if(t_6==String(L"or",2)){
														DBG_BLOCK();
														return 13;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<301>");
				bb_config_InternalErr(String(L"Internal error",14));
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<303>");
	return 2;
}
String c_CTranslator::p_TransSubExpr(c_Expr* t_expr,int t_pri){
	DBG_ENTER("CTranslator.TransSubExpr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<307>");
	String t_t_expr=t_expr->p_Trans();
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<308>");
	if(p_ExprPri(t_expr)>t_pri){
		DBG_BLOCK();
		t_t_expr=p_Bra(t_t_expr);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<309>");
	return t_t_expr;
}
String c_CTranslator::p_JoinLines(){
	DBG_ENTER("CTranslator.JoinLines")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<465>");
	String t_code=m_lines->p_Join(String(L"\n",1));
	DBG_LOCAL(t_code,"code")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<466>");
	m_lines->p_Clear();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<467>");
	return t_code;
}
String c_CTranslator::p_Enquote(String t_str){
	DBG_ENTER("CTranslator.Enquote")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_str,"str")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<232>");
	String t_=bb_config_Enquote(t_str,bb_config_ENV_LANG);
	return t_;
}
String c_CTranslator::p_TransStmtExpr(c_StmtExpr* t_expr){
	DBG_ENTER("CTranslator.TransStmtExpr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<343>");
	String t_t=t_expr->m_stmt->p_Trans();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<344>");
	if((t_t).Length()!=0){
		DBG_BLOCK();
		p_Emit(t_t+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<345>");
	String t_=t_expr->m_expr->p_Trans();
	return t_;
}
String c_CTranslator::p_TransVarExpr(c_VarExpr* t_expr){
	DBG_ENTER("CTranslator.TransVarExpr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<349>");
	c_VarDecl* t_decl=t_expr->m_decl;
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<351>");
	if(t_decl->m_munged.StartsWith(String(L"$",1))){
		DBG_BLOCK();
		String t_=p_TransIntrinsicExpr((t_decl),0,Array<c_Expr* >());
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<353>");
	if((dynamic_cast<c_LocalDecl*>(t_decl))!=0){
		DBG_BLOCK();
		return t_decl->m_munged;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<355>");
	if((dynamic_cast<c_FieldDecl*>(t_decl))!=0){
		DBG_BLOCK();
		String t_2=p_TransField(dynamic_cast<c_FieldDecl*>(t_decl),0);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<357>");
	if((dynamic_cast<c_GlobalDecl*>(t_decl))!=0){
		DBG_BLOCK();
		String t_3=p_TransGlobal(dynamic_cast<c_GlobalDecl*>(t_decl));
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<359>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CTranslator::p_TransMemberVarExpr(c_MemberVarExpr* t_expr){
	DBG_ENTER("CTranslator.TransMemberVarExpr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<363>");
	c_VarDecl* t_decl=t_expr->m_decl;
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<365>");
	if(t_decl->m_munged.StartsWith(String(L"$",1))){
		DBG_BLOCK();
		String t_=p_TransIntrinsicExpr((t_decl),t_expr->m_expr,Array<c_Expr* >());
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<367>");
	if((dynamic_cast<c_FieldDecl*>(t_decl))!=0){
		DBG_BLOCK();
		String t_2=p_TransField(dynamic_cast<c_FieldDecl*>(t_decl),t_expr->m_expr);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<369>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CTranslator::p_TransInvokeExpr(c_InvokeExpr* t_expr){
	DBG_ENTER("CTranslator.TransInvokeExpr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<373>");
	c_FuncDecl* t_decl=t_expr->m_decl;
	String t_t=String();
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<375>");
	if(t_decl->m_munged.StartsWith(String(L"$",1))){
		DBG_BLOCK();
		String t_=p_TransIntrinsicExpr((t_decl),0,t_expr->m_args);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<377>");
	if((t_decl)!=0){
		DBG_BLOCK();
		String t_2=p_TransFunc(t_decl,t_expr->m_args,0);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<379>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CTranslator::p_TransInvokeMemberExpr(c_InvokeMemberExpr* t_expr){
	DBG_ENTER("CTranslator.TransInvokeMemberExpr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<383>");
	c_FuncDecl* t_decl=t_expr->m_decl;
	String t_t=String();
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<385>");
	if(t_decl->m_munged.StartsWith(String(L"$",1))){
		DBG_BLOCK();
		String t_=p_TransIntrinsicExpr((t_decl),t_expr->m_expr,t_expr->m_args);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<387>");
	if((t_decl)!=0){
		DBG_BLOCK();
		String t_2=p_TransFunc(t_decl,t_expr->m_args,t_expr->m_expr);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<389>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CTranslator::p_TransInvokeSuperExpr(c_InvokeSuperExpr* t_expr){
	DBG_ENTER("CTranslator.TransInvokeSuperExpr")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<393>");
	c_FuncDecl* t_decl=t_expr->m_funcDecl;
	String t_t=String();
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<395>");
	if(t_decl->m_munged.StartsWith(String(L"$",1))){
		DBG_BLOCK();
		String t_=p_TransIntrinsicExpr((t_decl),(t_expr),Array<c_Expr* >());
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<397>");
	if((t_decl)!=0){
		DBG_BLOCK();
		String t_2=p_TransSuperFunc(t_decl,t_expr->m_args);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<399>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CTranslator::p_TransExprStmt(c_ExprStmt* t_stmt){
	DBG_ENTER("CTranslator.TransExprStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<403>");
	String t_=t_stmt->m_expr->p_TransStmt();
	return t_;
}
String c_CTranslator::p_TransAssignOp(String t_op){
	DBG_ENTER("CTranslator.TransAssignOp")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<266>");
	String t_4=t_op;
	DBG_LOCAL(t_4,"4")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<267>");
	if(t_4==String(L"~=",2)){
		DBG_BLOCK();
		return String(L"^=",2);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<268>");
		if(t_4==String(L"mod=",4)){
			DBG_BLOCK();
			return String(L"%=",2);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<269>");
			if(t_4==String(L"shl=",4)){
				DBG_BLOCK();
				return String(L"<<=",3);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<270>");
				if(t_4==String(L"shr=",4)){
					DBG_BLOCK();
					return String(L">>=",3);
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<272>");
	return t_op;
}
String c_CTranslator::p_TransAssignStmt2(c_AssignStmt* t_stmt){
	DBG_ENTER("CTranslator.TransAssignStmt2")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<424>");
	String t_=t_stmt->m_lhs->p_TransVar()+p_TransAssignOp(t_stmt->m_op)+t_stmt->m_rhs->p_Trans();
	return t_;
}
String c_CTranslator::p_TransAssignStmt(c_AssignStmt* t_stmt){
	DBG_ENTER("CTranslator.TransAssignStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<407>");
	if(!((t_stmt->m_rhs)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<408>");
		String t_=t_stmt->m_lhs->p_Trans();
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<411>");
	if((t_stmt->m_tmp1)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<412>");
		p_MungDecl(t_stmt->m_tmp1);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<413>");
		p_Emit(p_TransLocalDecl(t_stmt->m_tmp1->m_munged,t_stmt->m_tmp1->m_init)+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<415>");
	if((t_stmt->m_tmp2)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<416>");
		p_MungDecl(t_stmt->m_tmp2);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<417>");
		p_Emit(p_TransLocalDecl(t_stmt->m_tmp2->m_munged,t_stmt->m_tmp2->m_init)+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<420>");
	String t_2=p_TransAssignStmt2(t_stmt);
	return t_2;
}
String c_CTranslator::p_TransReturnStmt(c_ReturnStmt* t_stmt){
	DBG_ENTER("CTranslator.TransReturnStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<428>");
	String t_t=String(L"return",6);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<429>");
	if((t_stmt->m_expr)!=0){
		DBG_BLOCK();
		t_t=t_t+(String(L" ",1)+t_stmt->m_expr->p_Trans());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<430>");
	m_unreachable=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<431>");
	return t_t;
}
String c_CTranslator::p_TransContinueStmt(c_ContinueStmt* t_stmt){
	DBG_ENTER("CTranslator.TransContinueStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<435>");
	m_unreachable=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<436>");
	return String(L"continue",8);
}
String c_CTranslator::p_TransBreakStmt(c_BreakStmt* t_stmt){
	DBG_ENTER("CTranslator.TransBreakStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<440>");
	m_unreachable=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<441>");
	m_broken+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<442>");
	return String(L"break",5);
}
String c_CTranslator::p_TransBlock(c_BlockDecl* t_block){
	DBG_ENTER("CTranslator.TransBlock")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_block,"block")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<471>");
	p_EmitBlock(t_block,false);
	return String();
}
String c_CTranslator::p_TransDeclStmt(c_DeclStmt* t_stmt){
	DBG_ENTER("CTranslator.TransDeclStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<563>");
	c_LocalDecl* t_decl=dynamic_cast<c_LocalDecl*>(t_stmt->m_decl);
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<564>");
	if((t_decl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<565>");
		p_MungDecl(t_decl);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<566>");
		String t_=p_TransLocalDecl(t_decl->m_munged,t_decl->m_init);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<568>");
	c_ConstDecl* t_cdecl=dynamic_cast<c_ConstDecl*>(t_stmt->m_decl);
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<569>");
	if((t_cdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<570>");
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<572>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CTranslator::p_TransIfStmt(c_IfStmt* t_stmt){
	DBG_ENTER("CTranslator.TransIfStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<576>");
	if(((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr))!=0) && bb_config_ENV_LANG!=String(L"java",4)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<577>");
		if((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr)->m_value).Length()!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<578>");
			if(!t_stmt->m_thenBlock->m_stmts->p_IsEmpty()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<579>");
				p_Emit(String(L"if(true){",9));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<580>");
				if((p_EmitBlock(t_stmt->m_thenBlock,true))!=0){
					DBG_BLOCK();
					m_unreachable=1;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<581>");
				p_Emit(String(L"}",1));
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<584>");
			if(!t_stmt->m_elseBlock->m_stmts->p_IsEmpty()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<585>");
				p_Emit(String(L"if(true){",9));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<586>");
				if((p_EmitBlock(t_stmt->m_elseBlock,true))!=0){
					DBG_BLOCK();
					m_unreachable=1;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<587>");
				p_Emit(String(L"}",1));
			}
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<590>");
		if(!t_stmt->m_elseBlock->m_stmts->p_IsEmpty()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<591>");
			p_Emit(String(L"if",2)+p_Bra(t_stmt->m_expr->p_Trans())+String(L"{",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<592>");
			int t_unr=p_EmitBlock(t_stmt->m_thenBlock,true);
			DBG_LOCAL(t_unr,"unr")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<593>");
			p_Emit(String(L"}else{",6));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<594>");
			int t_unr2=p_EmitBlock(t_stmt->m_elseBlock,true);
			DBG_LOCAL(t_unr2,"unr2")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<595>");
			p_Emit(String(L"}",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<596>");
			if(((t_unr)!=0) && ((t_unr2)!=0)){
				DBG_BLOCK();
				m_unreachable=1;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<598>");
			p_Emit(String(L"if",2)+p_Bra(t_stmt->m_expr->p_Trans())+String(L"{",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<599>");
			int t_unr3=p_EmitBlock(t_stmt->m_thenBlock,true);
			DBG_LOCAL(t_unr3,"unr")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<600>");
			p_Emit(String(L"}",1));
		}
	}
	return String();
}
String c_CTranslator::p_TransWhileStmt(c_WhileStmt* t_stmt){
	DBG_ENTER("CTranslator.TransWhileStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<605>");
	int t_nbroken=m_broken;
	DBG_LOCAL(t_nbroken,"nbroken")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<607>");
	p_Emit(String(L"while",5)+p_Bra(t_stmt->m_expr->p_Trans())+String(L"{",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<608>");
	p_BeginLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<609>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<610>");
	p_EndLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<611>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<613>");
	if(m_broken==t_nbroken && ((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr))!=0) && ((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr)->m_value).Length()!=0)){
		DBG_BLOCK();
		m_unreachable=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<614>");
	m_broken=t_nbroken;
	return String();
}
String c_CTranslator::p_TransRepeatStmt(c_RepeatStmt* t_stmt){
	DBG_ENTER("CTranslator.TransRepeatStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<618>");
	int t_nbroken=m_broken;
	DBG_LOCAL(t_nbroken,"nbroken")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<620>");
	p_Emit(String(L"do{",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<621>");
	p_BeginLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<622>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<623>");
	p_EndLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<624>");
	p_Emit(String(L"}while(!",8)+p_Bra(t_stmt->m_expr->p_Trans())+String(L");",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<626>");
	if(m_broken==t_nbroken && ((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr))!=0) && !((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr)->m_value).Length()!=0)){
		DBG_BLOCK();
		m_unreachable=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<627>");
	m_broken=t_nbroken;
	return String();
}
String c_CTranslator::p_TransForStmt(c_ForStmt* t_stmt){
	DBG_ENTER("CTranslator.TransForStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<631>");
	int t_nbroken=m_broken;
	DBG_LOCAL(t_nbroken,"nbroken")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<633>");
	String t_init=t_stmt->m_init->p_Trans();
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<634>");
	String t_expr=t_stmt->m_expr->p_Trans();
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<635>");
	String t_incr=t_stmt->m_incr->p_Trans();
	DBG_LOCAL(t_incr,"incr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<637>");
	p_Emit(String(L"for(",4)+t_init+String(L";",1)+t_expr+String(L";",1)+t_incr+String(L"){",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<638>");
	p_BeginLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<639>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<640>");
	p_EndLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<641>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<643>");
	if(m_broken==t_nbroken && ((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr))!=0) && ((dynamic_cast<c_ConstExpr*>(t_stmt->m_expr)->m_value).Length()!=0)){
		DBG_BLOCK();
		m_unreachable=1;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<644>");
	m_broken=t_nbroken;
	return String();
}
String c_CTranslator::p_TransTryStmt(c_TryStmt* t_stmt){
	DBG_ENTER("CTranslator.TransTryStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<648>");
	bb_config_Err(String(L"TODO!",5));
	return String();
}
String c_CTranslator::p_TransThrowStmt(c_ThrowStmt* t_stmt){
	DBG_ENTER("CTranslator.TransThrowStmt")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<652>");
	m_unreachable=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<653>");
	String t_=String(L"throw ",6)+t_stmt->m_expr->p_Trans();
	return t_;
}
String c_CTranslator::p_TransUnaryOp(String t_op){
	DBG_ENTER("CTranslator.TransUnaryOp")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<236>");
	String t_2=t_op;
	DBG_LOCAL(t_2,"2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<237>");
	if(t_2==String(L"+",1)){
		DBG_BLOCK();
		return String(L"+",1);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<238>");
		if(t_2==String(L"-",1)){
			DBG_BLOCK();
			return String(L"-",1);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<239>");
			if(t_2==String(L"~",1)){
				DBG_BLOCK();
				return t_op;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<240>");
				if(t_2==String(L"not",3)){
					DBG_BLOCK();
					return String(L"!",1);
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<242>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CTranslator::p_TransBinaryOp(String t_op,String t_rhs){
	DBG_ENTER("CTranslator.TransBinaryOp")
	c_CTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<246>");
	String t_3=t_op;
	DBG_LOCAL(t_3,"3")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<247>");
	if(t_3==String(L"+",1) || t_3==String(L"-",1)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<248>");
		if(t_rhs.StartsWith(t_op)){
			DBG_BLOCK();
			String t_=t_op+String(L" ",1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<249>");
		return t_op;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<250>");
		if(t_3==String(L"*",1) || t_3==String(L"/",1)){
			DBG_BLOCK();
			return t_op;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<251>");
			if(t_3==String(L"shl",3)){
				DBG_BLOCK();
				return String(L"<<",2);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<252>");
				if(t_3==String(L"shr",3)){
					DBG_BLOCK();
					return String(L">>",2);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<253>");
					if(t_3==String(L"mod",3)){
						DBG_BLOCK();
						return String(L" % ",3);
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<254>");
						if(t_3==String(L"and",3)){
							DBG_BLOCK();
							return String(L" && ",4);
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<255>");
							if(t_3==String(L"or",2)){
								DBG_BLOCK();
								return String(L" || ",4);
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<256>");
								if(t_3==String(L"=",1)){
									DBG_BLOCK();
									return String(L"==",2);
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<257>");
									if(t_3==String(L"<>",2)){
										DBG_BLOCK();
										return String(L"!=",2);
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<258>");
										if(t_3==String(L"<",1) || t_3==String(L"<=",2) || t_3==String(L">",1) || t_3==String(L">=",2)){
											DBG_BLOCK();
											return t_op;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<259>");
											if(t_3==String(L"&",1) || t_3==String(L"|",1)){
												DBG_BLOCK();
												return t_op;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<260>");
												if(t_3==String(L"~",1)){
													DBG_BLOCK();
													return String(L"^",1);
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/translator.monkey<262>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
void c_CTranslator::mark(){
	c_Translator::mark();
	gc_mark_q(m_funcMungs);
	gc_mark_q(m_mungedFuncs);
	gc_mark_q(m_mungedScopes);
	gc_mark_q(m_lines);
}
String c_CTranslator::debug(){
	String t="(CTranslator)\n";
	t=c_Translator::debug()+t;
	t+=dbg_decl("emitDebugInfo",&m_emitDebugInfo);
	t+=dbg_decl("indent",&m_indent);
	t+=dbg_decl("lines",&m_lines);
	t+=dbg_decl("unreachable",&m_unreachable);
	t+=dbg_decl("broken",&m_broken);
	t+=dbg_decl("mungedScopes",&m_mungedScopes);
	t+=dbg_decl("funcMungs",&m_funcMungs);
	t+=dbg_decl("mungedFuncs",&m_mungedFuncs);
	return t;
}
c_CppTranslator::c_CppTranslator(){
	m_gc_mode=0;
	m_unsafe=false;
	m_dbgLocals=(new c_Stack10)->m_new();
	m_lastDbgInfo=String();
	m_pure=0;
}
c_CppTranslator* c_CppTranslator::m_new(){
	DBG_ENTER("CppTranslator.new")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<11>");
	c_CTranslator::m_new();
	return this;
}
String c_CppTranslator::p_TransType(c_Type* t_ty){
	DBG_ENTER("CppTranslator.TransType")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<20>");
	if((dynamic_cast<c_VoidType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"void",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<21>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"bool",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<22>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"int",3);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<23>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Float",5);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<24>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"String",6);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<25>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=String(L"Array<",6)+p_TransRefType(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType)+String(L" >",2);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<26>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=t_ty->p_GetClass()->m_munged+String(L"*",1);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<27>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CppTranslator::p_TransRefType(c_Type* t_ty){
	DBG_ENTER("CppTranslator.TransRefType")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<31>");
	String t_=p_TransType(t_ty);
	return t_;
}
int c_CppTranslator::p_EmitFuncProto(c_FuncDecl* t_decl){
	DBG_ENTER("CppTranslator.EmitFuncProto")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<464>");
	String t_args=String();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<465>");
	Array<c_ArgDecl* > t_=t_decl->m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<466>");
		if((t_args).Length()!=0){
			DBG_BLOCK();
			t_args=t_args+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<467>");
		t_args=t_args+p_TransType(t_arg->m_type);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<470>");
	String t_t=p_TransType(t_decl->m_retType)+String(L" ",1)+t_decl->m_munged+p_Bra(t_args);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<471>");
	if((t_decl->p_IsAbstract())!=0){
		DBG_BLOCK();
		t_t=t_t+String(L"=0",2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<473>");
	String t_q=String();
	DBG_LOCAL(t_q,"q")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<475>");
	if(t_decl->p_IsMethod() && t_decl->p_IsVirtual() && !((t_decl->m_overrides)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<476>");
		t_q=t_q+String(L"virtual ",8);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<477>");
		if(t_decl->p_IsStatic() && ((t_decl->p_ClassScope())!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<478>");
			t_q=t_q+String(L"static ",7);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<481>");
	p_Emit(t_q+t_t+String(L";",1));
	return 0;
}
int c_CppTranslator::p_EmitClassProto(c_ClassDecl* t_classDecl){
	DBG_ENTER("CppTranslator.EmitClassProto")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<519>");
	String t_classid=t_classDecl->m_munged;
	DBG_LOCAL(t_classid,"classid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<520>");
	String t_superid=t_classDecl->m_superClass->m_munged;
	DBG_LOCAL(t_superid,"superid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<522>");
	if((t_classDecl->p_IsInterface())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<523>");
		String t_bases=String();
		DBG_LOCAL(t_bases,"bases")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<524>");
		Array<c_ClassDecl* > t_=t_classDecl->m_implments;
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			c_ClassDecl* t_iface=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_iface,"iface")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<525>");
			if((t_bases).Length()!=0){
				DBG_BLOCK();
				t_bases=t_bases+String(L",",1);
			}else{
				DBG_BLOCK();
				t_bases=String(L" : ",3);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<526>");
			t_bases=t_bases+(String(L"public virtual ",15)+t_iface->m_munged);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<528>");
		if(!((t_bases).Length()!=0)){
			DBG_BLOCK();
			t_bases=String(L" : public virtual gc_interface",30);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<529>");
		p_Emit(String(L"class ",6)+t_classid+t_bases+String(L"{",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<530>");
		p_Emit(String(L"public:",7));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<531>");
		c_Stack9* t_emitted=(new c_Stack9)->m_new();
		DBG_LOCAL(t_emitted,"emitted")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<532>");
		c_Enumerator2* t_3=t_classDecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl=t_3->p_NextObject();
			DBG_LOCAL(t_decl,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<533>");
			c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
			DBG_LOCAL(t_fdecl,"fdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<534>");
			if(!((t_fdecl)!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<535>");
			p_EmitFuncProto(t_fdecl);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<536>");
			t_emitted->p_Push25(t_fdecl);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<538>");
		Array<c_ClassDecl* > t_4=t_classDecl->m_implmentsAll;
		int t_5=0;
		while(t_5<t_4.Length()){
			DBG_BLOCK();
			c_ClassDecl* t_iface2=t_4.At(t_5);
			t_5=t_5+1;
			DBG_LOCAL(t_iface2,"iface")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<539>");
			c_Enumerator2* t_6=t_iface2->p_Semanted()->p_ObjectEnumerator();
			while(t_6->p_HasNext()){
				DBG_BLOCK();
				c_Decl* t_decl2=t_6->p_NextObject();
				DBG_LOCAL(t_decl2,"decl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<540>");
				c_FuncDecl* t_fdecl2=dynamic_cast<c_FuncDecl*>(t_decl2);
				DBG_LOCAL(t_fdecl2,"fdecl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<541>");
				if(!((t_fdecl2)!=0)){
					DBG_BLOCK();
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<542>");
				int t_found=0;
				DBG_LOCAL(t_found,"found")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<543>");
				c_Enumerator6* t_7=t_emitted->p_ObjectEnumerator();
				while(t_7->p_HasNext()){
					DBG_BLOCK();
					c_FuncDecl* t_fdecl22=t_7->p_NextObject();
					DBG_LOCAL(t_fdecl22,"fdecl2")
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<544>");
					if(t_fdecl2->m_ident!=t_fdecl22->m_ident){
						DBG_BLOCK();
						continue;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<545>");
					if(!t_fdecl2->p_EqualsFunc(t_fdecl22)){
						DBG_BLOCK();
						continue;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<546>");
					t_found=1;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<547>");
					break;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<549>");
				if((t_found)!=0){
					DBG_BLOCK();
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<550>");
				p_EmitFuncProto(t_fdecl2);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<551>");
				t_emitted->p_Push25(t_fdecl2);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<554>");
		p_Emit(String(L"};",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<555>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<558>");
	String t_bases2=String(L" : public ",10)+t_superid;
	DBG_LOCAL(t_bases2,"bases")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<559>");
	Array<c_ClassDecl* > t_8=t_classDecl->m_implments;
	int t_9=0;
	while(t_9<t_8.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_iface3=t_8.At(t_9);
		t_9=t_9+1;
		DBG_LOCAL(t_iface3,"iface")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<560>");
		t_bases2=t_bases2+(String(L",public virtual ",16)+t_iface3->m_munged);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<563>");
	p_Emit(String(L"class ",6)+t_classid+t_bases2+String(L"{",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<564>");
	p_Emit(String(L"public:",7));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<567>");
	c_Enumerator2* t_10=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_10->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl3=t_10->p_NextObject();
		DBG_LOCAL(t_decl3,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<568>");
		c_FieldDecl* t_fdecl3=dynamic_cast<c_FieldDecl*>(t_decl3);
		DBG_LOCAL(t_fdecl3,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<569>");
		if((t_fdecl3)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<570>");
			p_Emit(p_TransRefType(t_fdecl3->m_type)+String(L" ",1)+t_fdecl3->m_munged+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<571>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<576>");
	p_Emit(t_classid+String(L"();",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<579>");
	c_Enumerator2* t_11=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_11->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl4=t_11->p_NextObject();
		DBG_LOCAL(t_decl4,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<581>");
		c_FuncDecl* t_fdecl4=dynamic_cast<c_FuncDecl*>(t_decl4);
		DBG_LOCAL(t_fdecl4,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<582>");
		if((t_fdecl4)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<583>");
			p_EmitFuncProto(t_fdecl4);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<584>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<587>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl4);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<588>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<589>");
			p_Emit(String(L"static ",7)+p_TransRefType(t_gdecl->m_type)+String(L" ",1)+t_gdecl->m_munged+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<590>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<595>");
	p_Emit(String(L"void mark();",12));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<597>");
	if(bb_config_ENV_CONFIG==String(L"debug",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<598>");
		p_Emit(String(L"String debug();",15));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<601>");
	p_Emit(String(L"};",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<603>");
	if(bb_config_ENV_CONFIG==String(L"debug",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<604>");
		p_Emit(String(L"String dbg_type(",16)+t_classid+String(L"**p){return \"",13)+t_classDecl->m_ident+String(L"\";}",3));
	}
	return 0;
}
int c_CppTranslator::p_BeginLocalScope(){
	DBG_ENTER("CppTranslator.BeginLocalScope")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<121>");
	c_CTranslator::p_BeginLocalScope();
	return 0;
}
int c_CppTranslator::p_BeginLoop(){
	DBG_ENTER("CppTranslator.BeginLoop")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<413>");
	if(m_gc_mode!=2){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<414>");
	p_Emit(String(L"GC_ENTER",8));
	return 0;
}
int c_CppTranslator::p_EndLoop(){
	DBG_ENTER("CppTranslator.EndLoop")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<418>");
	if(m_gc_mode!=2){
		DBG_BLOCK();
		return 0;
	}
	return 0;
}
int c_CppTranslator::p_EndLocalScope(){
	DBG_ENTER("CppTranslator.EndLocalScope")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<125>");
	c_CTranslator::p_EndLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<126>");
	m_dbgLocals->p_Clear();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<127>");
	m_lastDbgInfo=String();
	return 0;
}
int c_CppTranslator::p_EmitFuncDecl(c_FuncDecl* t_decl){
	DBG_ENTER("CppTranslator.EmitFuncDecl")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<485>");
	if((t_decl->p_IsAbstract())!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<487>");
	m_unsafe=t_decl->m_ident.EndsWith(String(L"__UNSAFE__",10));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<489>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<491>");
	String t_args=String();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<492>");
	Array<c_ArgDecl* > t_=t_decl->m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<493>");
		p_MungDecl(t_arg);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<494>");
		if((t_args).Length()!=0){
			DBG_BLOCK();
			t_args=t_args+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<495>");
		t_args=t_args+(p_TransType(t_arg->m_type)+String(L" ",1)+t_arg->m_munged);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<496>");
		m_dbgLocals->p_Push28(t_arg);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<499>");
	String t_id=t_decl->m_munged;
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<500>");
	if((t_decl->p_ClassScope())!=0){
		DBG_BLOCK();
		t_id=t_decl->p_ClassScope()->m_munged+String(L"::",2)+t_id;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<502>");
	p_Emit(p_TransType(t_decl->m_retType)+String(L" ",1)+t_id+p_Bra(t_args)+String(L"{",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<504>");
	p_BeginLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<506>");
	p_EmitBlock((t_decl),true);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<508>");
	p_EndLoop();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<510>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<512>");
	p_EndLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<514>");
	m_unsafe=false;
	return 0;
}
String c_CppTranslator::p_TransField(c_FieldDecl* t_decl,c_Expr* t_lhs){
	DBG_ENTER("CppTranslator.TransField")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<195>");
	if((t_lhs)!=0){
		DBG_BLOCK();
		String t_=p_TransSubExpr(t_lhs,2)+String(L"->",2)+t_decl->m_munged;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<196>");
	return t_decl->m_munged;
}
int c_CppTranslator::p_EmitMark(String t_id,c_Type* t_ty,bool t_queue){
	DBG_ENTER("CppTranslator.EmitMark")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_id,"id")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_queue,"queue")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<610>");
	if(m_gc_mode==0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<612>");
	if(!((dynamic_cast<c_ObjectType*>(t_ty))!=0) && !((dynamic_cast<c_ArrayType*>(t_ty))!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<613>");
	if(((dynamic_cast<c_ObjectType*>(t_ty))!=0) && !((t_ty->p_GetClass()->p_ExtendsObject())!=0)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<615>");
	if(t_queue){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<616>");
		p_Emit(String(L"gc_mark_q(",10)+t_id+String(L");",2));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<618>");
		p_Emit(String(L"gc_mark(",8)+t_id+String(L");",2));
	}
	return 0;
}
bool c_CppTranslator::p_IsDebuggable(c_Type* t_type){
	DBG_ENTER("CppTranslator.IsDebuggable")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_type,"type")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<88>");
	return true;
}
int c_CppTranslator::p_EmitClassDecl(c_ClassDecl* t_classDecl){
	DBG_ENTER("CppTranslator.EmitClassDecl")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<625>");
	if((t_classDecl->p_IsInterface())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<626>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<629>");
	String t_classid=t_classDecl->m_munged;
	DBG_LOCAL(t_classid,"classid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<630>");
	String t_superid=t_classDecl->m_superClass->m_munged;
	DBG_LOCAL(t_superid,"superid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<633>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<634>");
	p_Emit(t_classid+String(L"::",2)+t_classid+String(L"(){",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<635>");
	if(m_gc_mode==2){
		DBG_BLOCK();
		p_Emit(String(L"GC_CTOR",7));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<636>");
	c_Enumerator2* t_=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<637>");
		c_FieldDecl* t_fdecl=dynamic_cast<c_FieldDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<638>");
		if(!((t_fdecl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<639>");
		p_Emit(p_TransField(t_fdecl,0)+String(L"=",1)+t_fdecl->m_init->p_Trans()+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<641>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<642>");
	p_EndLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<645>");
	c_Enumerator2* t_2=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_2->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<647>");
		c_FuncDecl* t_fdecl2=dynamic_cast<c_FuncDecl*>(t_decl2);
		DBG_LOCAL(t_fdecl2,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<648>");
		if((t_fdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<649>");
			p_EmitFuncDecl(t_fdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<650>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<653>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl2);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<654>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<655>");
			p_Emit(p_TransRefType(t_gdecl->m_type)+String(L" ",1)+t_classid+String(L"::",2)+t_gdecl->m_munged+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<656>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<661>");
	p_Emit(String(L"void ",5)+t_classid+String(L"::mark(){",9));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<662>");
	if((t_classDecl->m_superClass)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<663>");
		p_Emit(t_classDecl->m_superClass->m_munged+String(L"::mark();",9));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<665>");
	c_Enumerator2* t_3=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_3->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl3=t_3->p_NextObject();
		DBG_LOCAL(t_decl3,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<666>");
		c_FieldDecl* t_fdecl3=dynamic_cast<c_FieldDecl*>(t_decl3);
		DBG_LOCAL(t_fdecl3,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<667>");
		if((t_fdecl3)!=0){
			DBG_BLOCK();
			p_EmitMark(p_TransField(t_fdecl3,0),t_fdecl3->m_type,true);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<669>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<672>");
	if(bb_config_ENV_CONFIG==String(L"debug",5)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<673>");
		p_Emit(String(L"String ",7)+t_classid+String(L"::debug(){",10));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<674>");
		p_Emit(String(L"String t=\"(",11)+t_classDecl->m_ident+String(L")\\n\";",5));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<675>");
		if(((t_classDecl->m_superClass)!=0) && !((t_classDecl->m_superClass->p_IsExtern())!=0)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<676>");
			p_Emit(String(L"t=",2)+t_classDecl->m_superClass->m_munged+String(L"::debug()+t;",12));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<678>");
		c_Enumerator2* t_4=t_classDecl->p_Decls()->p_ObjectEnumerator();
		while(t_4->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl4=t_4->p_NextObject();
			DBG_LOCAL(t_decl4,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<679>");
			if(!((t_decl4->p_IsSemanted())!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<682>");
			c_VarDecl* t_vdecl=dynamic_cast<c_VarDecl*>(t_decl4);
			DBG_LOCAL(t_vdecl,"vdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<683>");
			if(!((t_vdecl)!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<685>");
			if(!p_IsDebuggable(t_vdecl->m_type)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<692>");
			if((dynamic_cast<c_FieldDecl*>(t_decl4))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<693>");
				p_Emit(String(L"t+=dbg_decl(\"",13)+t_decl4->m_ident+String(L"\",&",3)+t_decl4->m_munged+String(L");",2));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<694>");
				if((dynamic_cast<c_GlobalDecl*>(t_decl4))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<695>");
					p_Emit(String(L"t+=dbg_decl(\"",13)+t_decl4->m_ident+String(L"\",&",3)+t_classDecl->m_munged+String(L"::",2)+t_decl4->m_munged+String(L");",2));
				}
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<698>");
		p_Emit(String(L"return t;",9));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<699>");
		p_Emit(String(L"}",1));
	}
	return 0;
}
String c_CppTranslator::p_TransStatic(c_Decl* t_decl){
	DBG_ENTER("CppTranslator.TransStatic")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<178>");
	if(((t_decl->p_IsExtern())!=0) && ((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<179>");
		return t_decl->m_munged;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<180>");
		if(((bb_decl__env)!=0) && ((t_decl->m_scope)!=0) && t_decl->m_scope==(bb_decl__env->p_ClassScope())){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<181>");
			return t_decl->m_munged;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<182>");
			if((dynamic_cast<c_ClassDecl*>(t_decl->m_scope))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<183>");
				String t_=t_decl->m_scope->m_munged+String(L"::",2)+t_decl->m_munged;
				return t_;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<184>");
				if((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<185>");
					return t_decl->m_munged;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<187>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CppTranslator::p_TransGlobal(c_GlobalDecl* t_decl){
	DBG_ENTER("CppTranslator.TransGlobal")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<191>");
	String t_=p_TransStatic(t_decl);
	return t_;
}
String c_CppTranslator::p_TransApp(c_AppDecl* t_app){
	DBG_ENTER("CppTranslator.TransApp")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<705>");
	if(!((bb_config_GetConfigVar(String(L"CPP_GC_MODE",11))).Length()!=0)){
		DBG_BLOCK();
		bb_config_SetConfigVar(String(L"CPP_GC_MODE",11),String(L"1",1),(c_Type::m_boolType));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<707>");
	m_gc_mode=(bb_config_GetConfigVar(String(L"CPP_GC_MODE",11))).ToInt();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<709>");
	t_app->m_mainFunc->m_munged=String(L"bbMain",6);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<711>");
	c_ValueEnumerator* t_=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<712>");
		p_MungDecl(t_decl);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<715>");
	c_Enumerator2* t_2=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_2->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<716>");
		p_MungDecl(t_decl2);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<718>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl2);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<719>");
		if(!((t_cdecl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<721>");
		p_Emit(String(L"class ",6)+t_decl2->m_munged+String(L";",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<723>");
		c_Enumerator2* t_3=t_cdecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl3=t_3->p_NextObject();
			DBG_LOCAL(t_decl3,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<724>");
			p_MungDecl(t_decl3);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<730>");
	c_Enumerator2* t_4=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_4->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl4=t_4->p_NextObject();
		DBG_LOCAL(t_decl4,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<732>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl4);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<733>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<734>");
			p_Emit(String(L"extern ",7)+p_TransRefType(t_gdecl->m_type)+String(L" ",1)+t_gdecl->m_munged+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<735>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<738>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl4);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<739>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<740>");
			p_EmitFuncProto(t_fdecl);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<741>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<744>");
		c_ClassDecl* t_cdecl2=dynamic_cast<c_ClassDecl*>(t_decl4);
		DBG_LOCAL(t_cdecl2,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<745>");
		if((t_cdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<746>");
			p_EmitClassProto(t_cdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<747>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<752>");
	c_Enumerator2* t_5=t_app->m_allSemantedDecls->p_ObjectEnumerator();
	while(t_5->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl5=t_5->p_NextObject();
		DBG_LOCAL(t_decl5,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<753>");
		c_ClassDecl* t_cdecl3=dynamic_cast<c_ClassDecl*>(t_decl5);
		DBG_LOCAL(t_cdecl3,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<754>");
		if(!((t_cdecl3)!=0) || ((t_cdecl3->p_ExtendsObject())!=0) || t_cdecl3->m_munged==String(L"String",6) || t_cdecl3->m_munged==String(L"Array",5)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<755>");
		p_Emit(String(L"void gc_mark( ",14)+t_cdecl3->m_munged+String(L" *p ){}",7));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<756>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<757>");
			p_Emit(String(L"String dbg_type( ",17)+t_cdecl3->m_munged+String(L" **p ){ return \"",16)+t_decl5->m_ident+String(L"\"; }",4));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<758>");
			p_Emit(String(L"String dbg_value( ",18)+t_cdecl3->m_munged+String(L" **p ){ return dbg_ptr_value( *p ); }",37));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<763>");
	c_Enumerator2* t_6=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_6->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl6=t_6->p_NextObject();
		DBG_LOCAL(t_decl6,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<765>");
		c_GlobalDecl* t_gdecl2=dynamic_cast<c_GlobalDecl*>(t_decl6);
		DBG_LOCAL(t_gdecl2,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<766>");
		if((t_gdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<767>");
			p_Emit(p_TransRefType(t_gdecl2->m_type)+String(L" ",1)+t_gdecl2->m_munged+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<768>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<771>");
		c_FuncDecl* t_fdecl2=dynamic_cast<c_FuncDecl*>(t_decl6);
		DBG_LOCAL(t_fdecl2,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<772>");
		if((t_fdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<773>");
			p_EmitFuncDecl(t_fdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<774>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<777>");
		c_ClassDecl* t_cdecl4=dynamic_cast<c_ClassDecl*>(t_decl6);
		DBG_LOCAL(t_cdecl4,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<778>");
		if((t_cdecl4)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<779>");
			p_EmitClassDecl(t_cdecl4);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<780>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<784>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<785>");
	p_Emit(String(L"int bbInit(){",13));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<786>");
	p_Emit(String(L"GC_CTOR",7));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<787>");
	c_Enumerator7* t_7=t_app->m_semantedGlobals->p_ObjectEnumerator();
	while(t_7->p_HasNext()){
		DBG_BLOCK();
		c_GlobalDecl* t_decl7=t_7->p_NextObject();
		DBG_LOCAL(t_decl7,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<788>");
		String t_munged=p_TransGlobal(t_decl7);
		DBG_LOCAL(t_munged,"munged")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<789>");
		p_Emit(t_munged+String(L"=",1)+t_decl7->m_init->p_Trans()+String(L";",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<790>");
		if(bb_config_ENV_CONFIG==String(L"debug",5) && p_IsDebuggable(t_decl7->m_type)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<791>");
			p_Emit(String(L"DBG_GLOBAL(\"",12)+t_decl7->m_ident+String(L"\",&",3)+t_munged+String(L");",2));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<794>");
	p_Emit(String(L"return 0;",9));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<795>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<796>");
	p_EndLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<798>");
	p_Emit(String(L"void gc_mark(){",15));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<799>");
	c_Enumerator7* t_8=t_app->m_semantedGlobals->p_ObjectEnumerator();
	while(t_8->p_HasNext()){
		DBG_BLOCK();
		c_GlobalDecl* t_decl8=t_8->p_NextObject();
		DBG_LOCAL(t_decl8,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<800>");
		p_EmitMark(p_TransGlobal(t_decl8),t_decl8->m_type,true);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<802>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<804>");
	String t_9=p_JoinLines();
	return t_9;
}
String c_CppTranslator::p_TransValue(c_Type* t_ty,String t_value){
	DBG_ENTER("CppTranslator.TransValue")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<35>");
	if((t_value).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<36>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"true",4);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<37>");
		if((dynamic_cast<c_IntType*>(t_ty))!=0){
			DBG_BLOCK();
			return t_value;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<38>");
		if((dynamic_cast<c_FloatType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_=String(L"FLOAT(",6)+t_value+String(L")",1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<39>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_2=String(L"String(",7)+p_Enquote(t_value)+String(L",",1)+String(t_value.Length())+String(L")",1);
			return t_2;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<41>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"false",5);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<42>");
		if((dynamic_cast<c_NumericType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"0",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<43>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"String()",8);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<44>");
		if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_3=String(L"Array<",6)+p_TransRefType(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType)+String(L" >()",4);
			return t_3;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<45>");
		if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"0",1);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<47>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
c_Expr* c_CppTranslator::p_Uncast(c_Expr* t_expr){
	DBG_ENTER("CppTranslator.Uncast")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<65>");
	do{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<66>");
		c_CastExpr* t_cexpr=dynamic_cast<c_CastExpr*>(t_expr);
		DBG_LOCAL(t_cexpr,"cexpr")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<67>");
		if(!((t_cexpr)!=0)){
			DBG_BLOCK();
			return t_expr;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<68>");
		t_expr=t_cexpr->m_expr;
	}while(!(false));
}
bool c_CppTranslator::p_IsGcObject(c_Expr* t_expr){
	DBG_ENTER("CppTranslator.IsGcObject")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<73>");
	t_expr=p_Uncast(t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<74>");
	if((dynamic_cast<c_ConstExpr*>(t_expr))!=0){
		DBG_BLOCK();
		return false;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<75>");
	if(!((dynamic_cast<c_ObjectType*>(t_expr->m_exprType))!=0) && !((dynamic_cast<c_ArrayType*>(t_expr->m_exprType))!=0)){
		DBG_BLOCK();
		return false;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<76>");
	if(((dynamic_cast<c_ObjectType*>(t_expr->m_exprType))!=0) && !((t_expr->m_exprType->p_GetClass()->p_ExtendsObject())!=0)){
		DBG_BLOCK();
		return false;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<77>");
	return true;
}
String c_CppTranslator::p_GcRetain(c_Expr* t_expr,String t_texpr){
	DBG_ENTER("CppTranslator.GcRetain")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<105>");
	if(!((t_texpr).Length()!=0)){
		DBG_BLOCK();
		t_texpr=t_expr->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<106>");
	if(m_unsafe || m_gc_mode!=2 || !p_IsGcObject(t_expr)){
		DBG_BLOCK();
		return t_texpr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<108>");
	t_expr=p_Uncast(t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<109>");
	if(((dynamic_cast<c_NewObjectExpr*>(t_expr))!=0) || ((dynamic_cast<c_NewArrayExpr*>(t_expr))!=0) || ((dynamic_cast<c_ArrayExpr*>(t_expr))!=0)){
		DBG_BLOCK();
		return t_texpr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<110>");
	if(((dynamic_cast<c_VarExpr*>(t_expr))!=0) && ((dynamic_cast<c_LocalDecl*>(dynamic_cast<c_VarExpr*>(t_expr)->m_decl))!=0)){
		DBG_BLOCK();
		return t_texpr;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<112>");
	String t_=String(L"gc_retain(",10)+t_texpr+String(L")",1);
	return t_;
}
String c_CppTranslator::p_TransLocalDecl(String t_munged,c_Expr* t_init){
	DBG_ENTER("CppTranslator.TransLocalDecl")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_munged,"munged")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<116>");
	String t_tinit=p_GcRetain(t_init,String());
	DBG_LOCAL(t_tinit,"tinit")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<117>");
	String t_=p_TransType(t_init->m_exprType)+String(L" ",1)+t_munged+String(L"=",1)+t_tinit;
	return t_;
}
int c_CppTranslator::p_EmitEnter(c_FuncDecl* t_func){
	DBG_ENTER("CppTranslator.EmitEnter")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_func,"func")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<132>");
	if(m_unsafe){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<134>");
	String t_id=t_func->m_ident;
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<135>");
	if((dynamic_cast<c_ClassDecl*>(t_func->m_scope))!=0){
		DBG_BLOCK();
		t_id=t_func->m_scope->m_ident+String(L".",1)+t_id;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<137>");
	p_Emit(String(L"DBG_ENTER(\"",11)+t_id+String(L"\")",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<138>");
	if(t_func->p_IsCtor() || t_func->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<139>");
		p_Emit(t_func->m_scope->m_munged+String(L" *self=this;",12));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<140>");
		p_Emit(String(L"DBG_LOCAL(self,\"Self\")",22));
	}
	return 0;
}
int c_CppTranslator::p_EmitEnterBlock(){
	DBG_ENTER("CppTranslator.EmitEnterBlock")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<146>");
	if(m_unsafe){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<148>");
	p_Emit(String(L"DBG_BLOCK();",12));
	return 0;
}
int c_CppTranslator::p_EmitSetErr(String t_info){
	DBG_ENTER("CppTranslator.EmitSetErr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_info,"info")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<153>");
	if(m_unsafe){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<155>");
	if(t_info==m_lastDbgInfo){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<156>");
	m_lastDbgInfo=t_info;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<157>");
	c_Enumerator8* t_=m_dbgLocals->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_LocalDecl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<158>");
		if(((t_decl->m_ident).Length()!=0) && p_IsDebuggable(t_decl->m_type)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<159>");
			p_Emit(String(L"DBG_LOCAL(",10)+t_decl->m_munged+String(L",\"",2)+t_decl->m_ident+String(L"\")",2));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<162>");
	m_dbgLocals->p_Clear();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<163>");
	p_Emit(String(L"DBG_INFO(\"",10)+t_info.Replace(String(L"\\",1),String(L"/",1))+String(L"\");",3));
	return 0;
}
int c_CppTranslator::p_EmitLeaveBlock(){
	DBG_ENTER("CppTranslator.EmitLeaveBlock")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<167>");
	m_dbgLocals->p_Clear();
	return 0;
}
int c_CppTranslator::p_CheckSafe(c_Decl* t_decl){
	DBG_ENTER("CppTranslator.CheckSafe")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<171>");
	if(!m_unsafe || ((t_decl->p_IsExtern())!=0) || t_decl->m_ident.EndsWith(String(L"__UNSAFE__",10))){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<172>");
	bb_config_Err(String(L"Unsafe call!!!!!",16));
	return 0;
}
String c_CppTranslator::p_TransArgs(Array<c_Expr* > t_args,c_FuncDecl* t_decl){
	DBG_ENTER("CppTranslator.TransArgs")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<51>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<52>");
	Array<c_Expr* > t_=t_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<53>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<55>");
		String t_targ=p_GcRetain(t_arg,String());
		DBG_LOCAL(t_targ,"targ")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<57>");
		t_t=t_t+t_targ;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<59>");
	String t_3=p_Bra(t_t);
	return t_3;
}
String c_CppTranslator::p_TransFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args,c_Expr* t_lhs){
	DBG_ENTER("CppTranslator.TransFunc")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<200>");
	m_pure=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<202>");
	p_CheckSafe(t_decl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<203>");
	if(t_decl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<204>");
		if((t_lhs)!=0){
			DBG_BLOCK();
			String t_=p_TransSubExpr(t_lhs,2)+String(L"->",2)+t_decl->m_munged+p_TransArgs(t_args,t_decl);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<205>");
		String t_2=t_decl->m_munged+p_TransArgs(t_args,t_decl);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<207>");
	String t_3=p_TransStatic(t_decl)+p_TransArgs(t_args,t_decl);
	return t_3;
}
String c_CppTranslator::p_TransSuperFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args){
	DBG_ENTER("CppTranslator.TransSuperFunc")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<211>");
	m_pure=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<213>");
	p_CheckSafe(t_decl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<214>");
	String t_=t_decl->p_ClassScope()->m_munged+String(L"::",2)+t_decl->m_munged+p_TransArgs(t_args,t_decl);
	return t_;
}
String c_CppTranslator::p_TransConstExpr(c_ConstExpr* t_expr){
	DBG_ENTER("CppTranslator.TransConstExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<220>");
	String t_=p_TransValue(t_expr->m_exprType,t_expr->m_value);
	return t_;
}
String c_CppTranslator::p_TransNewObjectExpr(c_NewObjectExpr* t_expr){
	DBG_ENTER("CppTranslator.TransNewObjectExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<224>");
	m_pure=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<226>");
	String t_t=String(L"(new ",5)+t_expr->m_classDecl->m_munged+String(L")",1);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<227>");
	if((t_expr->m_ctor)!=0){
		DBG_BLOCK();
		t_t=t_t+(String(L"->",2)+t_expr->m_ctor->m_munged+p_TransArgs(t_expr->m_args,t_expr->m_ctor));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<228>");
	return t_t;
}
String c_CppTranslator::p_TransNewArrayExpr(c_NewArrayExpr* t_expr){
	DBG_ENTER("CppTranslator.TransNewArrayExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<232>");
	m_pure=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<234>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<235>");
	String t_=String(L"Array<",6)+p_TransRefType(t_expr->m_ty)+String(L" >",2)+p_Bra(t_expr->m_expr->p_Trans());
	return t_;
}
String c_CppTranslator::p_TransSelfExpr(c_SelfExpr* t_expr){
	DBG_ENTER("CppTranslator.TransSelfExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<239>");
	return String(L"this",4);
}
String c_CppTranslator::p_TransCastExpr(c_CastExpr* t_expr){
	DBG_ENTER("CppTranslator.TransCastExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<244>");
	String t_t=p_Bra(t_expr->m_expr->p_Trans());
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<246>");
	c_Type* t_dst=t_expr->m_exprType;
	DBG_LOCAL(t_dst,"dst")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<247>");
	c_Type* t_src=t_expr->m_expr->m_exprType;
	DBG_LOCAL(t_src,"src")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<249>");
	if((dynamic_cast<c_BoolType*>(t_dst))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<250>");
		if((dynamic_cast<c_BoolType*>(t_src))!=0){
			DBG_BLOCK();
			return t_t;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<251>");
		if((dynamic_cast<c_IntType*>(t_src))!=0){
			DBG_BLOCK();
			String t_=p_Bra(t_t+String(L"!=0",3));
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<252>");
		if((dynamic_cast<c_FloatType*>(t_src))!=0){
			DBG_BLOCK();
			String t_2=p_Bra(t_t+String(L"!=0",3));
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<253>");
		if((dynamic_cast<c_ArrayType*>(t_src))!=0){
			DBG_BLOCK();
			String t_3=p_Bra(t_t+String(L".Length()!=0",12));
			return t_3;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<254>");
		if((dynamic_cast<c_StringType*>(t_src))!=0){
			DBG_BLOCK();
			String t_4=p_Bra(t_t+String(L".Length()!=0",12));
			return t_4;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<255>");
		if((dynamic_cast<c_ObjectType*>(t_src))!=0){
			DBG_BLOCK();
			String t_5=p_Bra(t_t+String(L"!=0",3));
			return t_5;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<256>");
		if((dynamic_cast<c_IntType*>(t_dst))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<257>");
			if((dynamic_cast<c_BoolType*>(t_src))!=0){
				DBG_BLOCK();
				String t_6=p_Bra(t_t+String(L"?1:0",4));
				return t_6;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<258>");
			if((dynamic_cast<c_IntType*>(t_src))!=0){
				DBG_BLOCK();
				return t_t;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<259>");
			if((dynamic_cast<c_FloatType*>(t_src))!=0){
				DBG_BLOCK();
				String t_7=String(L"int",3)+p_Bra(t_t);
				return t_7;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<260>");
			if((dynamic_cast<c_StringType*>(t_src))!=0){
				DBG_BLOCK();
				String t_8=t_t+String(L".ToInt()",8);
				return t_8;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<261>");
			if((dynamic_cast<c_FloatType*>(t_dst))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<262>");
				if((dynamic_cast<c_IntType*>(t_src))!=0){
					DBG_BLOCK();
					String t_9=String(L"Float",5)+p_Bra(t_t);
					return t_9;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<263>");
				if((dynamic_cast<c_FloatType*>(t_src))!=0){
					DBG_BLOCK();
					return t_t;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<264>");
				if((dynamic_cast<c_StringType*>(t_src))!=0){
					DBG_BLOCK();
					String t_10=t_t+String(L".ToFloat()",10);
					return t_10;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<265>");
				if((dynamic_cast<c_StringType*>(t_dst))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<266>");
					if((dynamic_cast<c_IntType*>(t_src))!=0){
						DBG_BLOCK();
						String t_11=String(L"String",6)+p_Bra(t_t);
						return t_11;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<267>");
					if((dynamic_cast<c_FloatType*>(t_src))!=0){
						DBG_BLOCK();
						String t_12=String(L"String",6)+p_Bra(t_t);
						return t_12;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<268>");
					if((dynamic_cast<c_StringType*>(t_src))!=0){
						DBG_BLOCK();
						return t_t;
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<269>");
					if(((dynamic_cast<c_ObjectType*>(t_dst))!=0) && ((dynamic_cast<c_ObjectType*>(t_src))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<270>");
						if(((t_src->p_GetClass()->p_IsInterface())!=0) && !((t_dst->p_GetClass()->p_IsInterface())!=0)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<272>");
							String t_13=String(L"dynamic_cast<",13)+p_TransType(t_dst)+String(L">",1)+p_Bra(t_t);
							return t_13;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<273>");
							if((t_src->p_GetClass()->p_ExtendsClass(t_dst->p_GetClass()))!=0){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<275>");
								return t_t;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<278>");
								String t_14=String(L"dynamic_cast<",13)+p_TransType(t_dst)+String(L">",1)+p_Bra(t_t);
								return t_14;
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<281>");
	bb_config_Err(String(L"C++ translator can't convert ",29)+t_src->p_ToString()+String(L" to ",4)+t_dst->p_ToString());
	return String();
}
String c_CppTranslator::p_TransUnaryExpr(c_UnaryExpr* t_expr){
	DBG_ENTER("CppTranslator.TransUnaryExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<285>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<286>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,t_pri);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<287>");
	String t_=p_TransUnaryOp(t_expr->m_op)+t_t_expr;
	return t_;
}
String c_CppTranslator::p_TransBinaryExpr(c_BinaryExpr* t_expr){
	DBG_ENTER("CppTranslator.TransBinaryExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<291>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<292>");
	String t_t_lhs=p_TransSubExpr(t_expr->m_lhs,t_pri);
	DBG_LOCAL(t_t_lhs,"t_lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<293>");
	String t_t_rhs=p_TransSubExpr(t_expr->m_rhs,t_pri-1);
	DBG_LOCAL(t_t_rhs,"t_rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<294>");
	if(t_expr->m_op==String(L"mod",3) && ((dynamic_cast<c_FloatType*>(t_expr->m_exprType))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<295>");
		String t_=String(L"(Float)fmod(",12)+t_t_lhs+String(L",",1)+t_t_rhs+String(L")",1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<297>");
	String t_2=t_t_lhs+p_TransBinaryOp(t_expr->m_op,t_t_rhs)+t_t_rhs;
	return t_2;
}
String c_CppTranslator::p_TransIndexExpr(c_IndexExpr* t_expr){
	DBG_ENTER("CppTranslator.TransIndexExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<302>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,2);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<303>");
	String t_t_index=t_expr->m_index->p_Trans();
	DBG_LOCAL(t_t_index,"t_index")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<305>");
	if((dynamic_cast<c_StringType*>(t_expr->m_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<306>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			String t_=String(L"(int)",5)+t_t_expr+String(L".At(",4)+t_t_index+String(L")",1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<307>");
		String t_2=String(L"(int)",5)+t_t_expr+String(L"[",1)+t_t_index+String(L"]",1);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<310>");
	if(bb_config_ENV_CONFIG==String(L"debug",5)){
		DBG_BLOCK();
		String t_3=t_t_expr+String(L".At(",4)+t_t_index+String(L")",1);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<311>");
	String t_4=t_t_expr+String(L"[",1)+t_t_index+String(L"]",1);
	return t_4;
}
String c_CppTranslator::p_TransSliceExpr(c_SliceExpr* t_expr){
	DBG_ENTER("CppTranslator.TransSliceExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<318>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,2);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<319>");
	String t_t_args=String(L"0",1);
	DBG_LOCAL(t_t_args,"t_args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<320>");
	if((t_expr->m_from)!=0){
		DBG_BLOCK();
		t_t_args=t_expr->m_from->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<321>");
	if((t_expr->m_term)!=0){
		DBG_BLOCK();
		t_t_args=t_t_args+(String(L",",1)+t_expr->m_term->p_Trans());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<322>");
	String t_=t_t_expr+String(L".Slice(",7)+t_t_args+String(L")",1);
	return t_;
}
String c_CppTranslator::p_TransArrayExpr(c_ArrayExpr* t_expr){
	DBG_ENTER("CppTranslator.TransArrayExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<326>");
	m_pure=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<328>");
	c_Type* t_elemType=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
	DBG_LOCAL(t_elemType,"elemType")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<330>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<331>");
	Array<c_Expr* > t_=t_expr->m_exprs;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_elem=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_elem,"elem")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<332>");
		String t_e=t_elem->p_Trans();
		DBG_LOCAL(t_e,"e")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<333>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<334>");
		t_t=t_t+t_e;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<337>");
	c_LocalDecl* t_tmp=(new c_LocalDecl)->m_new(String(),0,(c_Type::m_voidType),0);
	DBG_LOCAL(t_tmp,"tmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<338>");
	p_MungDecl(t_tmp);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<340>");
	p_Emit(p_TransRefType(t_elemType)+String(L" ",1)+t_tmp->m_munged+String(L"[]={",4)+t_t+String(L"};",2));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<342>");
	String t_3=String(L"Array<",6)+p_TransRefType(t_elemType)+String(L" >(",3)+t_tmp->m_munged+String(L",",1)+String(t_expr->m_exprs.Length())+String(L")",1);
	return t_3;
}
String c_CppTranslator::p_TransIntrinsicExpr(c_Decl* t_decl,c_Expr* t_expr,Array<c_Expr* > t_args){
	DBG_ENTER("CppTranslator.TransIntrinsicExpr")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<346>");
	m_pure=0;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<348>");
	String t_texpr=String();
	String t_arg0=String();
	String t_arg1=String();
	String t_arg2=String();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_LOCAL(t_arg0,"arg0")
	DBG_LOCAL(t_arg1,"arg1")
	DBG_LOCAL(t_arg2,"arg2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<350>");
	if((t_expr)!=0){
		DBG_BLOCK();
		t_texpr=p_TransSubExpr(t_expr,2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<352>");
	if(t_args.Length()>0 && ((t_args.At(0))!=0)){
		DBG_BLOCK();
		t_arg0=t_args.At(0)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<353>");
	if(t_args.Length()>1 && ((t_args.At(1))!=0)){
		DBG_BLOCK();
		t_arg1=t_args.At(1)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<354>");
	if(t_args.Length()>2 && ((t_args.At(2))!=0)){
		DBG_BLOCK();
		t_arg2=t_args.At(2)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<356>");
	String t_id=t_decl->m_munged.Slice(1);
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<357>");
	String t_id2=t_id.Slice(0,1).ToUpper()+t_id.Slice(1);
	DBG_LOCAL(t_id2,"id2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<359>");
	String t_1=t_id;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<362>");
	if(t_1==String(L"print",5)){
		DBG_BLOCK();
		String t_=String(L"bbPrint",7)+p_Bra(t_arg0);
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<363>");
		if(t_1==String(L"error",5)){
			DBG_BLOCK();
			String t_2=String(L"bbError",7)+p_Bra(t_arg0);
			return t_2;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<364>");
			if(t_1==String(L"debuglog",8)){
				DBG_BLOCK();
				String t_3=String(L"bbDebugLog",10)+p_Bra(t_arg0);
				return t_3;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<365>");
				if(t_1==String(L"debugstop",9)){
					DBG_BLOCK();
					return String(L"bbDebugStop()",13);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<368>");
					if(t_1==String(L"length",6)){
						DBG_BLOCK();
						String t_4=t_texpr+String(L".Length()",9);
						return t_4;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<369>");
						if(t_1==String(L"resize",6)){
							DBG_BLOCK();
							String t_5=t_texpr+String(L".Resize",7)+p_Bra(t_arg0);
							return t_5;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<372>");
							if(t_1==String(L"compare",7)){
								DBG_BLOCK();
								String t_6=t_texpr+String(L".Compare",8)+p_Bra(t_arg0);
								return t_6;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<373>");
								if(t_1==String(L"find",4)){
									DBG_BLOCK();
									String t_7=t_texpr+String(L".Find",5)+p_Bra(t_arg0+String(L",",1)+t_arg1);
									return t_7;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<374>");
									if(t_1==String(L"findlast",8)){
										DBG_BLOCK();
										String t_8=t_texpr+String(L".FindLast",9)+p_Bra(t_arg0);
										return t_8;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<375>");
										if(t_1==String(L"findlast2",9)){
											DBG_BLOCK();
											String t_9=t_texpr+String(L".FindLast",9)+p_Bra(t_arg0+String(L",",1)+t_arg1);
											return t_9;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<376>");
											if(t_1==String(L"trim",4)){
												DBG_BLOCK();
												String t_10=t_texpr+String(L".Trim()",7);
												return t_10;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<377>");
												if(t_1==String(L"join",4)){
													DBG_BLOCK();
													String t_11=t_texpr+String(L".Join",5)+p_Bra(t_arg0);
													return t_11;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<378>");
													if(t_1==String(L"split",5)){
														DBG_BLOCK();
														String t_12=t_texpr+String(L".Split",6)+p_Bra(t_arg0);
														return t_12;
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<379>");
														if(t_1==String(L"replace",7)){
															DBG_BLOCK();
															String t_13=t_texpr+String(L".Replace",8)+p_Bra(t_arg0+String(L",",1)+t_arg1);
															return t_13;
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<380>");
															if(t_1==String(L"tolower",7)){
																DBG_BLOCK();
																String t_14=t_texpr+String(L".ToLower()",10);
																return t_14;
															}else{
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<381>");
																if(t_1==String(L"toupper",7)){
																	DBG_BLOCK();
																	String t_15=t_texpr+String(L".ToUpper()",10);
																	return t_15;
																}else{
																	DBG_BLOCK();
																	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<382>");
																	if(t_1==String(L"contains",8)){
																		DBG_BLOCK();
																		String t_16=t_texpr+String(L".Contains",9)+p_Bra(t_arg0);
																		return t_16;
																	}else{
																		DBG_BLOCK();
																		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<383>");
																		if(t_1==String(L"startswith",10)){
																			DBG_BLOCK();
																			String t_17=t_texpr+String(L".StartsWith",11)+p_Bra(t_arg0);
																			return t_17;
																		}else{
																			DBG_BLOCK();
																			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<384>");
																			if(t_1==String(L"endswith",8)){
																				DBG_BLOCK();
																				String t_18=t_texpr+String(L".EndsWith",9)+p_Bra(t_arg0);
																				return t_18;
																			}else{
																				DBG_BLOCK();
																				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<385>");
																				if(t_1==String(L"tochars",7)){
																					DBG_BLOCK();
																					String t_19=t_texpr+String(L".ToChars()",10);
																					return t_19;
																				}else{
																					DBG_BLOCK();
																					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<388>");
																					if(t_1==String(L"fromchar",8)){
																						DBG_BLOCK();
																						String t_20=String(L"String",6)+p_Bra(String(L"(Char)",6)+p_Bra(t_arg0)+String(L",1",2));
																						return t_20;
																					}else{
																						DBG_BLOCK();
																						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<389>");
																						if(t_1==String(L"fromchars",9)){
																							DBG_BLOCK();
																							String t_21=String(L"String::FromChars",17)+p_Bra(t_arg0);
																							return t_21;
																						}else{
																							DBG_BLOCK();
																							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<392>");
																							if(t_1==String(L"sin",3) || t_1==String(L"cos",3) || t_1==String(L"tan",3)){
																								DBG_BLOCK();
																								String t_22=String(L"(Float)",7)+t_id+p_Bra(p_Bra(t_arg0)+String(L"*D2R",4));
																								return t_22;
																							}else{
																								DBG_BLOCK();
																								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<393>");
																								if(t_1==String(L"asin",4) || t_1==String(L"acos",4) || t_1==String(L"atan",4)){
																									DBG_BLOCK();
																									String t_23=String(L"(Float)",7)+p_Bra(t_id+p_Bra(t_arg0)+String(L"*R2D",4));
																									return t_23;
																								}else{
																									DBG_BLOCK();
																									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<394>");
																									if(t_1==String(L"atan2",5)){
																										DBG_BLOCK();
																										String t_24=String(L"(Float)",7)+p_Bra(t_id+p_Bra(t_arg0+String(L",",1)+t_arg1)+String(L"*R2D",4));
																										return t_24;
																									}else{
																										DBG_BLOCK();
																										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<397>");
																										if(t_1==String(L"sinr",4) || t_1==String(L"cosr",4) || t_1==String(L"tanr",4)){
																											DBG_BLOCK();
																											String t_25=String(L"(Float)",7)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																											return t_25;
																										}else{
																											DBG_BLOCK();
																											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<398>");
																											if(t_1==String(L"asinr",5) || t_1==String(L"acosr",5) || t_1==String(L"atanr",5)){
																												DBG_BLOCK();
																												String t_26=String(L"(Float)",7)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																												return t_26;
																											}else{
																												DBG_BLOCK();
																												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<399>");
																												if(t_1==String(L"atan2r",6)){
																													DBG_BLOCK();
																													String t_27=String(L"(Float)",7)+t_id.Slice(0,-1)+p_Bra(t_arg0+String(L",",1)+t_arg1);
																													return t_27;
																												}else{
																													DBG_BLOCK();
																													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<402>");
																													if(t_1==String(L"sqrt",4) || t_1==String(L"floor",5) || t_1==String(L"ceil",4) || t_1==String(L"log",3) || t_1==String(L"exp",3)){
																														DBG_BLOCK();
																														String t_28=String(L"(Float)",7)+t_id+p_Bra(t_arg0);
																														return t_28;
																													}else{
																														DBG_BLOCK();
																														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<403>");
																														if(t_1==String(L"pow",3)){
																															DBG_BLOCK();
																															String t_29=String(L"(Float)",7)+t_id+p_Bra(t_arg0+String(L",",1)+t_arg1);
																															return t_29;
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<407>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CppTranslator::p_TransTryStmt(c_TryStmt* t_stmt){
	DBG_ENTER("CppTranslator.TransTryStmt")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<422>");
	p_Emit(String(L"try{",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<423>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<424>");
	Array<c_CatchStmt* > t_=t_stmt->m_catches;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_CatchStmt* t_c=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_c,"c")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<425>");
		p_MungDecl(t_c->m_init);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<426>");
		p_Emit(String(L"}catch(",7)+p_TransType(t_c->m_init->m_type)+String(L" ",1)+t_c->m_init->m_munged+String(L"){",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<427>");
		m_dbgLocals->p_Push28(t_c->m_init);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<428>");
		int t_unr2=p_EmitBlock(t_c->m_block,true);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<430>");
	p_Emit(String(L"}",1));
	return String();
}
String c_CppTranslator::p_TransDeclStmt(c_DeclStmt* t_stmt){
	DBG_ENTER("CppTranslator.TransDeclStmt")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<434>");
	c_LocalDecl* t_decl=dynamic_cast<c_LocalDecl*>(t_stmt->m_decl);
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<435>");
	if((t_decl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<436>");
		if((t_decl->m_ident).Length()!=0){
			DBG_BLOCK();
			m_dbgLocals->p_Push28(t_decl);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<437>");
		p_MungDecl(t_decl);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<438>");
		String t_=p_TransLocalDecl(t_decl->m_munged,t_decl->m_init);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<440>");
	c_ConstDecl* t_cdecl=dynamic_cast<c_ConstDecl*>(t_stmt->m_decl);
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<441>");
	if((t_cdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<442>");
		return String();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<444>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
bool c_CppTranslator::p_IsLocalVar(c_Expr* t_expr){
	DBG_ENTER("CppTranslator.IsLocalVar")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<81>");
	t_expr=p_Uncast(t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<82>");
	c_VarExpr* t_vexpr=dynamic_cast<c_VarExpr*>(t_expr);
	DBG_LOCAL(t_vexpr,"vexpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<83>");
	bool t_=((t_vexpr)!=0) && ((dynamic_cast<c_LocalDecl*>(t_vexpr->m_decl))!=0);
	return t_;
}
String c_CppTranslator::p_TransAssignStmt2(c_AssignStmt* t_stmt){
	DBG_ENTER("CppTranslator.TransAssignStmt2")
	c_CppTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<449>");
	if(m_gc_mode==0 || t_stmt->m_op!=String(L"=",1) || !p_IsGcObject(t_stmt->m_rhs)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<450>");
		String t_=c_CTranslator::p_TransAssignStmt2(t_stmt);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<453>");
	String t_tlhs=t_stmt->m_lhs->p_TransVar();
	DBG_LOCAL(t_tlhs,"tlhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<454>");
	String t_trhs=t_stmt->m_rhs->p_Trans();
	DBG_LOCAL(t_trhs,"trhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<456>");
	if(p_IsLocalVar(t_stmt->m_lhs)){
		DBG_BLOCK();
		String t_2=t_tlhs+String(L"=",1)+p_GcRetain(t_stmt->m_rhs,t_trhs);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cpptranslator.monkey<458>");
	String t_3=String(L"gc_assign(",10)+t_tlhs+String(L",",1)+t_trhs+String(L")",1);
	return t_3;
}
void c_CppTranslator::mark(){
	c_CTranslator::mark();
	gc_mark_q(m_dbgLocals);
}
String c_CppTranslator::debug(){
	String t="(CppTranslator)\n";
	t=c_CTranslator::debug()+t;
	t+=dbg_decl("unsafe",&m_unsafe);
	t+=dbg_decl("lastDbgInfo",&m_lastDbgInfo);
	t+=dbg_decl("dbgLocals",&m_dbgLocals);
	t+=dbg_decl("gc_mode",&m_gc_mode);
	t+=dbg_decl("pure",&m_pure);
	return t;
}
String bb_transcc_ReplaceBlock(String t_text,String t_tag,String t_repText,String t_mark){
	DBG_ENTER("ReplaceBlock")
	DBG_LOCAL(t_text,"text")
	DBG_LOCAL(t_tag,"tag")
	DBG_LOCAL(t_repText,"repText")
	DBG_LOCAL(t_mark,"mark")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<62>");
	String t_beginTag=t_mark+String(L"${",2)+t_tag+String(L"_BEGIN}",7);
	DBG_LOCAL(t_beginTag,"beginTag")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<63>");
	int t_i=t_text.Find(t_beginTag,0);
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<64>");
	if(t_i==-1){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Error updating target project - can't find block begin tag '",60)+t_tag+String(L"'. You may need to delete target .build directory.",50));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<65>");
	t_i+=t_beginTag.Length();
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<66>");
	while(t_i<t_text.Length() && (int)t_text.At(t_i-1)!=10){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<67>");
		t_i+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<71>");
	String t_endTag=t_mark+String(L"${",2)+t_tag+String(L"_END}",5);
	DBG_LOCAL(t_endTag,"endTag")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<72>");
	int t_i2=t_text.Find(t_endTag,t_i-1);
	DBG_LOCAL(t_i2,"i2")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<73>");
	if(t_i2==-1){
		DBG_BLOCK();
		bb_transcc_Die(String(L"Error updating target project - can't find block end tag '",58)+t_tag+String(L"'.",2));
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<74>");
	if(!((t_repText).Length()!=0) || (int)t_repText.At(t_repText.Length()-1)==10){
		DBG_BLOCK();
		t_i2+=1;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<76>");
	String t_=t_text.Slice(0,t_i)+t_repText+t_text.Slice(t_i2);
	return t_;
}
c_NodeEnumerator3::c_NodeEnumerator3(){
	m_node=0;
}
c_NodeEnumerator3* c_NodeEnumerator3::m_new(c_Node2* t_node){
	DBG_ENTER("NodeEnumerator.new")
	c_NodeEnumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<437>");
	gc_assign(this->m_node,t_node);
	return this;
}
c_NodeEnumerator3* c_NodeEnumerator3::m_new2(){
	DBG_ENTER("NodeEnumerator.new")
	c_NodeEnumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<434>");
	return this;
}
bool c_NodeEnumerator3::p_HasNext(){
	DBG_ENTER("NodeEnumerator.HasNext")
	c_NodeEnumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<441>");
	bool t_=m_node!=0;
	return t_;
}
c_Node2* c_NodeEnumerator3::p_NextObject(){
	DBG_ENTER("NodeEnumerator.NextObject")
	c_NodeEnumerator3 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<445>");
	c_Node2* t_t=m_node;
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<446>");
	gc_assign(m_node,m_node->p_NextNode());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<447>");
	return t_t;
}
void c_NodeEnumerator3::mark(){
	Object::mark();
	gc_mark_q(m_node);
}
String c_NodeEnumerator3::debug(){
	String t="(NodeEnumerator)\n";
	t+=dbg_decl("node",&m_node);
	return t;
}
c_JavaTranslator::c_JavaTranslator(){
	m_unsafe=0;
}
c_JavaTranslator* c_JavaTranslator::m_new(){
	DBG_ENTER("JavaTranslator.new")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<9>");
	c_CTranslator::m_new();
	return this;
}
String c_JavaTranslator::p_TransType(c_Type* t_ty){
	DBG_ENTER("JavaTranslator.TransType")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<14>");
	if((dynamic_cast<c_VoidType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"void",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<15>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"boolean",7);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<16>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"int",3);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<17>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"float",5);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<18>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"String",6);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<19>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=p_TransType(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType)+String(L"[]",2);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<20>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=t_ty->p_GetClass()->m_munged;
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<21>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JavaTranslator::p_TransValue(c_Type* t_ty,String t_value){
	DBG_ENTER("JavaTranslator.TransValue")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<25>");
	if((t_value).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<26>");
		if(((dynamic_cast<c_IntType*>(t_ty))!=0) && t_value.StartsWith(String(L"$",1))){
			DBG_BLOCK();
			String t_=String(L"0x",2)+t_value.Slice(1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<27>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"true",4);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<28>");
		if((dynamic_cast<c_IntType*>(t_ty))!=0){
			DBG_BLOCK();
			return t_value;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<29>");
		if((dynamic_cast<c_FloatType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_2=t_value+String(L"f",1);
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<30>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_3=p_Enquote(t_value);
			return t_3;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<32>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"false",5);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<33>");
		if((dynamic_cast<c_NumericType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"0",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<34>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"\"\"",2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<35>");
		if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<36>");
			c_Type* t_elemTy=dynamic_cast<c_ArrayType*>(t_ty)->m_elemType;
			DBG_LOCAL(t_elemTy,"elemTy")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<37>");
			if((dynamic_cast<c_BoolType*>(t_elemTy))!=0){
				DBG_BLOCK();
				return String(L"bb_std_lang.emptyBoolArray",26);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<38>");
			if((dynamic_cast<c_IntType*>(t_elemTy))!=0){
				DBG_BLOCK();
				return String(L"bb_std_lang.emptyIntArray",25);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<39>");
			if((dynamic_cast<c_FloatType*>(t_elemTy))!=0){
				DBG_BLOCK();
				return String(L"bb_std_lang.emptyFloatArray",27);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<40>");
			if((dynamic_cast<c_StringType*>(t_elemTy))!=0){
				DBG_BLOCK();
				return String(L"bb_std_lang.emptyStringArray",28);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<41>");
			String t_t=String(L"[0]",3);
			DBG_LOCAL(t_t,"t")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<42>");
			while((dynamic_cast<c_ArrayType*>(t_elemTy))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<43>");
				t_elemTy=dynamic_cast<c_ArrayType*>(t_elemTy)->m_elemType;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<44>");
				t_t=t_t+String(L"[]",2);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<46>");
			String t_4=String(L"new ",4)+p_TransType(t_elemTy)+t_t;
			return t_4;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<48>");
		if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"null",4);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<50>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JavaTranslator::p_TransLocalDecl(String t_munged,c_Expr* t_init){
	DBG_ENTER("JavaTranslator.TransLocalDecl")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_munged,"munged")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<74>");
	String t_=p_TransType(t_init->m_exprType)+String(L" ",1)+t_munged+String(L"=",1)+t_init->p_Trans();
	return t_;
}
int c_JavaTranslator::p_EmitEnter(c_FuncDecl* t_func){
	DBG_ENTER("JavaTranslator.EmitEnter")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_func,"func")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<79>");
	if((m_unsafe)!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<81>");
	p_Emit(String(L"bb_std_lang.pushErr();",22));
	return 0;
}
int c_JavaTranslator::p_EmitSetErr(String t_info){
	DBG_ENTER("JavaTranslator.EmitSetErr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_info,"info")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<86>");
	if((m_unsafe)!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<88>");
	p_Emit(String(L"bb_std_lang.errInfo=\"",21)+t_info.Replace(String(L"\\",1),String(L"/",1))+String(L"\";",2));
	return 0;
}
int c_JavaTranslator::p_EmitLeave(){
	DBG_ENTER("JavaTranslator.EmitLeave")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<93>");
	if((m_unsafe)!=0){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<95>");
	p_Emit(String(L"bb_std_lang.popErr();",21));
	return 0;
}
String c_JavaTranslator::p_TransStatic(c_Decl* t_decl){
	DBG_ENTER("JavaTranslator.TransStatic")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<101>");
	if(((t_decl->p_IsExtern())!=0) && ((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<102>");
		return t_decl->m_munged;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<103>");
		if(((bb_decl__env)!=0) && ((t_decl->m_scope)!=0) && t_decl->m_scope==(bb_decl__env->p_ClassScope())){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<104>");
			return t_decl->m_munged;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<105>");
			if((dynamic_cast<c_ClassDecl*>(t_decl->m_scope))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<106>");
				String t_=t_decl->m_scope->m_munged+String(L".",1)+t_decl->m_munged;
				return t_;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<107>");
				if((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<108>");
					String t_2=t_decl->m_scope->m_munged+String(L".",1)+t_decl->m_munged;
					return t_2;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<110>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JavaTranslator::p_TransGlobal(c_GlobalDecl* t_decl){
	DBG_ENTER("JavaTranslator.TransGlobal")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<114>");
	String t_=p_TransStatic(t_decl);
	return t_;
}
String c_JavaTranslator::p_TransField(c_FieldDecl* t_decl,c_Expr* t_lhs){
	DBG_ENTER("JavaTranslator.TransField")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<118>");
	if((t_lhs)!=0){
		DBG_BLOCK();
		String t_=p_TransSubExpr(t_lhs,2)+String(L".",1)+t_decl->m_munged;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<119>");
	return t_decl->m_munged;
}
int c_JavaTranslator::p_EmitFuncDecl(c_FuncDecl* t_decl){
	DBG_ENTER("JavaTranslator.EmitFuncDecl")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<349>");
	m_unsafe=((t_decl->m_ident.EndsWith(String(L"__UNSAFE__",10)))?1:0);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<351>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<353>");
	String t_args=String();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<354>");
	Array<c_ArgDecl* > t_=t_decl->m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<355>");
		p_MungDecl(t_arg);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<356>");
		if((t_args).Length()!=0){
			DBG_BLOCK();
			t_args=t_args+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<357>");
		t_args=t_args+(p_TransType(t_arg->m_type)+String(L" ",1)+t_arg->m_munged);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<360>");
	String t_t=p_TransType(t_decl->m_retType)+String(L" ",1)+t_decl->m_munged+p_Bra(t_args);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<362>");
	if(((t_decl->p_ClassScope())!=0) && ((t_decl->p_ClassScope()->p_IsInterface())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<363>");
		p_Emit(String(L"public ",7)+t_t+String(L";",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<364>");
		if((t_decl->p_IsAbstract())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<365>");
			p_Emit(String(L"public abstract ",16)+t_t+String(L";",1));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<367>");
			String t_q=String(L"public ",7);
			DBG_LOCAL(t_q,"q")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<368>");
			if(t_decl->p_IsStatic()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<369>");
				t_q=t_q+String(L"static ",7);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<370>");
				if(!t_decl->p_IsVirtual()){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<371>");
					t_q=t_q+String(L"final ",6);
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<374>");
			p_Emit(t_q+t_t+String(L"{",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<375>");
			p_EmitBlock((t_decl),true);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<376>");
			p_Emit(String(L"}",1));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<379>");
	p_EndLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<381>");
	m_unsafe=0;
	return 0;
}
String c_JavaTranslator::p_TransDecl(c_Decl* t_decl){
	DBG_ENTER("JavaTranslator.TransDecl")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<54>");
	String t_id=t_decl->m_munged;
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<56>");
	c_ValDecl* t_vdecl=dynamic_cast<c_ValDecl*>(t_decl);
	DBG_LOCAL(t_vdecl,"vdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<57>");
	if((t_vdecl)!=0){
		DBG_BLOCK();
		String t_=p_TransType(t_vdecl->m_type)+String(L" ",1)+t_id;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<59>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
int c_JavaTranslator::p_EmitClassDecl(c_ClassDecl* t_classDecl){
	DBG_ENTER("JavaTranslator.EmitClassDecl")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<386>");
	String t_classid=t_classDecl->m_munged;
	DBG_LOCAL(t_classid,"classid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<387>");
	String t_superid=t_classDecl->m_superClass->m_munged;
	DBG_LOCAL(t_superid,"superid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<389>");
	if((t_classDecl->p_IsInterface())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<391>");
		String t_bases=String();
		DBG_LOCAL(t_bases,"bases")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<392>");
		Array<c_ClassDecl* > t_=t_classDecl->m_implments;
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			c_ClassDecl* t_iface=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_iface,"iface")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<393>");
			if((t_bases).Length()!=0){
				DBG_BLOCK();
				t_bases=t_bases+String(L",",1);
			}else{
				DBG_BLOCK();
				t_bases=String(L" extends ",9);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<394>");
			t_bases=t_bases+t_iface->m_munged;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<397>");
		p_Emit(String(L"interface ",10)+t_classid+t_bases+String(L"{",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<399>");
		c_Enumerator2* t_3=t_classDecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl=t_3->p_NextObject();
			DBG_LOCAL(t_decl,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<400>");
			c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
			DBG_LOCAL(t_fdecl,"fdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<401>");
			if(!((t_fdecl)!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<402>");
			p_EmitFuncDecl(t_fdecl);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<404>");
		p_Emit(String(L"}",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<405>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<408>");
	String t_bases2=String();
	DBG_LOCAL(t_bases2,"bases")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<409>");
	Array<c_ClassDecl* > t_4=t_classDecl->m_implments;
	int t_5=0;
	while(t_5<t_4.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_iface2=t_4.At(t_5);
		t_5=t_5+1;
		DBG_LOCAL(t_iface2,"iface")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<410>");
		if((t_bases2).Length()!=0){
			DBG_BLOCK();
			t_bases2=t_bases2+String(L",",1);
		}else{
			DBG_BLOCK();
			t_bases2=String(L" implements ",12);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<411>");
		t_bases2=t_bases2+t_iface2->m_munged;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<414>");
	String t_q=String();
	DBG_LOCAL(t_q,"q")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<415>");
	if((t_classDecl->p_IsAbstract())!=0){
		DBG_BLOCK();
		t_q=String(L"abstract ",9);
	}else{
		DBG_BLOCK();
		if((t_classDecl->p_IsFinal())!=0){
			DBG_BLOCK();
			t_q=String(L"final ",6);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<417>");
	p_Emit(t_q+String(L"class ",6)+t_classid+String(L" extends ",9)+t_superid+t_bases2+String(L"{",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<419>");
	c_Enumerator2* t_6=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_6->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_6->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<421>");
		c_FieldDecl* t_tdecl=dynamic_cast<c_FieldDecl*>(t_decl2);
		DBG_LOCAL(t_tdecl,"tdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<422>");
		if((t_tdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<423>");
			p_Emit(p_TransDecl(t_tdecl)+String(L"=",1)+t_tdecl->m_init->p_Trans()+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<424>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<427>");
		c_FuncDecl* t_fdecl2=dynamic_cast<c_FuncDecl*>(t_decl2);
		DBG_LOCAL(t_fdecl2,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<428>");
		if((t_fdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<429>");
			p_EmitFuncDecl(t_fdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<430>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<433>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl2);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<434>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<435>");
			p_Emit(String(L"static ",7)+p_TransDecl(t_gdecl)+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<436>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<440>");
	p_Emit(String(L"}",1));
	return 0;
}
String c_JavaTranslator::p_TransApp(c_AppDecl* t_app){
	DBG_ENTER("JavaTranslator.TransApp")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<446>");
	t_app->m_mainModule->m_munged=String(L"bb_",3);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<447>");
	t_app->m_mainFunc->m_munged=String(L"bbMain",6);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<449>");
	c_ValueEnumerator* t_=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<450>");
		p_MungDecl(t_decl);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<453>");
	c_Enumerator2* t_2=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_2->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<455>");
		p_MungDecl(t_decl2);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<457>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl2);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<458>");
		if(!((t_cdecl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<460>");
		c_Enumerator2* t_3=t_cdecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl3=t_3->p_NextObject();
			DBG_LOCAL(t_decl3,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<462>");
			if(((dynamic_cast<c_FuncDecl*>(t_decl3))!=0) && dynamic_cast<c_FuncDecl*>(t_decl3)->p_IsCtor()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<463>");
				t_decl3->m_ident=t_cdecl->m_ident+String(L"_",1)+t_decl3->m_ident;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<466>");
			p_MungDecl(t_decl3);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<470>");
	c_Enumerator2* t_4=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_4->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl4=t_4->p_NextObject();
		DBG_LOCAL(t_decl4,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<472>");
		c_ClassDecl* t_cdecl2=dynamic_cast<c_ClassDecl*>(t_decl4);
		DBG_LOCAL(t_cdecl2,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<473>");
		if((t_cdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<474>");
			p_EmitClassDecl(t_cdecl2);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<478>");
	c_ValueEnumerator* t_5=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_5->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_mdecl=t_5->p_NextObject();
		DBG_LOCAL(t_mdecl,"mdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<480>");
		p_Emit(String(L"class ",6)+t_mdecl->m_munged+String(L"{",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<482>");
		c_Enumerator2* t_6=t_mdecl->p_Semanted()->p_ObjectEnumerator();
		while(t_6->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl5=t_6->p_NextObject();
			DBG_LOCAL(t_decl5,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<483>");
			if(((t_decl5->p_IsExtern())!=0) || ((t_decl5->m_scope->p_ClassScope())!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<485>");
			c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl5);
			DBG_LOCAL(t_gdecl,"gdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<486>");
			if((t_gdecl)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<487>");
				p_Emit(String(L"static ",7)+p_TransDecl(t_gdecl)+String(L";",1));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<488>");
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<491>");
			c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl5);
			DBG_LOCAL(t_fdecl,"fdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<492>");
			if((t_fdecl)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<493>");
				p_EmitFuncDecl(t_fdecl);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<494>");
				continue;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<498>");
		if(t_mdecl==t_app->m_mainModule){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<499>");
			p_BeginLocalScope();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<500>");
			p_Emit(String(L"public static int bbInit(){",27));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<501>");
			c_Enumerator7* t_7=t_app->m_semantedGlobals->p_ObjectEnumerator();
			while(t_7->p_HasNext()){
				DBG_BLOCK();
				c_GlobalDecl* t_decl6=t_7->p_NextObject();
				DBG_LOCAL(t_decl6,"decl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<502>");
				p_Emit(p_TransGlobal(t_decl6)+String(L"=",1)+t_decl6->m_init->p_Trans()+String(L";",1));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<504>");
			p_Emit(String(L"return 0;",9));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<505>");
			p_Emit(String(L"}",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<506>");
			p_EndLocalScope();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<509>");
		p_Emit(String(L"}",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<512>");
	String t_8=p_JoinLines();
	return t_8;
}
String c_JavaTranslator::p_TransArgs2(Array<c_Expr* > t_args){
	DBG_ENTER("JavaTranslator.TransArgs")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<63>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<64>");
	Array<c_Expr* > t_=t_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<65>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<66>");
		t_t=t_t+t_arg->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<68>");
	String t_3=p_Bra(t_t);
	return t_3;
}
String c_JavaTranslator::p_TransFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args,c_Expr* t_lhs){
	DBG_ENTER("JavaTranslator.TransFunc")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<123>");
	if(t_decl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<124>");
		if((t_lhs)!=0){
			DBG_BLOCK();
			String t_=p_TransSubExpr(t_lhs,2)+String(L".",1)+t_decl->m_munged+p_TransArgs2(t_args);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<125>");
		String t_2=t_decl->m_munged+p_TransArgs2(t_args);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<127>");
	String t_3=p_TransStatic(t_decl)+p_TransArgs2(t_args);
	return t_3;
}
String c_JavaTranslator::p_TransSuperFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args){
	DBG_ENTER("JavaTranslator.TransSuperFunc")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<131>");
	String t_=String(L"super.",6)+t_decl->m_munged+p_TransArgs2(t_args);
	return t_;
}
String c_JavaTranslator::p_TransConstExpr(c_ConstExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransConstExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<137>");
	String t_=p_TransValue(t_expr->m_exprType,t_expr->m_value);
	return t_;
}
String c_JavaTranslator::p_TransNewObjectExpr(c_NewObjectExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransNewObjectExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<141>");
	String t_t=String(L"(new ",5)+t_expr->m_classDecl->m_munged+String(L"())",3);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<142>");
	if((t_expr->m_ctor)!=0){
		DBG_BLOCK();
		t_t=t_t+(String(L".",1)+t_expr->m_ctor->m_munged+p_TransArgs2(t_expr->m_args));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<143>");
	return t_t;
}
String c_JavaTranslator::p_TransNewArrayExpr(c_NewArrayExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransNewArrayExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<147>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<148>");
	c_Type* t_elemTy=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
	DBG_LOCAL(t_elemTy,"elemTy")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<150>");
	if((dynamic_cast<c_StringType*>(t_elemTy))!=0){
		DBG_BLOCK();
		String t_=String(L"bb_std_lang.stringArray",23)+p_Bra(t_texpr);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<152>");
	String t_t=String(L"[",1)+t_texpr+String(L"]",1);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<153>");
	while((dynamic_cast<c_ArrayType*>(t_elemTy))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<154>");
		t_elemTy=dynamic_cast<c_ArrayType*>(t_elemTy)->m_elemType;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<155>");
		t_t=t_t+String(L"[]",2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<158>");
	String t_2=String(L"new ",4)+p_TransType(t_elemTy)+t_t;
	return t_2;
}
String c_JavaTranslator::p_TransSelfExpr(c_SelfExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransSelfExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<162>");
	return String(L"this",4);
}
String c_JavaTranslator::p_TransCastExpr(c_CastExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransCastExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<167>");
	String t_texpr=p_Bra(t_expr->m_expr->p_Trans());
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<169>");
	c_Type* t_dst=t_expr->m_exprType;
	DBG_LOCAL(t_dst,"dst")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<170>");
	c_Type* t_src=t_expr->m_expr->m_exprType;
	DBG_LOCAL(t_src,"src")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<172>");
	if((dynamic_cast<c_BoolType*>(t_dst))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<173>");
		if((dynamic_cast<c_BoolType*>(t_src))!=0){
			DBG_BLOCK();
			return t_texpr;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<174>");
		if((dynamic_cast<c_IntType*>(t_src))!=0){
			DBG_BLOCK();
			String t_=p_Bra(t_texpr+String(L"!=0",3));
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<175>");
		if((dynamic_cast<c_FloatType*>(t_src))!=0){
			DBG_BLOCK();
			String t_2=p_Bra(t_texpr+String(L"!=0.0f",6));
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<176>");
		if((dynamic_cast<c_StringType*>(t_src))!=0){
			DBG_BLOCK();
			String t_3=p_Bra(t_texpr+String(L".length()!=0",12));
			return t_3;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<177>");
		if((dynamic_cast<c_ArrayType*>(t_src))!=0){
			DBG_BLOCK();
			String t_4=p_Bra(t_texpr+String(L".length!=0",10));
			return t_4;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<178>");
		if((dynamic_cast<c_ObjectType*>(t_src))!=0){
			DBG_BLOCK();
			String t_5=p_Bra(t_texpr+String(L"!=null",6));
			return t_5;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<179>");
		if((dynamic_cast<c_IntType*>(t_dst))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<180>");
			if((dynamic_cast<c_BoolType*>(t_src))!=0){
				DBG_BLOCK();
				String t_6=p_Bra(t_texpr+String(L"?1:0",4));
				return t_6;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<181>");
			if((dynamic_cast<c_IntType*>(t_src))!=0){
				DBG_BLOCK();
				return t_texpr;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<182>");
			if((dynamic_cast<c_FloatType*>(t_src))!=0){
				DBG_BLOCK();
				String t_7=String(L"(int)",5)+t_texpr;
				return t_7;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<183>");
			if((dynamic_cast<c_StringType*>(t_src))!=0){
				DBG_BLOCK();
				String t_8=String(L"Integer.parseInt(",17)+t_texpr+String(L".trim())",8);
				return t_8;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<184>");
			if((dynamic_cast<c_FloatType*>(t_dst))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<185>");
				if((dynamic_cast<c_IntType*>(t_src))!=0){
					DBG_BLOCK();
					String t_9=String(L"(float)",7)+t_texpr;
					return t_9;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<186>");
				if((dynamic_cast<c_FloatType*>(t_src))!=0){
					DBG_BLOCK();
					return t_texpr;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<187>");
				if((dynamic_cast<c_StringType*>(t_src))!=0){
					DBG_BLOCK();
					String t_10=String(L"Float.parseFloat(",17)+t_texpr+String(L".trim())",8);
					return t_10;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<188>");
				if((dynamic_cast<c_StringType*>(t_dst))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<189>");
					if((dynamic_cast<c_IntType*>(t_src))!=0){
						DBG_BLOCK();
						String t_11=String(L"String.valueOf",14)+t_texpr;
						return t_11;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<190>");
					if((dynamic_cast<c_FloatType*>(t_src))!=0){
						DBG_BLOCK();
						String t_12=String(L"String.valueOf",14)+t_texpr;
						return t_12;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<191>");
					if((dynamic_cast<c_StringType*>(t_src))!=0){
						DBG_BLOCK();
						return t_texpr;
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<192>");
					if(((dynamic_cast<c_ObjectType*>(t_dst))!=0) && ((dynamic_cast<c_ObjectType*>(t_src))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<193>");
						if((t_src->p_GetClass()->p_ExtendsClass(t_dst->p_GetClass()))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<194>");
							return t_texpr;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<196>");
							String t_13=String(L"bb_std_lang.as(",15)+p_TransType(t_dst)+String(L".class,",7)+t_texpr+String(L")",1);
							return t_13;
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<203>");
	bb_config_Err(String(L"Java translator can't convert ",30)+t_src->p_ToString()+String(L" to ",4)+t_dst->p_ToString());
	return String();
}
String c_JavaTranslator::p_TransUnaryExpr(c_UnaryExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransUnaryExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<207>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<208>");
	if(p_ExprPri(t_expr->m_expr)>p_ExprPri(t_expr)){
		DBG_BLOCK();
		t_texpr=p_Bra(t_texpr);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<209>");
	String t_=p_TransUnaryOp(t_expr->m_op)+t_texpr;
	return t_;
}
String c_JavaTranslator::p_TransBinaryExpr(c_BinaryExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransBinaryExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<213>");
	String t_lhs=t_expr->m_lhs->p_Trans();
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<214>");
	String t_rhs=t_expr->m_rhs->p_Trans();
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<217>");
	if(((dynamic_cast<c_BinaryCompareExpr*>(t_expr))!=0) && ((dynamic_cast<c_StringType*>(t_expr->m_lhs->m_exprType))!=0) && ((dynamic_cast<c_StringType*>(t_expr->m_rhs->m_exprType))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<218>");
		if(p_ExprPri(t_expr->m_lhs)>2){
			DBG_BLOCK();
			t_lhs=p_Bra(t_lhs);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<219>");
		String t_=p_Bra(t_lhs+String(L".compareTo",10)+p_Bra(t_rhs)+p_TransBinaryOp(t_expr->m_op,String())+String(L"0",1));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<222>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<223>");
	if(p_ExprPri(t_expr->m_lhs)>t_pri){
		DBG_BLOCK();
		t_lhs=p_Bra(t_lhs);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<224>");
	if(p_ExprPri(t_expr->m_rhs)>=t_pri){
		DBG_BLOCK();
		t_rhs=p_Bra(t_rhs);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<225>");
	String t_2=t_lhs+p_TransBinaryOp(t_expr->m_op,t_rhs)+t_rhs;
	return t_2;
}
String c_JavaTranslator::p_TransIndexExpr(c_IndexExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransIndexExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<229>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<230>");
	String t_index=t_expr->m_index->p_Trans();
	DBG_LOCAL(t_index,"index")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<231>");
	if((dynamic_cast<c_StringType*>(t_expr->m_expr->m_exprType))!=0){
		DBG_BLOCK();
		String t_=String(L"(int)",5)+t_texpr+String(L".charAt(",8)+t_index+String(L")",1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<232>");
	String t_2=t_texpr+String(L"[",1)+t_index+String(L"]",1);
	return t_2;
}
String c_JavaTranslator::p_TransSliceExpr(c_SliceExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransSliceExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<236>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<237>");
	String t_from=String(L",0",2);
	String t_term=String();
	DBG_LOCAL(t_from,"from")
	DBG_LOCAL(t_term,"term")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<238>");
	if((t_expr->m_from)!=0){
		DBG_BLOCK();
		t_from=String(L",",1)+t_expr->m_from->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<239>");
	if((t_expr->m_term)!=0){
		DBG_BLOCK();
		t_term=String(L",",1)+t_expr->m_term->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<240>");
	if((dynamic_cast<c_ArrayType*>(t_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<241>");
		String t_=String(L"((",2)+p_TransType(t_expr->m_exprType)+String(L")bb_std_lang.sliceArray",23)+p_Bra(t_texpr+t_from+t_term)+String(L")",1);
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<242>");
		if((dynamic_cast<c_StringType*>(t_expr->m_exprType))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<243>");
			String t_2=String(L"bb_std_lang.slice(",18)+t_texpr+t_from+t_term+String(L")",1);
			return t_2;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<245>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JavaTranslator::p_TransArrayExpr(c_ArrayExpr* t_expr){
	DBG_ENTER("JavaTranslator.TransArrayExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<249>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<250>");
	Array<c_Expr* > t_=t_expr->m_exprs;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_elem=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_elem,"elem")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<251>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<252>");
		t_t=t_t+t_elem->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<254>");
	String t_3=String(L"new ",4)+p_TransType(t_expr->m_exprType)+String(L"{",1)+t_t+String(L"}",1);
	return t_3;
}
String c_JavaTranslator::p_TransIntrinsicExpr(c_Decl* t_decl,c_Expr* t_expr,Array<c_Expr* > t_args){
	DBG_ENTER("JavaTranslator.TransIntrinsicExpr")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<258>");
	String t_texpr=String();
	String t_arg0=String();
	String t_arg1=String();
	String t_arg2=String();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_LOCAL(t_arg0,"arg0")
	DBG_LOCAL(t_arg1,"arg1")
	DBG_LOCAL(t_arg2,"arg2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<260>");
	if((t_expr)!=0){
		DBG_BLOCK();
		t_texpr=p_TransSubExpr(t_expr,2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<262>");
	if(t_args.Length()>0 && ((t_args.At(0))!=0)){
		DBG_BLOCK();
		t_arg0=t_args.At(0)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<263>");
	if(t_args.Length()>1 && ((t_args.At(1))!=0)){
		DBG_BLOCK();
		t_arg1=t_args.At(1)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<264>");
	if(t_args.Length()>2 && ((t_args.At(2))!=0)){
		DBG_BLOCK();
		t_arg2=t_args.At(2)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<266>");
	String t_id=t_decl->m_munged.Slice(1);
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<268>");
	String t_fmath=String(L"(float)Math.",12);
	DBG_LOCAL(t_fmath,"fmath")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<273>");
	String t_1=t_id;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<276>");
	if(t_1==String(L"print",5)){
		DBG_BLOCK();
		String t_=String(L"bb_std_lang.print",17)+p_Bra(t_arg0);
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<277>");
		if(t_1==String(L"error",5)){
			DBG_BLOCK();
			String t_2=String(L"bb_std_lang.error",17)+p_Bra(t_arg0);
			return t_2;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<278>");
			if(t_1==String(L"debuglog",8)){
				DBG_BLOCK();
				String t_3=String(L"bb_std_lang.debugLog",20)+p_Bra(t_arg0);
				return t_3;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<279>");
				if(t_1==String(L"debugstop",9)){
					DBG_BLOCK();
					return String(L"bb_std_lang.debugStop()",23);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<282>");
					if(t_1==String(L"length",6)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<283>");
						if((dynamic_cast<c_StringType*>(t_expr->m_exprType))!=0){
							DBG_BLOCK();
							String t_4=t_texpr+String(L".length()",9);
							return t_4;
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<284>");
						String t_5=String(L"bb_std_lang.length",18)+p_Bra(t_texpr);
						return t_5;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<285>");
						if(t_1==String(L"resize",6)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<286>");
							c_Type* t_ty=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
							DBG_LOCAL(t_ty,"ty")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<287>");
							if((dynamic_cast<c_StringType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_6=String(L"bb_std_lang.resize(",19)+t_texpr+String(L",",1)+t_arg0+String(L")",1);
								return t_6;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<288>");
							String t_ety=p_TransType(t_ty);
							DBG_LOCAL(t_ety,"ety")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<289>");
							String t_7=String(L"(",1)+t_ety+String(L"[])bb_std_lang.resize(",22)+t_texpr+String(L",",1)+t_arg0+String(L",",1)+t_ety+String(L".class)",7);
							return t_7;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<291>");
							if(t_1==String(L"compare",7)){
								DBG_BLOCK();
								String t_8=t_texpr+String(L".compareTo",10)+p_Bra(t_arg0);
								return t_8;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<292>");
								if(t_1==String(L"find",4)){
									DBG_BLOCK();
									String t_9=t_texpr+String(L".indexOf",8)+p_Bra(t_arg0+String(L",",1)+t_arg1);
									return t_9;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<293>");
									if(t_1==String(L"findlast",8)){
										DBG_BLOCK();
										String t_10=t_texpr+String(L".lastIndexOf",12)+p_Bra(t_arg0);
										return t_10;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<294>");
										if(t_1==String(L"findlast2",9)){
											DBG_BLOCK();
											String t_11=t_texpr+String(L".lastIndexOf",12)+p_Bra(t_arg0+String(L",",1)+t_arg1);
											return t_11;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<295>");
											if(t_1==String(L"trim",4)){
												DBG_BLOCK();
												String t_12=t_texpr+String(L".trim()",7);
												return t_12;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<296>");
												if(t_1==String(L"join",4)){
													DBG_BLOCK();
													String t_13=String(L"bb_std_lang.join",16)+p_Bra(t_texpr+String(L",",1)+t_arg0);
													return t_13;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<297>");
													if(t_1==String(L"split",5)){
														DBG_BLOCK();
														String t_14=String(L"bb_std_lang.split",17)+p_Bra(t_texpr+String(L",",1)+t_arg0);
														return t_14;
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<298>");
														if(t_1==String(L"replace",7)){
															DBG_BLOCK();
															String t_15=String(L"bb_std_lang.replace",19)+p_Bra(t_texpr+String(L",",1)+t_arg0+String(L",",1)+t_arg1);
															return t_15;
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<299>");
															if(t_1==String(L"tolower",7)){
																DBG_BLOCK();
																String t_16=t_texpr+String(L".toLowerCase()",14);
																return t_16;
															}else{
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<300>");
																if(t_1==String(L"toupper",7)){
																	DBG_BLOCK();
																	String t_17=t_texpr+String(L".toUpperCase()",14);
																	return t_17;
																}else{
																	DBG_BLOCK();
																	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<301>");
																	if(t_1==String(L"contains",8)){
																		DBG_BLOCK();
																		String t_18=p_Bra(t_texpr+String(L".indexOf",8)+p_Bra(t_arg0)+String(L"!=-1",4));
																		return t_18;
																	}else{
																		DBG_BLOCK();
																		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<302>");
																		if(t_1==String(L"startswith",10)){
																			DBG_BLOCK();
																			String t_19=t_texpr+String(L".startsWith",11)+p_Bra(t_arg0);
																			return t_19;
																		}else{
																			DBG_BLOCK();
																			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<303>");
																			if(t_1==String(L"endswith",8)){
																				DBG_BLOCK();
																				String t_20=t_texpr+String(L".endsWith",9)+p_Bra(t_arg0);
																				return t_20;
																			}else{
																				DBG_BLOCK();
																				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<304>");
																				if(t_1==String(L"tochars",7)){
																					DBG_BLOCK();
																					String t_21=String(L"bb_std_lang.toChars",19)+p_Bra(t_texpr);
																					return t_21;
																				}else{
																					DBG_BLOCK();
																					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<307>");
																					if(t_1==String(L"fromchar",8)){
																						DBG_BLOCK();
																						String t_22=String(L"String.valueOf",14)+p_Bra(String(L"(char)",6)+p_Bra(t_arg0));
																						return t_22;
																					}else{
																						DBG_BLOCK();
																						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<308>");
																						if(t_1==String(L"fromchars",9)){
																							DBG_BLOCK();
																							String t_23=String(L"bb_std_lang.fromChars",21)+p_Bra(t_arg0);
																							return t_23;
																						}else{
																							DBG_BLOCK();
																							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<311>");
																							if(t_1==String(L"sin",3) || t_1==String(L"cos",3)){
																								DBG_BLOCK();
																								String t_24=t_fmath+t_id+p_Bra(p_Bra(t_arg0)+String(L"*bb_std_lang.D2R",16));
																								return t_24;
																							}else{
																								DBG_BLOCK();
																								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<312>");
																								if(t_1==String(L"tan",3)){
																									DBG_BLOCK();
																									String t_25=String(L"(float)Math.",12)+t_id+p_Bra(p_Bra(t_arg0)+String(L"*bb_std_lang.D2R",16));
																									return t_25;
																								}else{
																									DBG_BLOCK();
																									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<313>");
																									if(t_1==String(L"asin",4) || t_1==String(L"acos",4) || t_1==String(L"atan",4)){
																										DBG_BLOCK();
																										String t_26=String(L"(float)",7)+p_Bra(String(L"Math.",5)+t_id+p_Bra(t_arg0)+String(L"*bb_std_lang.R2D",16));
																										return t_26;
																									}else{
																										DBG_BLOCK();
																										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<314>");
																										if(t_1==String(L"atan2",5)){
																											DBG_BLOCK();
																											String t_27=String(L"(float)",7)+p_Bra(String(L"Math.",5)+t_id+p_Bra(t_arg0+String(L",",1)+t_arg1)+String(L"*bb_std_lang.R2D",16));
																											return t_27;
																										}else{
																											DBG_BLOCK();
																											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<317>");
																											if(t_1==String(L"sinr",4) || t_1==String(L"cosr",4)){
																												DBG_BLOCK();
																												String t_28=t_fmath+t_id.Slice(0,-1)+p_Bra(t_arg0);
																												return t_28;
																											}else{
																												DBG_BLOCK();
																												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<318>");
																												if(t_1==String(L"tanr",4)){
																													DBG_BLOCK();
																													String t_29=String(L"(float)Math.",12)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																													return t_29;
																												}else{
																													DBG_BLOCK();
																													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<319>");
																													if(t_1==String(L"asinr",5) || t_1==String(L"acosr",5) || t_1==String(L"atanr",5)){
																														DBG_BLOCK();
																														String t_30=String(L"(float)Math.",12)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																														return t_30;
																													}else{
																														DBG_BLOCK();
																														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<320>");
																														if(t_1==String(L"atan2r",6)){
																															DBG_BLOCK();
																															String t_31=String(L"(float)Math.",12)+t_id.Slice(0,-1)+p_Bra(t_arg0+String(L",",1)+t_arg1);
																															return t_31;
																														}else{
																															DBG_BLOCK();
																															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<323>");
																															if(t_1==String(L"sqrt",4) || t_1==String(L"floor",5) || t_1==String(L"ceil",4)){
																																DBG_BLOCK();
																																String t_32=t_fmath+t_id+p_Bra(t_arg0);
																																return t_32;
																															}else{
																																DBG_BLOCK();
																																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<324>");
																																if(t_1==String(L"log",3) || t_1==String(L"exp",3)){
																																	DBG_BLOCK();
																																	String t_33=String(L"(float)Math.",12)+t_id+p_Bra(t_arg0);
																																	return t_33;
																																}else{
																																	DBG_BLOCK();
																																	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<325>");
																																	if(t_1==String(L"pow",3)){
																																		DBG_BLOCK();
																																		String t_34=String(L"(float)Math.",12)+t_id+p_Bra(t_arg0+String(L",",1)+t_arg1);
																																		return t_34;
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<329>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JavaTranslator::p_TransTryStmt(c_TryStmt* t_stmt){
	DBG_ENTER("JavaTranslator.TransTryStmt")
	c_JavaTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<335>");
	p_Emit(String(L"try{",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<336>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<337>");
	Array<c_CatchStmt* > t_=t_stmt->m_catches;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_CatchStmt* t_c=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_c,"c")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<338>");
		p_MungDecl(t_c->m_init);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<339>");
		p_Emit(String(L"}catch(",7)+p_TransType(t_c->m_init->m_type)+String(L" ",1)+t_c->m_init->m_munged+String(L"){",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<340>");
		int t_unr2=p_EmitBlock(t_c->m_block,true);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/javatranslator.monkey<342>");
	p_Emit(String(L"}",1));
	return String();
}
void c_JavaTranslator::mark(){
	c_CTranslator::mark();
}
String c_JavaTranslator::debug(){
	String t="(JavaTranslator)\n";
	t=c_CTranslator::debug()+t;
	t+=dbg_decl("unsafe",&m_unsafe);
	return t;
}
bool bb_transcc_MatchPathAlt(String t_text,String t_alt){
	DBG_ENTER("MatchPathAlt")
	DBG_LOCAL(t_text,"text")
	DBG_LOCAL(t_alt,"alt")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<81>");
	if(!t_alt.Contains(String(L"*",1))){
		DBG_BLOCK();
		bool t_=t_alt==t_text;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<83>");
	Array<String > t_bits=t_alt.Split(String(L"*",1));
	DBG_LOCAL(t_bits,"bits")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<84>");
	if(!t_text.StartsWith(t_bits.At(0))){
		DBG_BLOCK();
		return false;
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<86>");
	int t_n=t_bits.Length()-1;
	DBG_LOCAL(t_n,"n")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<87>");
	int t_i=t_bits.At(0).Length();
	DBG_LOCAL(t_i,"i")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<88>");
	for(int t_j=1;t_j<t_n;t_j=t_j+1){
		DBG_BLOCK();
		DBG_LOCAL(t_j,"j")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<89>");
		String t_bit=t_bits.At(t_j);
		DBG_LOCAL(t_bit,"bit")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<90>");
		t_i=t_text.Find(t_bit,t_i);
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<91>");
		if(t_i==-1){
			DBG_BLOCK();
			return false;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<92>");
		t_i+=t_bit.Length();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<95>");
	bool t_2=t_text.Slice(t_i).EndsWith(t_bits.At(t_n));
	return t_2;
}
bool bb_transcc_MatchPath(String t_text,String t_pattern){
	DBG_ENTER("MatchPath")
	DBG_LOCAL(t_text,"text")
	DBG_LOCAL(t_pattern,"pattern")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<100>");
	t_text=String(L"/",1)+t_text;
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<101>");
	Array<String > t_alts=t_pattern.Split(String(L"|",1));
	DBG_LOCAL(t_alts,"alts")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<102>");
	bool t_match=false;
	DBG_LOCAL(t_match,"match")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<104>");
	Array<String > t_=t_alts;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		String t_alt=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_alt,"alt")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<105>");
		if(!((t_alt).Length()!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<107>");
		if(t_alt.StartsWith(String(L"!",1))){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<108>");
			if(bb_transcc_MatchPathAlt(t_text,t_alt.Slice(1))){
				DBG_BLOCK();
				return false;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<110>");
			if(bb_transcc_MatchPathAlt(t_text,t_alt)){
				DBG_BLOCK();
				t_match=true;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/transcc.monkey<114>");
	return t_match;
}
String bb_config_Enquote(String t_str,String t_lang){
	DBG_ENTER("Enquote")
	DBG_LOCAL(t_str,"str")
	DBG_LOCAL(t_lang,"lang")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<155>");
	String t_1=t_lang;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<156>");
	if(t_1==String(L"cpp",3) || t_1==String(L"java",4) || t_1==String(L"as",2) || t_1==String(L"js",2) || t_1==String(L"cs",2)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<157>");
		t_str=t_str.Replace(String(L"\\",1),String(L"\\\\",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<158>");
		t_str=t_str.Replace(String(L"\"",1),String(L"\\\"",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<159>");
		t_str=t_str.Replace(String(L"\n",1),String(L"\\n",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<160>");
		t_str=t_str.Replace(String(L"\r",1),String(L"\\r",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<161>");
		t_str=t_str.Replace(String(L"\t",1),String(L"\\t",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<162>");
		for(int t_i=0;t_i<t_str.Length();t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<163>");
			if((int)t_str.At(t_i)>=32 && (int)t_str.At(t_i)<128){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<164>");
			String t_t=String();
			int t_n=(int)t_str.At(t_i);
			DBG_LOCAL(t_t,"t")
			DBG_LOCAL(t_n,"n")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<165>");
			while((t_n)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<166>");
				int t_c=(t_n&15)+48;
				DBG_LOCAL(t_c,"c")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<167>");
				if(t_c>=58){
					DBG_BLOCK();
					t_c+=39;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<168>");
				t_t=String((Char)(t_c),1)+t_t;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<169>");
				t_n=t_n>>4&268435455;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<171>");
			if(!((t_t).Length()!=0)){
				DBG_BLOCK();
				t_t=String(L"0",1);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<172>");
			String t_2=t_lang;
			DBG_LOCAL(t_2,"2")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<173>");
			if(t_2==String(L"cpp",3)){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<174>");
				t_t=String(L"\" L\"\\x",6)+t_t+String(L"\" L\"",4);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<176>");
				t_t=String(L"\\u",2)+(String(L"0000",4)+t_t).Slice(-4);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<178>");
			t_str=t_str.Slice(0,t_i)+t_t+t_str.Slice(t_i+1);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<179>");
			t_i+=t_t.Length()-1;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<181>");
		String t_3=t_lang;
		DBG_LOCAL(t_3,"3")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<182>");
		if(t_3==String(L"cpp",3)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<183>");
			t_str=String(L"L\"",2)+t_str+String(L"\"",1);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<185>");
			t_str=String(L"\"",1)+t_str+String(L"\"",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<187>");
		return t_str;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/config.monkey<189>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
c_JsTranslator::c_JsTranslator(){
}
c_JsTranslator* c_JsTranslator::m_new(){
	DBG_ENTER("JsTranslator.new")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<9>");
	c_CTranslator::m_new();
	return this;
}
String c_JsTranslator::p_TransValue(c_Type* t_ty,String t_value){
	DBG_ENTER("JsTranslator.TransValue")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<12>");
	if((t_value).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<13>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"true",4);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<14>");
		if((dynamic_cast<c_NumericType*>(t_ty))!=0){
			DBG_BLOCK();
			return t_value;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<15>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_=p_Enquote(t_value);
			return t_;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<17>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"false",5);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<18>");
		if((dynamic_cast<c_NumericType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"0",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<19>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"\"\"",2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<20>");
		if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"[]",2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<21>");
		if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"null",4);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<23>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JsTranslator::p_TransLocalDecl(String t_munged,c_Expr* t_init){
	DBG_ENTER("JsTranslator.TransLocalDecl")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_munged,"munged")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<38>");
	String t_=String(L"var ",4)+t_munged+String(L"=",1)+t_init->p_Trans();
	return t_;
}
int c_JsTranslator::p_EmitEnter(c_FuncDecl* t_func){
	DBG_ENTER("JsTranslator.EmitEnter")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_func,"func")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<42>");
	p_Emit(String(L"push_err();",11));
	return 0;
}
int c_JsTranslator::p_EmitSetErr(String t_info){
	DBG_ENTER("JsTranslator.EmitSetErr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_info,"info")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<46>");
	p_Emit(String(L"err_info=\"",10)+t_info.Replace(String(L"\\",1),String(L"/",1))+String(L"\";",2));
	return 0;
}
int c_JsTranslator::p_EmitLeave(){
	DBG_ENTER("JsTranslator.EmitLeave")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<50>");
	p_Emit(String(L"pop_err();",10));
	return 0;
}
String c_JsTranslator::p_TransStatic(c_Decl* t_decl){
	DBG_ENTER("JsTranslator.TransStatic")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<56>");
	if(((t_decl->p_IsExtern())!=0) && ((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<57>");
		return t_decl->m_munged;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<58>");
		if(((bb_decl__env)!=0) && ((t_decl->m_scope)!=0) && t_decl->m_scope==(bb_decl__env->p_ClassScope())){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<59>");
			String t_=t_decl->m_scope->m_munged+String(L".",1)+t_decl->m_munged;
			return t_;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<60>");
			if((dynamic_cast<c_ClassDecl*>(t_decl->m_scope))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<61>");
				String t_2=t_decl->m_scope->m_munged+String(L".",1)+t_decl->m_munged;
				return t_2;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<62>");
				if((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<63>");
					return t_decl->m_munged;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<65>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JsTranslator::p_TransGlobal(c_GlobalDecl* t_decl){
	DBG_ENTER("JsTranslator.TransGlobal")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<69>");
	String t_=p_TransStatic(t_decl);
	return t_;
}
String c_JsTranslator::p_TransField(c_FieldDecl* t_decl,c_Expr* t_lhs){
	DBG_ENTER("JsTranslator.TransField")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<73>");
	String t_t_lhs=String(L"this",4);
	DBG_LOCAL(t_t_lhs,"t_lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<74>");
	if((t_lhs)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<75>");
		t_t_lhs=p_TransSubExpr(t_lhs,2);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<76>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			t_t_lhs=String(L"dbg_object",10)+p_Bra(t_t_lhs);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<78>");
	String t_=t_t_lhs+String(L".",1)+t_decl->m_munged;
	return t_;
}
int c_JsTranslator::p_EmitFuncDecl(c_FuncDecl* t_decl){
	DBG_ENTER("JsTranslator.EmitFuncDecl")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<316>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<318>");
	String t_args=String();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<319>");
	Array<c_ArgDecl* > t_=t_decl->m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<320>");
		p_MungDecl(t_arg);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<321>");
		if((t_args).Length()!=0){
			DBG_BLOCK();
			t_args=t_args+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<322>");
		t_args=t_args+t_arg->m_munged;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<324>");
	t_args=p_Bra(t_args);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<326>");
	if(t_decl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<327>");
		p_Emit(t_decl->m_scope->m_munged+String(L".prototype.",11)+t_decl->m_munged+String(L"=function",9)+t_args+String(L"{",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<328>");
		if((t_decl->p_ClassScope())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<329>");
			p_Emit(p_TransStatic(t_decl)+String(L"=function",9)+t_args+String(L"{",1));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<331>");
			p_Emit(String(L"function ",9)+t_decl->m_munged+t_args+String(L"{",1));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<334>");
	if(!((t_decl->p_IsAbstract())!=0)){
		DBG_BLOCK();
		p_EmitBlock((t_decl),true);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<336>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<338>");
	p_EndLocalScope();
	return 0;
}
int c_JsTranslator::p_EmitClassDecl(c_ClassDecl* t_classDecl){
	DBG_ENTER("JsTranslator.EmitClassDecl")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<343>");
	if((t_classDecl->p_IsInterface())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<344>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<347>");
	String t_classid=t_classDecl->m_munged;
	DBG_LOCAL(t_classid,"classid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<348>");
	String t_superid=t_classDecl->m_superClass->m_munged;
	DBG_LOCAL(t_superid,"superid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<351>");
	p_Emit(String(L"function ",9)+t_classid+String(L"(){",3));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<353>");
	p_Emit(t_superid+String(L".call(this);",12));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<355>");
	c_Enumerator2* t_=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<356>");
		c_FieldDecl* t_fdecl=dynamic_cast<c_FieldDecl*>(t_decl);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<357>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			p_Emit(String(L"this.",5)+t_fdecl->m_munged+String(L"=",1)+t_fdecl->m_init->p_Trans()+String(L";",1));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<361>");
	String t_impls=String();
	DBG_LOCAL(t_impls,"impls")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<362>");
	c_ClassDecl* t_tdecl=t_classDecl;
	DBG_LOCAL(t_tdecl,"tdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<363>");
	c_StringSet* t_iset=(new c_StringSet)->m_new();
	DBG_LOCAL(t_iset,"iset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<364>");
	while((t_tdecl)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<365>");
		Array<c_ClassDecl* > t_2=t_tdecl->m_implmentsAll;
		int t_3=0;
		while(t_3<t_2.Length()){
			DBG_BLOCK();
			c_ClassDecl* t_iface=t_2.At(t_3);
			t_3=t_3+1;
			DBG_LOCAL(t_iface,"iface")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<366>");
			String t_t=t_iface->m_munged;
			DBG_LOCAL(t_t,"t")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<367>");
			if(t_iset->p_Contains(t_t)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<368>");
			t_iset->p_Insert(t_t);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<369>");
			if((t_impls).Length()!=0){
				DBG_BLOCK();
				t_impls=t_impls+String(L",",1);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<370>");
			t_impls=t_impls+(t_t+String(L":1",2));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<372>");
		t_tdecl=t_tdecl->m_superClass;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<374>");
	if((t_impls).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<375>");
		p_Emit(String(L"this.implments={",16)+t_impls+String(L"};",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<378>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<381>");
	if(t_superid!=String(L"Object",6)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<382>");
		p_Emit(t_classid+String(L".prototype=extend_class(",24)+t_superid+String(L");",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<386>");
	c_Enumerator2* t_4=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_4->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_4->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<387>");
		if((t_decl2->p_IsExtern())!=0){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<389>");
		c_FuncDecl* t_fdecl2=dynamic_cast<c_FuncDecl*>(t_decl2);
		DBG_LOCAL(t_fdecl2,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<390>");
		if((t_fdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<391>");
			p_EmitFuncDecl(t_fdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<392>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<395>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl2);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<396>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<397>");
			p_Emit(p_TransGlobal(t_gdecl)+String(L"=",1)+p_TransValue(t_gdecl->m_type,String())+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<398>");
			continue;
		}
	}
	return 0;
}
String c_JsTranslator::p_TransApp(c_AppDecl* t_app){
	DBG_ENTER("JsTranslator.TransApp")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<407>");
	t_app->m_mainFunc->m_munged=String(L"bbMain",6);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<409>");
	c_ValueEnumerator* t_=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<410>");
		p_MungDecl(t_decl);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<413>");
	c_Enumerator2* t_2=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_2->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<415>");
		p_MungDecl(t_decl2);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<417>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl2);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<418>");
		if(!((t_cdecl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<420>");
		c_Enumerator2* t_3=t_cdecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl3=t_3->p_NextObject();
			DBG_LOCAL(t_decl3,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<421>");
			p_MungDecl(t_decl3);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<426>");
	c_Enumerator2* t_4=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_4->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl4=t_4->p_NextObject();
		DBG_LOCAL(t_decl4,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<428>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl4);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<429>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<430>");
			p_Emit(String(L"var ",4)+p_TransGlobal(t_gdecl)+String(L"=",1)+p_TransValue(t_gdecl->m_type,String())+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<431>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<434>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl4);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<435>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<436>");
			p_EmitFuncDecl(t_fdecl);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<437>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<440>");
		c_ClassDecl* t_cdecl2=dynamic_cast<c_ClassDecl*>(t_decl4);
		DBG_LOCAL(t_cdecl2,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<441>");
		if((t_cdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<442>");
			p_EmitClassDecl(t_cdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<443>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<447>");
	p_Emit(String(L"function bbInit(){",18));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<448>");
	c_Enumerator7* t_5=t_app->m_semantedGlobals->p_ObjectEnumerator();
	while(t_5->p_HasNext()){
		DBG_BLOCK();
		c_GlobalDecl* t_decl5=t_5->p_NextObject();
		DBG_LOCAL(t_decl5,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<449>");
		p_Emit(p_TransGlobal(t_decl5)+String(L"=",1)+t_decl5->m_init->p_Trans()+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<451>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<453>");
	String t_6=p_JoinLines();
	return t_6;
}
String c_JsTranslator::p_TransArgs3(Array<c_Expr* > t_args,String t_first){
	DBG_ENTER("JsTranslator.TransArgs")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_first,"first")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<27>");
	String t_t=t_first;
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<28>");
	Array<c_Expr* > t_=t_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<29>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<30>");
		t_t=t_t+t_arg->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<32>");
	String t_3=p_Bra(t_t);
	return t_3;
}
String c_JsTranslator::p_TransFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args,c_Expr* t_lhs){
	DBG_ENTER("JsTranslator.TransFunc")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<82>");
	if(t_decl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<83>");
		String t_t_lhs=String(L"this",4);
		DBG_LOCAL(t_t_lhs,"t_lhs")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<84>");
		if((t_lhs)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<85>");
			t_t_lhs=p_TransSubExpr(t_lhs,2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<88>");
		String t_=t_t_lhs+String(L".",1)+t_decl->m_munged+p_TransArgs3(t_args,String());
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<90>");
	String t_2=p_TransStatic(t_decl)+p_TransArgs3(t_args,String());
	return t_2;
}
String c_JsTranslator::p_TransSuperFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args){
	DBG_ENTER("JsTranslator.TransSuperFunc")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<94>");
	if(t_decl->p_IsCtor()){
		DBG_BLOCK();
		String t_=p_TransStatic(t_decl)+String(L".call",5)+p_TransArgs3(t_args,String(L"this",4));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<95>");
	String t_2=t_decl->m_scope->m_munged+String(L".prototype.",11)+t_decl->m_munged+String(L".call",5)+p_TransArgs3(t_args,String(L"this",4));
	return t_2;
}
String c_JsTranslator::p_TransConstExpr(c_ConstExpr* t_expr){
	DBG_ENTER("JsTranslator.TransConstExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<101>");
	String t_=p_TransValue(t_expr->m_exprType,t_expr->m_value);
	return t_;
}
String c_JsTranslator::p_TransNewObjectExpr(c_NewObjectExpr* t_expr){
	DBG_ENTER("JsTranslator.TransNewObjectExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<105>");
	String t_t=String(L"new ",4)+t_expr->m_classDecl->m_munged;
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<106>");
	if((t_expr->m_ctor)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<107>");
		t_t=p_TransStatic(t_expr->m_ctor)+String(L".call",5)+p_TransArgs3(t_expr->m_args,t_t);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<109>");
		t_t=String(L"(",1)+t_t+String(L")",1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<111>");
	return t_t;
}
String c_JsTranslator::p_TransNewArrayExpr(c_NewArrayExpr* t_expr){
	DBG_ENTER("JsTranslator.TransNewArrayExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<115>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<116>");
	c_Type* t_ty=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<117>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=String(L"new_bool_array(",15)+t_texpr+String(L")",1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<118>");
	if((dynamic_cast<c_NumericType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=String(L"new_number_array(",17)+t_texpr+String(L")",1);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<119>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_3=String(L"new_string_array(",17)+t_texpr+String(L")",1);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<120>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_4=String(L"new_object_array(",17)+t_texpr+String(L")",1);
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<121>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_5=String(L"new_array_array(",16)+t_texpr+String(L")",1);
		return t_5;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<122>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_JsTranslator::p_TransSelfExpr(c_SelfExpr* t_expr){
	DBG_ENTER("JsTranslator.TransSelfExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<126>");
	return String(L"this",4);
}
String c_JsTranslator::p_TransCastExpr(c_CastExpr* t_expr){
	DBG_ENTER("JsTranslator.TransCastExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<130>");
	c_Type* t_dst=t_expr->m_exprType;
	DBG_LOCAL(t_dst,"dst")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<131>");
	c_Type* t_src=t_expr->m_expr->m_exprType;
	DBG_LOCAL(t_src,"src")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<132>");
	String t_texpr=p_Bra(t_expr->m_expr->p_Trans());
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<134>");
	if((dynamic_cast<c_BoolType*>(t_dst))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<135>");
		if((dynamic_cast<c_BoolType*>(t_src))!=0){
			DBG_BLOCK();
			return t_texpr;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<136>");
		if((dynamic_cast<c_IntType*>(t_src))!=0){
			DBG_BLOCK();
			String t_=p_Bra(t_texpr+String(L"!=0",3));
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<137>");
		if((dynamic_cast<c_FloatType*>(t_src))!=0){
			DBG_BLOCK();
			String t_2=p_Bra(t_texpr+String(L"!=0.0",5));
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<138>");
		if((dynamic_cast<c_StringType*>(t_src))!=0){
			DBG_BLOCK();
			String t_3=p_Bra(t_texpr+String(L".length!=0",10));
			return t_3;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<139>");
		if((dynamic_cast<c_ArrayType*>(t_src))!=0){
			DBG_BLOCK();
			String t_4=p_Bra(t_texpr+String(L".length!=0",10));
			return t_4;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<140>");
		if((dynamic_cast<c_ObjectType*>(t_src))!=0){
			DBG_BLOCK();
			String t_5=p_Bra(t_texpr+String(L"!=null",6));
			return t_5;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<141>");
		if((dynamic_cast<c_IntType*>(t_dst))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<142>");
			if((dynamic_cast<c_BoolType*>(t_src))!=0){
				DBG_BLOCK();
				String t_6=p_Bra(t_texpr+String(L"?1:0",4));
				return t_6;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<143>");
			if((dynamic_cast<c_IntType*>(t_src))!=0){
				DBG_BLOCK();
				return t_texpr;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<144>");
			if((dynamic_cast<c_FloatType*>(t_src))!=0){
				DBG_BLOCK();
				String t_7=p_Bra(t_texpr+String(L"|0",2));
				return t_7;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<145>");
			if((dynamic_cast<c_StringType*>(t_src))!=0){
				DBG_BLOCK();
				String t_8=String(L"parseInt",8)+p_Bra(t_texpr+String(L",10",3));
				return t_8;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<146>");
			if((dynamic_cast<c_FloatType*>(t_dst))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<147>");
				if((dynamic_cast<c_NumericType*>(t_src))!=0){
					DBG_BLOCK();
					return t_texpr;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<148>");
				if((dynamic_cast<c_StringType*>(t_src))!=0){
					DBG_BLOCK();
					String t_9=String(L"parseFloat",10)+t_texpr;
					return t_9;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<149>");
				if((dynamic_cast<c_StringType*>(t_dst))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<150>");
					if((dynamic_cast<c_NumericType*>(t_src))!=0){
						DBG_BLOCK();
						String t_10=String(L"String",6)+t_texpr;
						return t_10;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<151>");
					if((dynamic_cast<c_StringType*>(t_src))!=0){
						DBG_BLOCK();
						return t_texpr;
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<152>");
					if(((dynamic_cast<c_ObjectType*>(t_dst))!=0) && ((dynamic_cast<c_ObjectType*>(t_src))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<153>");
						if((t_src->p_GetClass()->p_ExtendsClass(t_dst->p_GetClass()))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<154>");
							return t_texpr;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<155>");
							if((t_dst->p_GetClass()->p_IsInterface())!=0){
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<156>");
								String t_11=String(L"object_implements",17)+p_Bra(t_texpr+String(L",\"",2)+t_dst->p_GetClass()->m_munged+String(L"\"",1));
								return t_11;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<158>");
								String t_12=String(L"object_downcast",15)+p_Bra(t_texpr+String(L",",1)+t_dst->p_GetClass()->m_munged);
								return t_12;
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<161>");
	bb_config_Err(String(L"JS translator can't convert ",28)+t_src->p_ToString()+String(L" to ",4)+t_dst->p_ToString());
	return String();
}
String c_JsTranslator::p_TransUnaryExpr(c_UnaryExpr* t_expr){
	DBG_ENTER("JsTranslator.TransUnaryExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<165>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<166>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,t_pri);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<167>");
	String t_=p_TransUnaryOp(t_expr->m_op)+t_t_expr;
	return t_;
}
String c_JsTranslator::p_TransBinaryExpr(c_BinaryExpr* t_expr){
	DBG_ENTER("JsTranslator.TransBinaryExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<171>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<172>");
	String t_t_lhs=p_TransSubExpr(t_expr->m_lhs,t_pri);
	DBG_LOCAL(t_t_lhs,"t_lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<173>");
	String t_t_rhs=p_TransSubExpr(t_expr->m_rhs,t_pri-1);
	DBG_LOCAL(t_t_rhs,"t_rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<174>");
	String t_t_expr=t_t_lhs+p_TransBinaryOp(t_expr->m_op,t_t_rhs)+t_t_rhs;
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<175>");
	if(t_expr->m_op==String(L"/",1) && ((dynamic_cast<c_IntType*>(t_expr->m_exprType))!=0)){
		DBG_BLOCK();
		t_t_expr=p_Bra(p_Bra(t_t_expr)+String(L"|0",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<176>");
	return t_t_expr;
}
String c_JsTranslator::p_TransIndexExpr(c_IndexExpr* t_expr){
	DBG_ENTER("JsTranslator.TransIndexExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<180>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,2);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<181>");
	if((dynamic_cast<c_StringType*>(t_expr->m_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<182>");
		String t_t_index=t_expr->m_index->p_Trans();
		DBG_LOCAL(t_t_index,"t_index")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<183>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			String t_=String(L"dbg_charCodeAt(",15)+t_t_expr+String(L",",1)+t_t_index+String(L")",1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<184>");
		String t_2=t_t_expr+String(L".charCodeAt(",12)+t_t_index+String(L")",1);
		return t_2;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<185>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<186>");
			String t_t_index2=t_expr->m_index->p_Trans();
			DBG_LOCAL(t_t_index2,"t_index")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<187>");
			String t_3=String(L"dbg_array(",10)+t_t_expr+String(L",",1)+t_t_index2+String(L")[dbg_index]",12);
			return t_3;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<189>");
			String t_t_index3=t_expr->m_index->p_Trans();
			DBG_LOCAL(t_t_index3,"t_index")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<190>");
			String t_4=t_t_expr+String(L"[",1)+t_t_index3+String(L"]",1);
			return t_4;
		}
	}
}
String c_JsTranslator::p_TransSliceExpr(c_SliceExpr* t_expr){
	DBG_ENTER("JsTranslator.TransSliceExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<195>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,2);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<196>");
	String t_t_args=String(L"0",1);
	DBG_LOCAL(t_t_args,"t_args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<197>");
	if((t_expr->m_from)!=0){
		DBG_BLOCK();
		t_t_args=t_expr->m_from->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<198>");
	if((t_expr->m_term)!=0){
		DBG_BLOCK();
		t_t_args=t_t_args+(String(L",",1)+t_expr->m_term->p_Trans());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<199>");
	String t_=t_t_expr+String(L".slice(",7)+t_t_args+String(L")",1);
	return t_;
}
String c_JsTranslator::p_TransArrayExpr(c_ArrayExpr* t_expr){
	DBG_ENTER("JsTranslator.TransArrayExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<203>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<204>");
	Array<c_Expr* > t_=t_expr->m_exprs;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_elem=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_elem,"elem")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<205>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<206>");
		t_t=t_t+t_elem->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<208>");
	String t_3=String(L"[",1)+t_t+String(L"]",1);
	return t_3;
}
String c_JsTranslator::p_TransTryStmt(c_TryStmt* t_stmt){
	DBG_ENTER("JsTranslator.TransTryStmt")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<214>");
	p_Emit(String(L"try{",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<216>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<218>");
	p_Emit(String(L"}catch(_eek_){",14));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<220>");
	for(int t_i=0;t_i<t_stmt->m_catches.Length();t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<222>");
		c_CatchStmt* t_c=t_stmt->m_catches.At(t_i);
		DBG_LOCAL(t_c,"c")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<224>");
		p_MungDecl(t_c->m_init);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<226>");
		if((t_i)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<227>");
			p_Emit(String(L"}else if(",9)+t_c->m_init->m_munged+String(L"=object_downcast(_eek_,",23)+t_c->m_init->m_type->p_GetClass()->m_munged+String(L")){",3));
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<229>");
			p_Emit(String(L"if(",3)+t_c->m_init->m_munged+String(L"=object_downcast(_eek_,",23)+t_c->m_init->m_type->p_GetClass()->m_munged+String(L")){",3));
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<232>");
		int t_unr2=p_EmitBlock(t_c->m_block,true);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<235>");
	p_Emit(String(L"}else{",6));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<236>");
	p_Emit(String(L"throw _eek_;",12));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<237>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<239>");
	p_Emit(String(L"}",1));
	return String();
}
String c_JsTranslator::p_TransIntrinsicExpr(c_Decl* t_decl,c_Expr* t_expr,Array<c_Expr* > t_args){
	DBG_ENTER("JsTranslator.TransIntrinsicExpr")
	c_JsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<244>");
	String t_texpr=String();
	String t_arg0=String();
	String t_arg1=String();
	String t_arg2=String();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_LOCAL(t_arg0,"arg0")
	DBG_LOCAL(t_arg1,"arg1")
	DBG_LOCAL(t_arg2,"arg2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<246>");
	if((t_expr)!=0){
		DBG_BLOCK();
		t_texpr=p_TransSubExpr(t_expr,2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<247>");
	if(t_args.Length()>0 && ((t_args.At(0))!=0)){
		DBG_BLOCK();
		t_arg0=t_args.At(0)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<248>");
	if(t_args.Length()>1 && ((t_args.At(1))!=0)){
		DBG_BLOCK();
		t_arg1=t_args.At(1)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<249>");
	if(t_args.Length()>2 && ((t_args.At(2))!=0)){
		DBG_BLOCK();
		t_arg2=t_args.At(2)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<251>");
	String t_id=t_decl->m_munged.Slice(1);
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<253>");
	String t_1=t_id;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<256>");
	if(t_1==String(L"print",5)){
		DBG_BLOCK();
		String t_=String(L"print",5)+p_Bra(t_arg0);
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<257>");
		if(t_1==String(L"error",5)){
			DBG_BLOCK();
			String t_2=String(L"error",5)+p_Bra(t_arg0);
			return t_2;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<258>");
			if(t_1==String(L"debuglog",8)){
				DBG_BLOCK();
				String t_3=String(L"debugLog",8)+p_Bra(t_arg0);
				return t_3;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<259>");
				if(t_1==String(L"debugstop",9)){
					DBG_BLOCK();
					return String(L"debugStop()",11);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<262>");
					if(t_1==String(L"length",6)){
						DBG_BLOCK();
						String t_4=t_texpr+String(L".length",7);
						return t_4;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<265>");
						if(t_1==String(L"resize",6)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<266>");
							c_Type* t_ty=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
							DBG_LOCAL(t_ty,"ty")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<267>");
							if((dynamic_cast<c_BoolType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_5=String(L"resize_bool_array",17)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_5;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<268>");
							if((dynamic_cast<c_NumericType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_6=String(L"resize_number_array",19)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_6;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<269>");
							if((dynamic_cast<c_StringType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_7=String(L"resize_string_array",19)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_7;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<270>");
							if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_8=String(L"resize_array_array",18)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_8;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<271>");
							if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_9=String(L"resize_object_array",19)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_9;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<272>");
							bb_config_InternalErr(String(L"Internal error",14));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<275>");
							if(t_1==String(L"compare",7)){
								DBG_BLOCK();
								String t_10=String(L"string_compare",14)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_10;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<276>");
								if(t_1==String(L"find",4)){
									DBG_BLOCK();
									String t_11=t_texpr+String(L".indexOf",8)+p_Bra(t_arg0+String(L",",1)+t_arg1);
									return t_11;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<277>");
									if(t_1==String(L"findlast",8)){
										DBG_BLOCK();
										String t_12=t_texpr+String(L".lastIndexOf",12)+p_Bra(t_arg0);
										return t_12;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<278>");
										if(t_1==String(L"findlast2",9)){
											DBG_BLOCK();
											String t_13=t_texpr+String(L".lastIndexOf",12)+p_Bra(t_arg0+String(L",",1)+t_arg1);
											return t_13;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<279>");
											if(t_1==String(L"trim",4)){
												DBG_BLOCK();
												String t_14=String(L"string_trim",11)+p_Bra(t_texpr);
												return t_14;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<280>");
												if(t_1==String(L"join",4)){
													DBG_BLOCK();
													String t_15=t_arg0+String(L".join",5)+p_Bra(t_texpr);
													return t_15;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<281>");
													if(t_1==String(L"split",5)){
														DBG_BLOCK();
														String t_16=t_texpr+String(L".split",6)+p_Bra(t_arg0);
														return t_16;
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<282>");
														if(t_1==String(L"replace",7)){
															DBG_BLOCK();
															String t_17=String(L"string_replace",14)+p_Bra(t_texpr+String(L",",1)+t_arg0+String(L",",1)+t_arg1);
															return t_17;
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<283>");
															if(t_1==String(L"tolower",7)){
																DBG_BLOCK();
																String t_18=t_texpr+String(L".toLowerCase()",14);
																return t_18;
															}else{
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<284>");
																if(t_1==String(L"toupper",7)){
																	DBG_BLOCK();
																	String t_19=t_texpr+String(L".toUpperCase()",14);
																	return t_19;
																}else{
																	DBG_BLOCK();
																	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<285>");
																	if(t_1==String(L"contains",8)){
																		DBG_BLOCK();
																		String t_20=p_Bra(t_texpr+String(L".indexOf",8)+p_Bra(t_arg0)+String(L"!=-1",4));
																		return t_20;
																	}else{
																		DBG_BLOCK();
																		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<286>");
																		if(t_1==String(L"startswith",10)){
																			DBG_BLOCK();
																			String t_21=String(L"string_startswith",17)+p_Bra(t_texpr+String(L",",1)+t_arg0);
																			return t_21;
																		}else{
																			DBG_BLOCK();
																			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<287>");
																			if(t_1==String(L"endswith",8)){
																				DBG_BLOCK();
																				String t_22=String(L"string_endswith",15)+p_Bra(t_texpr+String(L",",1)+t_arg0);
																				return t_22;
																			}else{
																				DBG_BLOCK();
																				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<288>");
																				if(t_1==String(L"tochars",7)){
																					DBG_BLOCK();
																					String t_23=String(L"string_tochars",14)+p_Bra(t_texpr);
																					return t_23;
																				}else{
																					DBG_BLOCK();
																					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<291>");
																					if(t_1==String(L"fromchar",8)){
																						DBG_BLOCK();
																						String t_24=String(L"String.fromCharCode",19)+p_Bra(t_arg0);
																						return t_24;
																					}else{
																						DBG_BLOCK();
																						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<292>");
																						if(t_1==String(L"fromchars",9)){
																							DBG_BLOCK();
																							String t_25=String(L"string_fromchars",16)+p_Bra(t_arg0);
																							return t_25;
																						}else{
																							DBG_BLOCK();
																							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<295>");
																							if(t_1==String(L"sin",3) || t_1==String(L"cos",3) || t_1==String(L"tan",3)){
																								DBG_BLOCK();
																								String t_26=String(L"Math.",5)+t_id+p_Bra(p_Bra(t_arg0)+String(L"*D2R",4));
																								return t_26;
																							}else{
																								DBG_BLOCK();
																								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<296>");
																								if(t_1==String(L"asin",4) || t_1==String(L"acos",4) || t_1==String(L"atan",4)){
																									DBG_BLOCK();
																									String t_27=p_Bra(String(L"Math.",5)+t_id+p_Bra(t_arg0)+String(L"*R2D",4));
																									return t_27;
																								}else{
																									DBG_BLOCK();
																									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<297>");
																									if(t_1==String(L"atan2",5)){
																										DBG_BLOCK();
																										String t_28=p_Bra(String(L"Math.",5)+t_id+p_Bra(t_arg0+String(L",",1)+t_arg1)+String(L"*R2D",4));
																										return t_28;
																									}else{
																										DBG_BLOCK();
																										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<300>");
																										if(t_1==String(L"sinr",4) || t_1==String(L"cosr",4) || t_1==String(L"tanr",4)){
																											DBG_BLOCK();
																											String t_29=String(L"Math.",5)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																											return t_29;
																										}else{
																											DBG_BLOCK();
																											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<301>");
																											if(t_1==String(L"asinr",5) || t_1==String(L"acosr",5) || t_1==String(L"atanr",5)){
																												DBG_BLOCK();
																												String t_30=String(L"Math.",5)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																												return t_30;
																											}else{
																												DBG_BLOCK();
																												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<302>");
																												if(t_1==String(L"atan2r",6)){
																													DBG_BLOCK();
																													String t_31=String(L"Math.",5)+t_id.Slice(0,-1)+p_Bra(t_arg0+String(L",",1)+t_arg1);
																													return t_31;
																												}else{
																													DBG_BLOCK();
																													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<305>");
																													if(t_1==String(L"sqrt",4) || t_1==String(L"floor",5) || t_1==String(L"ceil",4) || t_1==String(L"log",3) || t_1==String(L"exp",3)){
																														DBG_BLOCK();
																														String t_32=String(L"Math.",5)+t_id+p_Bra(t_arg0);
																														return t_32;
																													}else{
																														DBG_BLOCK();
																														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<306>");
																														if(t_1==String(L"pow",3)){
																															DBG_BLOCK();
																															String t_33=String(L"Math.",5)+t_id+p_Bra(t_arg0+String(L",",1)+t_arg1);
																															return t_33;
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/jstranslator.monkey<310>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
void c_JsTranslator::mark(){
	c_CTranslator::mark();
}
String c_JsTranslator::debug(){
	String t="(JsTranslator)\n";
	t=c_CTranslator::debug()+t;
	return t;
}
int bb_html5_Info_Width;
int bb_html5_Info_Height;
c_Stream::c_Stream(){
}
c_Stream* c_Stream::m_new(){
	DBG_ENTER("Stream.new")
	c_Stream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/stream.monkey<31>");
	return this;
}
void c_Stream::mark(){
	Object::mark();
}
String c_Stream::debug(){
	String t="(Stream)\n";
	return t;
}
c_FileStream::c_FileStream(){
	m__stream=0;
}
BBFileStream* c_FileStream::m_OpenStream(String t_path,String t_mode){
	DBG_ENTER("FileStream.OpenStream")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_mode,"mode")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<79>");
	BBFileStream* t_stream=(new BBFileStream);
	DBG_LOCAL(t_stream,"stream")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<80>");
	String t_fmode=t_mode;
	DBG_LOCAL(t_fmode,"fmode")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<81>");
	if(t_fmode==String(L"a",1)){
		DBG_BLOCK();
		t_fmode=String(L"u",1);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<82>");
	if(!t_stream->Open(t_path,t_fmode)){
		DBG_BLOCK();
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<83>");
	if(t_mode==String(L"a",1)){
		DBG_BLOCK();
		t_stream->Seek(t_stream->Length());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<84>");
	return t_stream;
}
c_FileStream* c_FileStream::m_new(String t_path,String t_mode){
	DBG_ENTER("FileStream.new")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_mode,"mode")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<31>");
	c_Stream::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<32>");
	gc_assign(m__stream,m_OpenStream(t_path,t_mode));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<33>");
	if(!((m__stream)!=0)){
		DBG_BLOCK();
		bbError(String(L"Failed to open stream",21));
	}
	return this;
}
c_FileStream* c_FileStream::m_new2(BBFileStream* t_stream){
	DBG_ENTER("FileStream.new")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stream,"stream")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<74>");
	c_Stream::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<75>");
	gc_assign(m__stream,t_stream);
	return this;
}
c_FileStream* c_FileStream::m_new3(){
	DBG_ENTER("FileStream.new")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<29>");
	c_Stream::m_new();
	return this;
}
c_FileStream* c_FileStream::m_Open(String t_path,String t_mode){
	DBG_ENTER("FileStream.Open")
	DBG_LOCAL(t_path,"path")
	DBG_LOCAL(t_mode,"mode")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<67>");
	BBFileStream* t_stream=m_OpenStream(t_path,t_mode);
	DBG_LOCAL(t_stream,"stream")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<68>");
	if((t_stream)!=0){
		DBG_BLOCK();
		c_FileStream* t_=(new c_FileStream)->m_new2(t_stream);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<69>");
	return 0;
}
int c_FileStream::p_Read(c_DataBuffer* t_buffer,int t_offset,int t_count){
	DBG_ENTER("FileStream.Read")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_buffer,"buffer")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<59>");
	int t_=m__stream->Read(t_buffer,t_offset,t_count);
	return t_;
}
void c_FileStream::p_Close(){
	DBG_ENTER("FileStream.Close")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<37>");
	if(!((m__stream)!=0)){
		DBG_BLOCK();
		return;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<38>");
	m__stream->Close();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<39>");
	m__stream=0;
}
int c_FileStream::p_Eof(){
	DBG_ENTER("FileStream.Eof")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<43>");
	int t_=m__stream->Eof();
	return t_;
}
int c_FileStream::p_Position(){
	DBG_ENTER("FileStream.Position")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<51>");
	int t_=m__stream->Position();
	return t_;
}
int c_FileStream::p_Seek(int t_position){
	DBG_ENTER("FileStream.Seek")
	c_FileStream *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_position,"position")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/filestream.monkey<55>");
	int t_=m__stream->Seek(t_position);
	return t_;
}
void c_FileStream::mark(){
	c_Stream::mark();
	gc_mark_q(m__stream);
}
String c_FileStream::debug(){
	String t="(FileStream)\n";
	t=c_Stream::debug()+t;
	t+=dbg_decl("_stream",&m__stream);
	return t;
}
c_DataBuffer::c_DataBuffer(){
}
c_DataBuffer* c_DataBuffer::m_new(int t_length){
	DBG_ENTER("DataBuffer.new")
	c_DataBuffer *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_length,"length")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/databuffer.monkey<94>");
	if(!_New(t_length)){
		DBG_BLOCK();
		bbError(String(L"Allocate DataBuffer failed",26));
	}
	return this;
}
c_DataBuffer* c_DataBuffer::m_new2(){
	DBG_ENTER("DataBuffer.new")
	c_DataBuffer *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/brl/databuffer.monkey<91>");
	return this;
}
void c_DataBuffer::mark(){
	BBDataBuffer::mark();
}
String c_DataBuffer::debug(){
	String t="(DataBuffer)\n";
	return t;
}
int bb_html5_GetInfo_PNG(String t_path){
	DBG_ENTER("GetInfo_PNG")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<12>");
	c_FileStream* t_f=c_FileStream::m_Open(t_path,String(L"r",1));
	DBG_LOCAL(t_f,"f")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<13>");
	if((t_f)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<14>");
		c_DataBuffer* t_data=(new c_DataBuffer)->m_new(32);
		DBG_LOCAL(t_data,"data")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<15>");
		int t_n=t_f->p_Read(t_data,0,24);
		DBG_LOCAL(t_n,"n")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<16>");
		t_f->p_Close();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<17>");
		if(t_n==24 && t_data->PeekByte(1)==80 && t_data->PeekByte(2)==78 && t_data->PeekByte(3)==71){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<18>");
			bb_html5_Info_Width=(t_data->PeekByte(16)&255)<<24|(t_data->PeekByte(17)&255)<<16|(t_data->PeekByte(18)&255)<<8|t_data->PeekByte(19)&255;
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<19>");
			bb_html5_Info_Height=(t_data->PeekByte(20)&255)<<24|(t_data->PeekByte(21)&255)<<16|(t_data->PeekByte(22)&255)<<8|t_data->PeekByte(23)&255;
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<20>");
			return 0;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<23>");
	return -1;
}
int bb_html5_GetInfo_JPG(String t_path){
	DBG_ENTER("GetInfo_JPG")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<42>");
	c_FileStream* t_f=c_FileStream::m_Open(t_path,String(L"r",1));
	DBG_LOCAL(t_f,"f")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<43>");
	if((t_f)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<44>");
		c_DataBuffer* t_buf=(new c_DataBuffer)->m_new(32);
		DBG_LOCAL(t_buf,"buf")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<46>");
		if(t_f->p_Read(t_buf,0,2)==2 && (t_buf->PeekByte(0)&255)==255 && (t_buf->PeekByte(1)&255)==216){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<47>");
			do{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<49>");
				while(t_f->p_Read(t_buf,0,1)==1 && (t_buf->PeekByte(0)&255)!=255){
					DBG_BLOCK();
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<51>");
				if((t_f->p_Eof())!=0){
					DBG_BLOCK();
					break;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<53>");
				while(t_f->p_Read(t_buf,0,1)==1 && (t_buf->PeekByte(0)&255)==255){
					DBG_BLOCK();
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<55>");
				if((t_f->p_Eof())!=0){
					DBG_BLOCK();
					break;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<57>");
				int t_marker=t_buf->PeekByte(0)&255;
				DBG_LOCAL(t_marker,"marker")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<58>");
				int t_1=t_marker;
				DBG_LOCAL(t_1,"1")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<59>");
				if(t_1==208 || t_1==209 || t_1==210 || t_1==211 || t_1==212 || t_1==213 || t_1==214 || t_1==215 || t_1==216 || t_1==217 || t_1==0 || t_1==255){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<60>");
					continue;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<63>");
				if(t_f->p_Read(t_buf,0,2)!=2){
					DBG_BLOCK();
					break;
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<64>");
				int t_datalen=((t_buf->PeekByte(0)&255)<<8|t_buf->PeekByte(1)&255)-2;
				DBG_LOCAL(t_datalen,"datalen")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<66>");
				int t_2=t_marker;
				DBG_LOCAL(t_2,"2")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<67>");
				if(t_2==192 || t_2==193 || t_2==194 || t_2==195){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<68>");
					if(((t_datalen)!=0) && t_f->p_Read(t_buf,0,5)==5){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<69>");
						int t_bpp=t_buf->PeekByte(0)&255;
						DBG_LOCAL(t_bpp,"bpp")
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<70>");
						bb_html5_Info_Width=(t_buf->PeekByte(3)&255)<<8|t_buf->PeekByte(4)&255;
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<71>");
						bb_html5_Info_Height=(t_buf->PeekByte(1)&255)<<8|t_buf->PeekByte(2)&255;
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<72>");
						t_f->p_Close();
						DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<73>");
						return 0;
					}
				}
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<77>");
				int t_pos=t_f->p_Position()+t_datalen;
				DBG_LOCAL(t_pos,"pos")
				DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<78>");
				if(t_f->p_Seek(t_pos)!=t_pos){
					DBG_BLOCK();
					break;
				}
			}while(!(false));
		}
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<82>");
		t_f->p_Close();
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<84>");
	return -1;
}
int bb_html5_GetInfo_GIF(String t_path){
	DBG_ENTER("GetInfo_GIF")
	DBG_LOCAL(t_path,"path")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<27>");
	c_FileStream* t_f=c_FileStream::m_Open(t_path,String(L"r",1));
	DBG_LOCAL(t_f,"f")
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<28>");
	if((t_f)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<29>");
		c_DataBuffer* t_data=(new c_DataBuffer)->m_new(32);
		DBG_LOCAL(t_data,"data")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<30>");
		int t_n=t_f->p_Read(t_data,0,10);
		DBG_LOCAL(t_n,"n")
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<31>");
		t_f->p_Close();
		DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<32>");
		if(t_n==10 && t_data->PeekByte(0)==71 && t_data->PeekByte(1)==73 && t_data->PeekByte(2)==70){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<33>");
			bb_html5_Info_Width=(t_data->PeekByte(7)&255)<<8|t_data->PeekByte(6)&255;
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<34>");
			bb_html5_Info_Height=(t_data->PeekByte(9)&255)<<8|t_data->PeekByte(8)&255;
			DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<35>");
			return 0;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXFree84f/src/transcc/builders/html5.monkey<38>");
	return -1;
}
c_AsTranslator::c_AsTranslator(){
}
c_AsTranslator* c_AsTranslator::m_new(){
	DBG_ENTER("AsTranslator.new")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<9>");
	c_CTranslator::m_new();
	return this;
}
String c_AsTranslator::p_TransValue(c_Type* t_ty,String t_value){
	DBG_ENTER("AsTranslator.TransValue")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<23>");
	if((t_value).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<24>");
		if(((dynamic_cast<c_IntType*>(t_ty))!=0) && t_value.StartsWith(String(L"$",1))){
			DBG_BLOCK();
			String t_=String(L"0x",2)+t_value.Slice(1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<25>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"true",4);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<26>");
		if((dynamic_cast<c_NumericType*>(t_ty))!=0){
			DBG_BLOCK();
			return t_value;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<27>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_2=p_Enquote(t_value);
			return t_2;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<29>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"false",5);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<30>");
		if((dynamic_cast<c_NumericType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"0",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<31>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"\"\"",2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<32>");
		if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"[]",2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<33>");
		if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"null",4);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<35>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_AsTranslator::p_TransType(c_Type* t_ty){
	DBG_ENTER("AsTranslator.TransType")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<12>");
	if((dynamic_cast<c_VoidType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"void",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<13>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Boolean",7);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<14>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"int",3);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<15>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Number",6);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<16>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"String",6);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<17>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"Array",5);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<18>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=dynamic_cast<c_ObjectType*>(t_ty)->m_classDecl->m_munged;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<19>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_AsTranslator::p_TransLocalDecl(String t_munged,c_Expr* t_init){
	DBG_ENTER("AsTranslator.TransLocalDecl")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_munged,"munged")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<54>");
	String t_=String(L"var ",4)+t_munged+String(L":",1)+p_TransType(t_init->m_exprType)+String(L"=",1)+t_init->p_Trans();
	return t_;
}
int c_AsTranslator::p_EmitEnter(c_FuncDecl* t_func){
	DBG_ENTER("AsTranslator.EmitEnter")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_func,"func")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<58>");
	p_Emit(String(L"pushErr();",10));
	return 0;
}
int c_AsTranslator::p_EmitSetErr(String t_info){
	DBG_ENTER("AsTranslator.EmitSetErr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_info,"info")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<62>");
	p_Emit(String(L"_errInfo=\"",10)+t_info.Replace(String(L"\\",1),String(L"/",1))+String(L"\";",2));
	return 0;
}
int c_AsTranslator::p_EmitLeave(){
	DBG_ENTER("AsTranslator.EmitLeave")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<66>");
	p_Emit(String(L"popErr();",9));
	return 0;
}
String c_AsTranslator::p_TransStatic(c_Decl* t_decl){
	DBG_ENTER("AsTranslator.TransStatic")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<72>");
	if(((t_decl->p_IsExtern())!=0) && ((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<73>");
		return t_decl->m_munged;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<74>");
		if(((bb_decl__env)!=0) && ((t_decl->m_scope)!=0) && t_decl->m_scope==(bb_decl__env->p_ClassScope())){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<75>");
			return t_decl->m_munged;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<76>");
			if((dynamic_cast<c_ClassDecl*>(t_decl->m_scope))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<77>");
				String t_=t_decl->m_scope->m_munged+String(L".",1)+t_decl->m_munged;
				return t_;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<78>");
				if((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<79>");
					return t_decl->m_munged;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<81>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_AsTranslator::p_TransGlobal(c_GlobalDecl* t_decl){
	DBG_ENTER("AsTranslator.TransGlobal")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<85>");
	String t_=p_TransStatic(t_decl);
	return t_;
}
String c_AsTranslator::p_TransField(c_FieldDecl* t_decl,c_Expr* t_lhs){
	DBG_ENTER("AsTranslator.TransField")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<90>");
	if((t_lhs)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<91>");
		String t_t_lhs=p_TransSubExpr(t_lhs,2);
		DBG_LOCAL(t_t_lhs,"t_lhs")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<92>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			t_t_lhs=String(L"dbg_object",10)+p_Bra(t_t_lhs);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<93>");
		String t_=t_t_lhs+String(L".",1)+t_decl->m_munged;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<95>");
	return t_decl->m_munged;
}
String c_AsTranslator::p_TransValDecl(c_ValDecl* t_decl){
	DBG_ENTER("AsTranslator.TransValDecl")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<39>");
	String t_=t_decl->m_munged+String(L":",1)+p_TransType(t_decl->m_type);
	return t_;
}
int c_AsTranslator::p_EmitFuncDecl(c_FuncDecl* t_decl){
	DBG_ENTER("AsTranslator.EmitFuncDecl")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<312>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<314>");
	String t_args=String();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<315>");
	Array<c_ArgDecl* > t_=t_decl->m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<316>");
		p_MungDecl(t_arg);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<317>");
		if((t_args).Length()!=0){
			DBG_BLOCK();
			t_args=t_args+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<318>");
		t_args=t_args+p_TransValDecl(t_arg);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<321>");
	String t_t=String(L"function ",9)+t_decl->m_munged+p_Bra(t_args)+String(L":",1)+p_TransType(t_decl->m_retType);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<323>");
	c_ClassDecl* t_cdecl=t_decl->p_ClassScope();
	DBG_LOCAL(t_cdecl,"cdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<324>");
	if(((t_cdecl)!=0) && ((t_cdecl->p_IsInterface())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<325>");
		p_Emit(t_t+String(L";",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<327>");
		String t_q=String(L"internal ",9);
		DBG_LOCAL(t_q,"q")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<328>");
		if((t_cdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<329>");
			t_q=String(L"public ",7);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<330>");
			if(t_decl->p_IsStatic()){
				DBG_BLOCK();
				t_q=t_q+String(L"static ",7);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<331>");
			if((t_decl->m_overrides)!=0){
				DBG_BLOCK();
				t_q=t_q+String(L"override ",9);
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<334>");
		p_Emit(t_q+t_t+String(L"{",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<335>");
		if((t_decl->p_IsAbstract())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<336>");
			if((dynamic_cast<c_VoidType*>(t_decl->m_retType))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<337>");
				p_Emit(String(L"return;",7));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<339>");
				p_Emit(String(L"return ",7)+p_TransValue(t_decl->m_retType,String())+String(L";",1));
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<342>");
			p_EmitBlock((t_decl),true);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<344>");
		p_Emit(String(L"}",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<347>");
	p_EndLocalScope();
	return 0;
}
int c_AsTranslator::p_EmitClassDecl(c_ClassDecl* t_classDecl){
	DBG_ENTER("AsTranslator.EmitClassDecl")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<352>");
	String t_classid=t_classDecl->m_munged;
	DBG_LOCAL(t_classid,"classid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<353>");
	String t_superid=t_classDecl->m_superClass->m_munged;
	DBG_LOCAL(t_superid,"superid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<355>");
	if((t_classDecl->p_IsInterface())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<357>");
		String t_bases=String();
		DBG_LOCAL(t_bases,"bases")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<358>");
		Array<c_ClassDecl* > t_=t_classDecl->m_implments;
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			c_ClassDecl* t_iface=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_iface,"iface")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<359>");
			if((t_bases).Length()!=0){
				DBG_BLOCK();
				t_bases=t_bases+String(L",",1);
			}else{
				DBG_BLOCK();
				t_bases=String(L" extends ",9);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<360>");
			t_bases=t_bases+t_iface->m_munged;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<363>");
		p_Emit(String(L"interface ",10)+t_classid+t_bases+String(L"{",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<365>");
		c_Enumerator2* t_3=t_classDecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl=t_3->p_NextObject();
			DBG_LOCAL(t_decl,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<366>");
			c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
			DBG_LOCAL(t_fdecl,"fdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<367>");
			if(!((t_fdecl)!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<368>");
			p_EmitFuncDecl(t_fdecl);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<370>");
		p_Emit(String(L"}",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<371>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<374>");
	String t_bases2=String();
	DBG_LOCAL(t_bases2,"bases")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<375>");
	Array<c_ClassDecl* > t_4=t_classDecl->m_implments;
	int t_5=0;
	while(t_5<t_4.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_iface2=t_4.At(t_5);
		t_5=t_5+1;
		DBG_LOCAL(t_iface2,"iface")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<376>");
		if((t_bases2).Length()!=0){
			DBG_BLOCK();
			t_bases2=t_bases2+String(L",",1);
		}else{
			DBG_BLOCK();
			t_bases2=String(L" implements ",12);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<377>");
		t_bases2=t_bases2+t_iface2->m_munged;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<380>");
	p_Emit(String(L"class ",6)+t_classid+String(L" extends ",9)+t_superid+t_bases2+String(L"{",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<383>");
	c_Enumerator2* t_6=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_6->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_6->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<384>");
		c_FieldDecl* t_tdecl=dynamic_cast<c_FieldDecl*>(t_decl2);
		DBG_LOCAL(t_tdecl,"tdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<385>");
		if((t_tdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<386>");
			p_Emit(String(L"internal var ",13)+p_TransValDecl(t_tdecl)+String(L"=",1)+t_tdecl->m_init->p_Trans()+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<387>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<390>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl2);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<391>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<392>");
			p_Emit(String(L"internal static var ",20)+p_TransValDecl(t_gdecl)+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<393>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<396>");
		c_FuncDecl* t_fdecl2=dynamic_cast<c_FuncDecl*>(t_decl2);
		DBG_LOCAL(t_fdecl2,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<397>");
		if((t_fdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<398>");
			p_EmitFuncDecl(t_fdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<399>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<403>");
	p_Emit(String(L"}",1));
	return 0;
}
String c_AsTranslator::p_TransApp(c_AppDecl* t_app){
	DBG_ENTER("AsTranslator.TransApp")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<408>");
	t_app->m_mainFunc->m_munged=String(L"bbMain",6);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<410>");
	c_ValueEnumerator* t_=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<411>");
		p_MungDecl(t_decl);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<414>");
	c_Enumerator2* t_2=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_2->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<416>");
		p_MungDecl(t_decl2);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<418>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl2);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<419>");
		if(!((t_cdecl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<421>");
		c_Enumerator2* t_3=t_cdecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl3=t_3->p_NextObject();
			DBG_LOCAL(t_decl3,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<423>");
			if(((dynamic_cast<c_FuncDecl*>(t_decl3))!=0) && dynamic_cast<c_FuncDecl*>(t_decl3)->p_IsCtor()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<424>");
				t_decl3->m_ident=t_cdecl->m_ident+String(L"_",1)+t_decl3->m_ident;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<427>");
			p_MungDecl(t_decl3);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<433>");
	c_Enumerator2* t_4=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_4->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl4=t_4->p_NextObject();
		DBG_LOCAL(t_decl4,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<435>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl4);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<436>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<437>");
			p_Emit(String(L"var ",4)+p_TransValDecl(t_gdecl)+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<438>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<441>");
		c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl4);
		DBG_LOCAL(t_fdecl,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<442>");
		if((t_fdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<443>");
			p_EmitFuncDecl(t_fdecl);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<444>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<447>");
		c_ClassDecl* t_cdecl2=dynamic_cast<c_ClassDecl*>(t_decl4);
		DBG_LOCAL(t_cdecl2,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<448>");
		if((t_cdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<449>");
			p_EmitClassDecl(t_cdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<450>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<454>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<455>");
	p_Emit(String(L"function bbInit():void{",23));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<456>");
	c_Enumerator7* t_5=t_app->m_semantedGlobals->p_ObjectEnumerator();
	while(t_5->p_HasNext()){
		DBG_BLOCK();
		c_GlobalDecl* t_decl5=t_5->p_NextObject();
		DBG_LOCAL(t_decl5,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<457>");
		p_Emit(p_TransGlobal(t_decl5)+String(L"=",1)+t_decl5->m_init->p_Trans()+String(L";",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<459>");
	p_Emit(String(L"}",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<460>");
	p_EndLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<462>");
	String t_6=p_JoinLines();
	return t_6;
}
String c_AsTranslator::p_TransArgs2(Array<c_Expr* > t_args){
	DBG_ENTER("AsTranslator.TransArgs")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<43>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<44>");
	Array<c_Expr* > t_=t_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<45>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<46>");
		t_t=t_t+t_arg->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<48>");
	String t_3=p_Bra(t_t);
	return t_3;
}
String c_AsTranslator::p_TransFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args,c_Expr* t_lhs){
	DBG_ENTER("AsTranslator.TransFunc")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<100>");
	if(t_decl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<101>");
		String t_t_lhs=String(L"this",4);
		DBG_LOCAL(t_t_lhs,"t_lhs")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<102>");
		if((t_lhs)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<103>");
			t_t_lhs=p_TransSubExpr(t_lhs,2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<106>");
		String t_=t_t_lhs+String(L".",1)+t_decl->m_munged+p_TransArgs2(t_args);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<108>");
	String t_2=p_TransStatic(t_decl)+p_TransArgs2(t_args);
	return t_2;
}
String c_AsTranslator::p_TransSuperFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args){
	DBG_ENTER("AsTranslator.TransSuperFunc")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<112>");
	String t_=String(L"super.",6)+t_decl->m_munged+p_TransArgs2(t_args);
	return t_;
}
String c_AsTranslator::p_TransConstExpr(c_ConstExpr* t_expr){
	DBG_ENTER("AsTranslator.TransConstExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<118>");
	String t_=p_TransValue(t_expr->m_exprType,t_expr->m_value);
	return t_;
}
String c_AsTranslator::p_TransNewObjectExpr(c_NewObjectExpr* t_expr){
	DBG_ENTER("AsTranslator.TransNewObjectExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<122>");
	String t_t=String(L"(new ",5)+t_expr->m_classDecl->m_munged+String(L")",1);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<123>");
	if((t_expr->m_ctor)!=0){
		DBG_BLOCK();
		t_t=t_t+(String(L".",1)+t_expr->m_ctor->m_munged+p_TransArgs2(t_expr->m_args));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<124>");
	return t_t;
}
String c_AsTranslator::p_TransNewArrayExpr(c_NewArrayExpr* t_expr){
	DBG_ENTER("AsTranslator.TransNewArrayExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<128>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<129>");
	c_Type* t_ty=t_expr->m_ty;
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<130>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=String(L"new_bool_array(",15)+t_texpr+String(L")",1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<131>");
	if((dynamic_cast<c_NumericType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=String(L"new_number_array(",17)+t_texpr+String(L")",1);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<132>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_3=String(L"new_string_array(",17)+t_texpr+String(L")",1);
		return t_3;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<133>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_4=String(L"new_object_array(",17)+t_texpr+String(L")",1);
		return t_4;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<134>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_5=String(L"new_array_array(",16)+t_texpr+String(L")",1);
		return t_5;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<135>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_AsTranslator::p_TransSelfExpr(c_SelfExpr* t_expr){
	DBG_ENTER("AsTranslator.TransSelfExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<139>");
	return String(L"this",4);
}
String c_AsTranslator::p_TransCastExpr(c_CastExpr* t_expr){
	DBG_ENTER("AsTranslator.TransCastExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<143>");
	c_Type* t_dst=t_expr->m_exprType;
	DBG_LOCAL(t_dst,"dst")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<144>");
	c_Type* t_src=t_expr->m_expr->m_exprType;
	DBG_LOCAL(t_src,"src")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<145>");
	String t_texpr=p_Bra(t_expr->m_expr->p_Trans());
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<147>");
	if((dynamic_cast<c_BoolType*>(t_dst))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<148>");
		if((dynamic_cast<c_BoolType*>(t_src))!=0){
			DBG_BLOCK();
			return t_texpr;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<149>");
		if((dynamic_cast<c_IntType*>(t_src))!=0){
			DBG_BLOCK();
			String t_=p_Bra(t_texpr+String(L"!=0",3));
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<150>");
		if((dynamic_cast<c_FloatType*>(t_src))!=0){
			DBG_BLOCK();
			String t_2=p_Bra(t_texpr+String(L"!=0.0",5));
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<151>");
		if((dynamic_cast<c_StringType*>(t_src))!=0){
			DBG_BLOCK();
			String t_3=p_Bra(t_texpr+String(L".length!=0",10));
			return t_3;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<152>");
		if((dynamic_cast<c_ArrayType*>(t_src))!=0){
			DBG_BLOCK();
			String t_4=p_Bra(t_texpr+String(L".length!=0",10));
			return t_4;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<153>");
		if((dynamic_cast<c_ObjectType*>(t_src))!=0){
			DBG_BLOCK();
			String t_5=p_Bra(t_texpr+String(L"!=null",6));
			return t_5;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<154>");
		if((dynamic_cast<c_IntType*>(t_dst))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<155>");
			if((dynamic_cast<c_BoolType*>(t_src))!=0){
				DBG_BLOCK();
				String t_6=p_Bra(t_texpr+String(L"?1:0",4));
				return t_6;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<156>");
			if((dynamic_cast<c_IntType*>(t_src))!=0){
				DBG_BLOCK();
				return t_texpr;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<157>");
			if((dynamic_cast<c_FloatType*>(t_src))!=0){
				DBG_BLOCK();
				String t_7=p_Bra(t_texpr+String(L"|0",2));
				return t_7;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<158>");
			if((dynamic_cast<c_StringType*>(t_src))!=0){
				DBG_BLOCK();
				String t_8=String(L"parseInt",8)+p_Bra(t_texpr+String(L",10",3));
				return t_8;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<159>");
			if((dynamic_cast<c_FloatType*>(t_dst))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<160>");
				if((dynamic_cast<c_NumericType*>(t_src))!=0){
					DBG_BLOCK();
					return t_texpr;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<161>");
				if((dynamic_cast<c_StringType*>(t_src))!=0){
					DBG_BLOCK();
					String t_9=String(L"parseFloat",10)+t_texpr;
					return t_9;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<162>");
				if((dynamic_cast<c_StringType*>(t_dst))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<163>");
					if((dynamic_cast<c_NumericType*>(t_src))!=0){
						DBG_BLOCK();
						String t_10=String(L"String",6)+t_texpr;
						return t_10;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<164>");
					if((dynamic_cast<c_StringType*>(t_src))!=0){
						DBG_BLOCK();
						return t_texpr;
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<165>");
					if(((dynamic_cast<c_ObjectType*>(t_dst))!=0) && ((dynamic_cast<c_ObjectType*>(t_src))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<166>");
						if((t_src->p_GetClass()->p_ExtendsClass(t_dst->p_GetClass()))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<168>");
							return t_texpr;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<171>");
							String t_11=p_Bra(t_texpr+String(L" as ",4)+p_TransType(t_dst));
							return t_11;
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<174>");
	bb_config_Err(String(L"AS translator can't convert ",28)+t_src->p_ToString()+String(L" to ",4)+t_dst->p_ToString());
	return String();
}
String c_AsTranslator::p_TransUnaryExpr(c_UnaryExpr* t_expr){
	DBG_ENTER("AsTranslator.TransUnaryExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<178>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<179>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,t_pri);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<180>");
	String t_=p_TransUnaryOp(t_expr->m_op)+t_t_expr;
	return t_;
}
String c_AsTranslator::p_TransBinaryExpr(c_BinaryExpr* t_expr){
	DBG_ENTER("AsTranslator.TransBinaryExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<184>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<185>");
	String t_t_lhs=p_TransSubExpr(t_expr->m_lhs,t_pri);
	DBG_LOCAL(t_t_lhs,"t_lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<186>");
	String t_t_rhs=p_TransSubExpr(t_expr->m_rhs,t_pri-1);
	DBG_LOCAL(t_t_rhs,"t_rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<187>");
	String t_t_expr=t_t_lhs+p_TransBinaryOp(t_expr->m_op,t_t_rhs)+t_t_rhs;
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<188>");
	if(t_expr->m_op==String(L"/",1) && ((dynamic_cast<c_IntType*>(t_expr->m_exprType))!=0)){
		DBG_BLOCK();
		t_t_expr=p_Bra(p_Bra(t_t_expr)+String(L"|0",2));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<189>");
	return t_t_expr;
}
String c_AsTranslator::p_TransIndexExpr(c_IndexExpr* t_expr){
	DBG_ENTER("AsTranslator.TransIndexExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<193>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,2);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<194>");
	if((dynamic_cast<c_StringType*>(t_expr->m_expr->m_exprType))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<195>");
		String t_t_index=t_expr->m_index->p_Trans();
		DBG_LOCAL(t_t_index,"t_index")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<196>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			String t_=String(L"dbg_charCodeAt(",15)+t_t_expr+String(L",",1)+t_t_index+String(L")",1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<197>");
		String t_2=t_t_expr+String(L".charCodeAt(",12)+t_t_index+String(L")",1);
		return t_2;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<198>");
		if(bb_config_ENV_CONFIG==String(L"debug",5)){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<199>");
			String t_t_index2=t_expr->m_index->p_Trans();
			DBG_LOCAL(t_t_index2,"t_index")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<200>");
			String t_3=String(L"dbg_array(",10)+t_t_expr+String(L",",1)+t_t_index2+String(L")[dbg_index]",12);
			return t_3;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<202>");
			String t_t_index3=t_expr->m_index->p_Trans();
			DBG_LOCAL(t_t_index3,"t_index")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<203>");
			String t_4=t_t_expr+String(L"[",1)+t_t_index3+String(L"]",1);
			return t_4;
		}
	}
}
String c_AsTranslator::p_TransSliceExpr(c_SliceExpr* t_expr){
	DBG_ENTER("AsTranslator.TransSliceExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<208>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,2);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<209>");
	String t_t_args=String(L"0",1);
	DBG_LOCAL(t_t_args,"t_args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<210>");
	if((t_expr->m_from)!=0){
		DBG_BLOCK();
		t_t_args=t_expr->m_from->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<211>");
	if((t_expr->m_term)!=0){
		DBG_BLOCK();
		t_t_args=t_t_args+(String(L",",1)+t_expr->m_term->p_Trans());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<212>");
	String t_=t_t_expr+String(L".slice(",7)+t_t_args+String(L")",1);
	return t_;
}
String c_AsTranslator::p_TransArrayExpr(c_ArrayExpr* t_expr){
	DBG_ENTER("AsTranslator.TransArrayExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<216>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<217>");
	Array<c_Expr* > t_=t_expr->m_exprs;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_elem=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_elem,"elem")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<218>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<219>");
		t_t=t_t+t_elem->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<221>");
	String t_3=String(L"[",1)+t_t+String(L"]",1);
	return t_3;
}
String c_AsTranslator::p_TransIntrinsicExpr(c_Decl* t_decl,c_Expr* t_expr,Array<c_Expr* > t_args){
	DBG_ENTER("AsTranslator.TransIntrinsicExpr")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<226>");
	String t_texpr=String();
	String t_arg0=String();
	String t_arg1=String();
	String t_arg2=String();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_LOCAL(t_arg0,"arg0")
	DBG_LOCAL(t_arg1,"arg1")
	DBG_LOCAL(t_arg2,"arg2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<228>");
	if((t_expr)!=0){
		DBG_BLOCK();
		t_texpr=p_TransSubExpr(t_expr,2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<230>");
	if(t_args.Length()>0 && ((t_args.At(0))!=0)){
		DBG_BLOCK();
		t_arg0=t_args.At(0)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<231>");
	if(t_args.Length()>1 && ((t_args.At(1))!=0)){
		DBG_BLOCK();
		t_arg1=t_args.At(1)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<232>");
	if(t_args.Length()>2 && ((t_args.At(2))!=0)){
		DBG_BLOCK();
		t_arg2=t_args.At(2)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<234>");
	String t_id=t_decl->m_munged.Slice(1);
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<236>");
	String t_1=t_id;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<239>");
	if(t_1==String(L"print",5)){
		DBG_BLOCK();
		String t_=String(L"print",5)+p_Bra(t_arg0);
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<240>");
		if(t_1==String(L"error",5)){
			DBG_BLOCK();
			String t_2=String(L"error",5)+p_Bra(t_arg0);
			return t_2;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<241>");
			if(t_1==String(L"debuglog",8)){
				DBG_BLOCK();
				String t_3=String(L"debugLog",8)+p_Bra(t_arg0);
				return t_3;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<242>");
				if(t_1==String(L"debugstop",9)){
					DBG_BLOCK();
					return String(L"debugStop()",11);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<245>");
					if(t_1==String(L"length",6)){
						DBG_BLOCK();
						String t_4=t_texpr+String(L".length",7);
						return t_4;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<248>");
						if(t_1==String(L"resize",6)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<249>");
							c_Type* t_ty=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
							DBG_LOCAL(t_ty,"ty")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<250>");
							if((dynamic_cast<c_BoolType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_5=String(L"resize_bool_array",17)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_5;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<251>");
							if((dynamic_cast<c_NumericType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_6=String(L"resize_number_array",19)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_6;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<252>");
							if((dynamic_cast<c_StringType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_7=String(L"resize_string_array",19)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_7;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<253>");
							if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_8=String(L"resize_array_array",18)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_8;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<254>");
							if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_9=String(L"resize_object_array",19)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_9;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<255>");
							bb_config_InternalErr(String(L"Internal error",14));
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<258>");
							if(t_1==String(L"compare",7)){
								DBG_BLOCK();
								String t_10=String(L"string_compare",14)+p_Bra(t_texpr+String(L",",1)+t_arg0);
								return t_10;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<259>");
								if(t_1==String(L"find",4)){
									DBG_BLOCK();
									String t_11=t_texpr+String(L".indexOf",8)+p_Bra(t_arg0+String(L",",1)+t_arg1);
									return t_11;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<260>");
									if(t_1==String(L"findlast",8)){
										DBG_BLOCK();
										String t_12=t_texpr+String(L".lastIndexOf",12)+p_Bra(t_arg0);
										return t_12;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<261>");
										if(t_1==String(L"findlast2",9)){
											DBG_BLOCK();
											String t_13=t_texpr+String(L".lastIndexOf",12)+p_Bra(t_arg0+String(L",",1)+t_arg1);
											return t_13;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<262>");
											if(t_1==String(L"trim",4)){
												DBG_BLOCK();
												String t_14=String(L"string_trim",11)+p_Bra(t_texpr);
												return t_14;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<263>");
												if(t_1==String(L"join",4)){
													DBG_BLOCK();
													String t_15=t_arg0+String(L".join",5)+p_Bra(t_texpr);
													return t_15;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<264>");
													if(t_1==String(L"split",5)){
														DBG_BLOCK();
														String t_16=t_texpr+String(L".split",6)+p_Bra(t_arg0);
														return t_16;
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<265>");
														if(t_1==String(L"replace",7)){
															DBG_BLOCK();
															String t_17=String(L"string_replace",14)+p_Bra(t_texpr+String(L",",1)+t_arg0+String(L",",1)+t_arg1);
															return t_17;
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<266>");
															if(t_1==String(L"tolower",7)){
																DBG_BLOCK();
																String t_18=t_texpr+String(L".toLowerCase()",14);
																return t_18;
															}else{
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<267>");
																if(t_1==String(L"toupper",7)){
																	DBG_BLOCK();
																	String t_19=t_texpr+String(L".toUpperCase()",14);
																	return t_19;
																}else{
																	DBG_BLOCK();
																	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<268>");
																	if(t_1==String(L"contains",8)){
																		DBG_BLOCK();
																		String t_20=p_Bra(t_texpr+String(L".indexOf",8)+p_Bra(t_arg0)+String(L"!=-1",4));
																		return t_20;
																	}else{
																		DBG_BLOCK();
																		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<269>");
																		if(t_1==String(L"startswith",10)){
																			DBG_BLOCK();
																			String t_21=String(L"string_startswith",17)+p_Bra(t_texpr+String(L",",1)+t_arg0);
																			return t_21;
																		}else{
																			DBG_BLOCK();
																			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<270>");
																			if(t_1==String(L"endswith",8)){
																				DBG_BLOCK();
																				String t_22=String(L"string_endswith",15)+p_Bra(t_texpr+String(L",",1)+t_arg0);
																				return t_22;
																			}else{
																				DBG_BLOCK();
																				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<271>");
																				if(t_1==String(L"tochars",7)){
																					DBG_BLOCK();
																					String t_23=String(L"string_tochars",14)+p_Bra(t_texpr);
																					return t_23;
																				}else{
																					DBG_BLOCK();
																					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<274>");
																					if(t_1==String(L"fromchar",8)){
																						DBG_BLOCK();
																						String t_24=String(L"String.fromCharCode",19)+p_Bra(t_arg0);
																						return t_24;
																					}else{
																						DBG_BLOCK();
																						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<275>");
																						if(t_1==String(L"fromchars",9)){
																							DBG_BLOCK();
																							String t_25=String(L"string_fromchars",16)+p_Bra(t_arg0);
																							return t_25;
																						}else{
																							DBG_BLOCK();
																							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<278>");
																							if(t_1==String(L"sin",3) || t_1==String(L"cos",3) || t_1==String(L"tan",3)){
																								DBG_BLOCK();
																								String t_26=String(L"Math.",5)+t_id+p_Bra(p_Bra(t_arg0)+String(L"*D2R",4));
																								return t_26;
																							}else{
																								DBG_BLOCK();
																								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<279>");
																								if(t_1==String(L"asin",4) || t_1==String(L"acos",4) || t_1==String(L"atan",4)){
																									DBG_BLOCK();
																									String t_27=p_Bra(String(L"Math.",5)+t_id+p_Bra(t_arg0)+String(L"*R2D",4));
																									return t_27;
																								}else{
																									DBG_BLOCK();
																									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<280>");
																									if(t_1==String(L"atan2",5)){
																										DBG_BLOCK();
																										String t_28=p_Bra(String(L"Math.",5)+t_id+p_Bra(t_arg0+String(L",",1)+t_arg1)+String(L"*R2D",4));
																										return t_28;
																									}else{
																										DBG_BLOCK();
																										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<283>");
																										if(t_1==String(L"sinr",4) || t_1==String(L"cosr",4) || t_1==String(L"tanr",4)){
																											DBG_BLOCK();
																											String t_29=String(L"Math.",5)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																											return t_29;
																										}else{
																											DBG_BLOCK();
																											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<284>");
																											if(t_1==String(L"asinr",5) || t_1==String(L"acosr",5) || t_1==String(L"atanr",5)){
																												DBG_BLOCK();
																												String t_30=String(L"Math.",5)+t_id.Slice(0,-1)+p_Bra(t_arg0);
																												return t_30;
																											}else{
																												DBG_BLOCK();
																												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<285>");
																												if(t_1==String(L"atan2r",6)){
																													DBG_BLOCK();
																													String t_31=String(L"Math.",5)+t_id.Slice(0,-1)+p_Bra(t_arg0+String(L",",1)+t_arg1);
																													return t_31;
																												}else{
																													DBG_BLOCK();
																													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<288>");
																													if(t_1==String(L"sqrt",4) || t_1==String(L"floor",5) || t_1==String(L"ceil",4) || t_1==String(L"log",3) || t_1==String(L"exp",3)){
																														DBG_BLOCK();
																														String t_32=String(L"Math.",5)+t_id+p_Bra(t_arg0);
																														return t_32;
																													}else{
																														DBG_BLOCK();
																														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<289>");
																														if(t_1==String(L"pow",3)){
																															DBG_BLOCK();
																															String t_33=String(L"Math.",5)+t_id+p_Bra(t_arg0+String(L",",1)+t_arg1);
																															return t_33;
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<293>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_AsTranslator::p_TransTryStmt(c_TryStmt* t_stmt){
	DBG_ENTER("AsTranslator.TransTryStmt")
	c_AsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<299>");
	p_Emit(String(L"try{",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<300>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<301>");
	Array<c_CatchStmt* > t_=t_stmt->m_catches;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_CatchStmt* t_c=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_c,"c")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<302>");
		p_MungDecl(t_c->m_init);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<303>");
		p_Emit(String(L"}catch(",7)+t_c->m_init->m_munged+String(L":",1)+p_TransType(t_c->m_init->m_type)+String(L"){",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<304>");
		int t_unr2=p_EmitBlock(t_c->m_block,true);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/astranslator.monkey<306>");
	p_Emit(String(L"}",1));
	return String();
}
void c_AsTranslator::mark(){
	c_CTranslator::mark();
}
String c_AsTranslator::debug(){
	String t="(AsTranslator)\n";
	t=c_CTranslator::debug()+t;
	return t;
}
c_CsTranslator::c_CsTranslator(){
}
c_CsTranslator* c_CsTranslator::m_new(){
	DBG_ENTER("CsTranslator.new")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<9>");
	c_CTranslator::m_new();
	return this;
}
String c_CsTranslator::p_TransType(c_Type* t_ty){
	DBG_ENTER("CsTranslator.TransType")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<12>");
	if((dynamic_cast<c_VoidType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"void",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<13>");
	if((dynamic_cast<c_BoolType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"bool",4);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<14>");
	if((dynamic_cast<c_IntType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"int",3);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<15>");
	if((dynamic_cast<c_FloatType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"float",5);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<16>");
	if((dynamic_cast<c_StringType*>(t_ty))!=0){
		DBG_BLOCK();
		return String(L"String",6);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<17>");
	if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_=p_TransType(dynamic_cast<c_ArrayType*>(t_ty)->m_elemType)+String(L"[]",2);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<18>");
	if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
		DBG_BLOCK();
		String t_2=t_ty->p_GetClass()->m_munged;
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<19>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CsTranslator::p_TransValue(c_Type* t_ty,String t_value){
	DBG_ENTER("CsTranslator.TransValue")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_ty,"ty")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<23>");
	if((t_value).Length()!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<24>");
		if(((dynamic_cast<c_IntType*>(t_ty))!=0) && t_value.StartsWith(String(L"$",1))){
			DBG_BLOCK();
			String t_=String(L"0x",2)+t_value.Slice(1);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<25>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"true",4);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<26>");
		if((dynamic_cast<c_IntType*>(t_ty))!=0){
			DBG_BLOCK();
			return t_value;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<27>");
		if((dynamic_cast<c_FloatType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_2=t_value+String(L"f",1);
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<28>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			String t_3=p_Enquote(t_value);
			return t_3;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<30>");
		if((dynamic_cast<c_BoolType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"false",5);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<31>");
		if((dynamic_cast<c_NumericType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"0",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<32>");
		if((dynamic_cast<c_StringType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"\"\"",2);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<33>");
		if((dynamic_cast<c_ArrayType*>(t_ty))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<34>");
			c_Type* t_elemTy=dynamic_cast<c_ArrayType*>(t_ty)->m_elemType;
			DBG_LOCAL(t_elemTy,"elemTy")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<35>");
			String t_t=String(L"[0]",3);
			DBG_LOCAL(t_t,"t")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<36>");
			while((dynamic_cast<c_ArrayType*>(t_elemTy))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<37>");
				t_elemTy=dynamic_cast<c_ArrayType*>(t_elemTy)->m_elemType;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<38>");
				t_t=t_t+String(L"[]",2);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<40>");
			String t_4=String(L"new ",4)+p_TransType(t_elemTy)+t_t;
			return t_4;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<42>");
		if((dynamic_cast<c_ObjectType*>(t_ty))!=0){
			DBG_BLOCK();
			return String(L"null",4);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<44>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CsTranslator::p_TransLocalDecl(String t_munged,c_Expr* t_init){
	DBG_ENTER("CsTranslator.TransLocalDecl")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_munged,"munged")
	DBG_LOCAL(t_init,"init")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<65>");
	String t_=p_TransType(t_init->m_exprType)+String(L" ",1)+t_munged+String(L"=",1)+t_init->p_Trans();
	return t_;
}
int c_CsTranslator::p_EmitEnter(c_FuncDecl* t_func){
	DBG_ENTER("CsTranslator.EmitEnter")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_func,"func")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<69>");
	p_Emit(String(L"bb_std_lang.pushErr();",22));
	return 0;
}
int c_CsTranslator::p_EmitSetErr(String t_info){
	DBG_ENTER("CsTranslator.EmitSetErr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_info,"info")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<73>");
	p_Emit(String(L"bb_std_lang.errInfo=\"",21)+t_info.Replace(String(L"\\",1),String(L"/",1))+String(L"\";",2));
	return 0;
}
int c_CsTranslator::p_EmitLeave(){
	DBG_ENTER("CsTranslator.EmitLeave")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<77>");
	p_Emit(String(L"bb_std_lang.popErr();",21));
	return 0;
}
String c_CsTranslator::p_TransStatic(c_Decl* t_decl){
	DBG_ENTER("CsTranslator.TransStatic")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<83>");
	if(((t_decl->p_IsExtern())!=0) && ((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<84>");
		return t_decl->m_munged;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<85>");
		if(((bb_decl__env)!=0) && ((t_decl->m_scope)!=0) && t_decl->m_scope==(bb_decl__env->p_ClassScope())){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<86>");
			return t_decl->m_munged;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<87>");
			if((dynamic_cast<c_ClassDecl*>(t_decl->m_scope))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<88>");
				String t_=t_decl->m_scope->m_munged+String(L".",1)+t_decl->m_munged;
				return t_;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<89>");
				if((dynamic_cast<c_ModuleDecl*>(t_decl->m_scope))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<90>");
					String t_2=t_decl->m_scope->m_munged+String(L".",1)+t_decl->m_munged;
					return t_2;
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<92>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CsTranslator::p_TransGlobal(c_GlobalDecl* t_decl){
	DBG_ENTER("CsTranslator.TransGlobal")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<96>");
	String t_=p_TransStatic(t_decl);
	return t_;
}
String c_CsTranslator::p_TransField(c_FieldDecl* t_decl,c_Expr* t_lhs){
	DBG_ENTER("CsTranslator.TransField")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<100>");
	if((t_lhs)!=0){
		DBG_BLOCK();
		String t_=p_TransSubExpr(t_lhs,2)+String(L".",1)+t_decl->m_munged;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<101>");
	return t_decl->m_munged;
}
int c_CsTranslator::p_EmitFuncDecl(c_FuncDecl* t_decl){
	DBG_ENTER("CsTranslator.EmitFuncDecl")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<334>");
	p_BeginLocalScope();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<336>");
	String t_args=String();
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<337>");
	Array<c_ArgDecl* > t_=t_decl->m_argDecls;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ArgDecl* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<338>");
		p_MungDecl(t_arg);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<339>");
		if((t_args).Length()!=0){
			DBG_BLOCK();
			t_args=t_args+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<340>");
		t_args=t_args+(p_TransType(t_arg->m_type)+String(L" ",1)+t_arg->m_munged);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<343>");
	String t_t=p_TransType(t_decl->m_retType)+String(L" ",1)+t_decl->m_munged+p_Bra(t_args);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<345>");
	if(((t_decl->p_ClassScope())!=0) && ((t_decl->p_ClassScope()->p_IsInterface())!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<346>");
		p_Emit(t_t+String(L";",1));
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<347>");
		if((t_decl->p_IsAbstract())!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<348>");
			if((t_decl->m_overrides)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<349>");
				p_Emit(String(L"public abstract override ",25)+t_t+String(L";",1));
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<351>");
				p_Emit(String(L"public abstract ",16)+t_t+String(L";",1));
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<354>");
			String t_q=String(L"public ",7);
			DBG_LOCAL(t_q,"q")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<355>");
			if(t_decl->p_IsStatic()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<356>");
				t_q=t_q+String(L"static ",7);
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<357>");
				if((t_decl->m_overrides)!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<358>");
					t_q=t_q+String(L"override ",9);
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<359>");
					if(!t_decl->p_IsVirtual()){
						DBG_BLOCK();
						t_q=t_q+String(L"sealed ",7);
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<360>");
					if(t_decl->p_IsVirtual()){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<361>");
						t_q=t_q+String(L"virtual ",8);
					}
				}
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<364>");
			p_Emit(t_q+t_t+String(L"{",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<365>");
			p_EmitBlock((t_decl),true);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<366>");
			p_Emit(String(L"}",1));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<369>");
	p_EndLocalScope();
	return 0;
}
String c_CsTranslator::p_TransDecl(c_Decl* t_decl){
	DBG_ENTER("CsTranslator.TransDecl")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<48>");
	c_ValDecl* t_vdecl=dynamic_cast<c_ValDecl*>(t_decl);
	DBG_LOCAL(t_vdecl,"vdecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<49>");
	if((t_vdecl)!=0){
		DBG_BLOCK();
		String t_=p_TransType(t_vdecl->m_type)+String(L" ",1)+t_decl->m_munged;
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<50>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
int c_CsTranslator::p_EmitClassDecl(c_ClassDecl* t_classDecl){
	DBG_ENTER("CsTranslator.EmitClassDecl")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_classDecl,"classDecl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<374>");
	String t_classid=t_classDecl->m_munged;
	DBG_LOCAL(t_classid,"classid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<376>");
	if((t_classDecl->p_IsInterface())!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<378>");
		String t_bases=String();
		DBG_LOCAL(t_bases,"bases")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<379>");
		Array<c_ClassDecl* > t_=t_classDecl->m_implments;
		int t_2=0;
		while(t_2<t_.Length()){
			DBG_BLOCK();
			c_ClassDecl* t_iface=t_.At(t_2);
			t_2=t_2+1;
			DBG_LOCAL(t_iface,"iface")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<380>");
			if((t_bases).Length()!=0){
				DBG_BLOCK();
				t_bases=t_bases+String(L",",1);
			}else{
				DBG_BLOCK();
				t_bases=String(L" : ",3);
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<381>");
			t_bases=t_bases+t_iface->m_munged;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<384>");
		p_Emit(String(L"interface ",10)+t_classid+t_bases+String(L"{",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<385>");
		c_Enumerator2* t_3=t_classDecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl=t_3->p_NextObject();
			DBG_LOCAL(t_decl,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<386>");
			c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl);
			DBG_LOCAL(t_fdecl,"fdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<387>");
			if(!((t_fdecl)!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<388>");
			p_EmitFuncDecl(t_fdecl);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<390>");
		p_Emit(String(L"}",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<391>");
		return 0;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<394>");
	String t_superid=t_classDecl->m_superClass->m_munged;
	DBG_LOCAL(t_superid,"superid")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<396>");
	String t_bases2=String(L" : ",3)+t_superid;
	DBG_LOCAL(t_bases2,"bases")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<398>");
	Array<c_ClassDecl* > t_4=t_classDecl->m_implments;
	int t_5=0;
	while(t_5<t_4.Length()){
		DBG_BLOCK();
		c_ClassDecl* t_iface2=t_4.At(t_5);
		t_5=t_5+1;
		DBG_LOCAL(t_iface2,"iface")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<399>");
		t_bases2=t_bases2+(String(L",",1)+t_iface2->m_munged);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<402>");
	String t_q=String();
	DBG_LOCAL(t_q,"q")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<403>");
	if((t_classDecl->p_IsAbstract())!=0){
		DBG_BLOCK();
		t_q=t_q+String(L"abstract ",9);
	}else{
		DBG_BLOCK();
		if((t_classDecl->p_IsFinal())!=0){
			DBG_BLOCK();
			t_q=t_q+String(L"sealed ",7);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<405>");
	p_Emit(t_q+String(L"class ",6)+t_classid+t_bases2+String(L"{",1));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<407>");
	c_Enumerator2* t_6=t_classDecl->p_Semanted()->p_ObjectEnumerator();
	while(t_6->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_6->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<408>");
		c_FieldDecl* t_tdecl=dynamic_cast<c_FieldDecl*>(t_decl2);
		DBG_LOCAL(t_tdecl,"tdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<409>");
		if((t_tdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<410>");
			p_Emit(String(L"public ",7)+p_TransDecl(t_tdecl)+String(L"=",1)+t_tdecl->m_init->p_Trans()+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<411>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<414>");
		c_FuncDecl* t_fdecl2=dynamic_cast<c_FuncDecl*>(t_decl2);
		DBG_LOCAL(t_fdecl2,"fdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<415>");
		if((t_fdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<416>");
			p_EmitFuncDecl(t_fdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<417>");
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<420>");
		c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl2);
		DBG_LOCAL(t_gdecl,"gdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<421>");
		if((t_gdecl)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<422>");
			p_Emit(String(L"public static ",14)+p_TransDecl(t_gdecl)+String(L";",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<423>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<427>");
	p_Emit(String(L"}",1));
	return 0;
}
String c_CsTranslator::p_TransApp(c_AppDecl* t_app){
	DBG_ENTER("CsTranslator.TransApp")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_app,"app")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<432>");
	t_app->m_mainModule->m_munged=String(L"bb_",3);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<433>");
	t_app->m_mainFunc->m_munged=String(L"bbMain",6);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<435>");
	c_ValueEnumerator* t_=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_decl=t_->p_NextObject();
		DBG_LOCAL(t_decl,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<436>");
		p_MungDecl(t_decl);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<439>");
	c_Enumerator2* t_2=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_2->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl2=t_2->p_NextObject();
		DBG_LOCAL(t_decl2,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<441>");
		p_MungDecl(t_decl2);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<443>");
		c_ClassDecl* t_cdecl=dynamic_cast<c_ClassDecl*>(t_decl2);
		DBG_LOCAL(t_cdecl,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<444>");
		if(!((t_cdecl)!=0)){
			DBG_BLOCK();
			continue;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<446>");
		c_Enumerator2* t_3=t_cdecl->p_Semanted()->p_ObjectEnumerator();
		while(t_3->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl3=t_3->p_NextObject();
			DBG_LOCAL(t_decl3,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<448>");
			if(((dynamic_cast<c_FuncDecl*>(t_decl3))!=0) && dynamic_cast<c_FuncDecl*>(t_decl3)->p_IsCtor()){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<449>");
				t_decl3->m_ident=t_cdecl->m_ident+String(L"_",1)+t_decl3->m_ident;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<452>");
			p_MungDecl(t_decl3);
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<457>");
	c_Enumerator2* t_4=t_app->p_Semanted()->p_ObjectEnumerator();
	while(t_4->p_HasNext()){
		DBG_BLOCK();
		c_Decl* t_decl4=t_4->p_NextObject();
		DBG_LOCAL(t_decl4,"decl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<459>");
		c_ClassDecl* t_cdecl2=dynamic_cast<c_ClassDecl*>(t_decl4);
		DBG_LOCAL(t_cdecl2,"cdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<460>");
		if((t_cdecl2)!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<461>");
			p_EmitClassDecl(t_cdecl2);
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<462>");
			continue;
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<467>");
	c_ValueEnumerator* t_5=t_app->m_imported->p_Values()->p_ObjectEnumerator();
	while(t_5->p_HasNext()){
		DBG_BLOCK();
		c_ModuleDecl* t_mdecl=t_5->p_NextObject();
		DBG_LOCAL(t_mdecl,"mdecl")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<469>");
		p_Emit(String(L"class ",6)+t_mdecl->m_munged+String(L"{",1));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<471>");
		c_Enumerator2* t_6=t_mdecl->p_Semanted()->p_ObjectEnumerator();
		while(t_6->p_HasNext()){
			DBG_BLOCK();
			c_Decl* t_decl5=t_6->p_NextObject();
			DBG_LOCAL(t_decl5,"decl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<472>");
			if(((t_decl5->p_IsExtern())!=0) || ((t_decl5->m_scope->p_ClassScope())!=0)){
				DBG_BLOCK();
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<474>");
			c_GlobalDecl* t_gdecl=dynamic_cast<c_GlobalDecl*>(t_decl5);
			DBG_LOCAL(t_gdecl,"gdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<475>");
			if((t_gdecl)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<476>");
				p_Emit(String(L"public static ",14)+p_TransDecl(t_gdecl)+String(L";",1));
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<477>");
				continue;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<480>");
			c_FuncDecl* t_fdecl=dynamic_cast<c_FuncDecl*>(t_decl5);
			DBG_LOCAL(t_fdecl,"fdecl")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<481>");
			if((t_fdecl)!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<482>");
				p_EmitFuncDecl(t_fdecl);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<483>");
				continue;
			}
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<487>");
		if(t_mdecl==t_app->m_mainModule){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<488>");
			p_BeginLocalScope();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<489>");
			p_Emit(String(L"public static int bbInit(){",27));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<490>");
			c_Enumerator7* t_7=t_app->m_semantedGlobals->p_ObjectEnumerator();
			while(t_7->p_HasNext()){
				DBG_BLOCK();
				c_GlobalDecl* t_decl6=t_7->p_NextObject();
				DBG_LOCAL(t_decl6,"decl")
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<491>");
				p_Emit(p_TransGlobal(t_decl6)+String(L"=",1)+t_decl6->m_init->p_Trans()+String(L";",1));
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<493>");
			p_Emit(String(L"return 0;",9));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<494>");
			p_Emit(String(L"}",1));
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<495>");
			p_EndLocalScope();
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<498>");
		p_Emit(String(L"}",1));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<501>");
	String t_8=p_JoinLines();
	return t_8;
}
String c_CsTranslator::p_TransArgs2(Array<c_Expr* > t_args){
	DBG_ENTER("CsTranslator.TransArgs")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<54>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<55>");
	Array<c_Expr* > t_=t_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<56>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<57>");
		t_t=t_t+t_arg->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<59>");
	String t_3=p_Bra(t_t);
	return t_3;
}
String c_CsTranslator::p_TransFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args,c_Expr* t_lhs){
	DBG_ENTER("CsTranslator.TransFunc")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<105>");
	if(t_decl->p_IsMethod()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<106>");
		if((t_lhs)!=0){
			DBG_BLOCK();
			String t_=p_TransSubExpr(t_lhs,2)+String(L".",1)+t_decl->m_munged+p_TransArgs2(t_args);
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<107>");
		String t_2=t_decl->m_munged+p_TransArgs2(t_args);
		return t_2;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<109>");
	String t_3=p_TransStatic(t_decl)+p_TransArgs2(t_args);
	return t_3;
}
String c_CsTranslator::p_TransSuperFunc(c_FuncDecl* t_decl,Array<c_Expr* > t_args){
	DBG_ENTER("CsTranslator.TransSuperFunc")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<113>");
	String t_=String(L"base.",5)+t_decl->m_munged+p_TransArgs2(t_args);
	return t_;
}
String c_CsTranslator::p_TransConstExpr(c_ConstExpr* t_expr){
	DBG_ENTER("CsTranslator.TransConstExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<119>");
	String t_=p_TransValue(t_expr->m_exprType,t_expr->m_value);
	return t_;
}
String c_CsTranslator::p_TransNewObjectExpr(c_NewObjectExpr* t_expr){
	DBG_ENTER("CsTranslator.TransNewObjectExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<123>");
	String t_t=String(L"(new ",5)+t_expr->m_classDecl->m_munged+String(L"())",3);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<124>");
	if((t_expr->m_ctor)!=0){
		DBG_BLOCK();
		t_t=t_t+(String(L".",1)+t_expr->m_ctor->m_munged+p_TransArgs2(t_expr->m_args));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<125>");
	return t_t;
}
String c_CsTranslator::p_TransNewArrayExpr(c_NewArrayExpr* t_expr){
	DBG_ENTER("CsTranslator.TransNewArrayExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<129>");
	String t_texpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<130>");
	c_Type* t_elemTy=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
	DBG_LOCAL(t_elemTy,"elemTy")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<132>");
	if((dynamic_cast<c_StringType*>(t_elemTy))!=0){
		DBG_BLOCK();
		String t_=String(L"bb_std_lang.stringArray",23)+p_Bra(t_texpr);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<134>");
	String t_t=String(L"[",1)+t_texpr+String(L"]",1);
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<135>");
	while((dynamic_cast<c_ArrayType*>(t_elemTy))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<136>");
		t_elemTy=dynamic_cast<c_ArrayType*>(t_elemTy)->m_elemType;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<137>");
		t_t=t_t+String(L"[]",2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<140>");
	String t_2=String(L"new ",4)+p_TransType(t_elemTy)+t_t;
	return t_2;
}
String c_CsTranslator::p_TransSelfExpr(c_SelfExpr* t_expr){
	DBG_ENTER("CsTranslator.TransSelfExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<144>");
	return String(L"this",4);
}
String c_CsTranslator::p_TransCastExpr(c_CastExpr* t_expr){
	DBG_ENTER("CsTranslator.TransCastExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<149>");
	c_Type* t_dst=t_expr->m_exprType;
	DBG_LOCAL(t_dst,"dst")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<150>");
	c_Type* t_src=t_expr->m_expr->m_exprType;
	DBG_LOCAL(t_src,"src")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<151>");
	String t_uexpr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_uexpr,"uexpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<152>");
	String t_texpr=p_Bra(t_uexpr);
	DBG_LOCAL(t_texpr,"texpr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<154>");
	if((dynamic_cast<c_BoolType*>(t_dst))!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<155>");
		if((dynamic_cast<c_BoolType*>(t_src))!=0){
			DBG_BLOCK();
			return t_texpr;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<156>");
		if((dynamic_cast<c_IntType*>(t_src))!=0){
			DBG_BLOCK();
			String t_=p_Bra(t_texpr+String(L"!=0",3));
			return t_;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<157>");
		if((dynamic_cast<c_FloatType*>(t_src))!=0){
			DBG_BLOCK();
			String t_2=p_Bra(t_texpr+String(L"!=0.0f",6));
			return t_2;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<158>");
		if((dynamic_cast<c_StringType*>(t_src))!=0){
			DBG_BLOCK();
			String t_3=p_Bra(t_texpr+String(L".Length!=0",10));
			return t_3;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<159>");
		if((dynamic_cast<c_ArrayType*>(t_src))!=0){
			DBG_BLOCK();
			String t_4=p_Bra(t_texpr+String(L".Length!=0",10));
			return t_4;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<160>");
		if((dynamic_cast<c_ObjectType*>(t_src))!=0){
			DBG_BLOCK();
			String t_5=p_Bra(t_texpr+String(L"!=null",6));
			return t_5;
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<161>");
		if((dynamic_cast<c_IntType*>(t_dst))!=0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<162>");
			if((dynamic_cast<c_BoolType*>(t_src))!=0){
				DBG_BLOCK();
				String t_6=p_Bra(t_texpr+String(L"?1:0",4));
				return t_6;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<163>");
			if((dynamic_cast<c_IntType*>(t_src))!=0){
				DBG_BLOCK();
				return t_texpr;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<164>");
			if((dynamic_cast<c_FloatType*>(t_src))!=0){
				DBG_BLOCK();
				String t_7=String(L"(int)",5)+t_texpr;
				return t_7;
			}
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<165>");
			if((dynamic_cast<c_StringType*>(t_src))!=0){
				DBG_BLOCK();
				String t_8=String(L"int.Parse",9)+t_texpr;
				return t_8;
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<166>");
			if((dynamic_cast<c_FloatType*>(t_dst))!=0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<167>");
				if((dynamic_cast<c_IntType*>(t_src))!=0){
					DBG_BLOCK();
					String t_9=String(L"(float)",7)+t_texpr;
					return t_9;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<168>");
				if((dynamic_cast<c_FloatType*>(t_src))!=0){
					DBG_BLOCK();
					return t_texpr;
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<169>");
				if((dynamic_cast<c_StringType*>(t_src))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<170>");
					if(bb_config_ENV_TARGET==String(L"xna",3)){
						DBG_BLOCK();
						String t_10=String(L"float.Parse",11)+p_Bra(t_uexpr+String(L",CultureInfo.InvariantCulture",29));
						return t_10;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<171>");
					String t_11=String(L"float.Parse",11)+p_Bra(t_uexpr);
					return t_11;
				}
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<173>");
				if((dynamic_cast<c_StringType*>(t_dst))!=0){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<174>");
					if((dynamic_cast<c_IntType*>(t_src))!=0){
						DBG_BLOCK();
						String t_12=t_texpr+String(L".ToString()",11);
						return t_12;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<175>");
					if((dynamic_cast<c_FloatType*>(t_src))!=0){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<176>");
						if(bb_config_ENV_TARGET==String(L"xna",3)){
							DBG_BLOCK();
							String t_13=t_texpr+String(L".ToString(CultureInfo.InvariantCulture)",39);
							return t_13;
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<177>");
						String t_14=t_texpr+String(L".ToString()",11);
						return t_14;
					}
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<179>");
					if((dynamic_cast<c_StringType*>(t_src))!=0){
						DBG_BLOCK();
						return t_texpr;
					}
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<180>");
					if(((dynamic_cast<c_ObjectType*>(t_dst))!=0) && ((dynamic_cast<c_ObjectType*>(t_src))!=0)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<181>");
						if((t_src->p_GetClass()->p_ExtendsClass(t_dst->p_GetClass()))!=0){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<183>");
							return t_texpr;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<186>");
							String t_15=String(L"(",1)+t_texpr+String(L" as ",4)+p_TransType(t_dst)+String(L")",1);
							return t_15;
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<193>");
	bb_config_Err(String(L"CS translator can't convert ",28)+t_src->p_ToString()+String(L" to ",4)+t_dst->p_ToString());
	return String();
}
String c_CsTranslator::p_TransUnaryExpr(c_UnaryExpr* t_expr){
	DBG_ENTER("CsTranslator.TransUnaryExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<197>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<198>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,t_pri);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<199>");
	String t_=p_TransUnaryOp(t_expr->m_op)+t_t_expr;
	return t_;
}
String c_CsTranslator::p_TransBinaryExpr(c_BinaryExpr* t_expr){
	DBG_ENTER("CsTranslator.TransBinaryExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<203>");
	if(((dynamic_cast<c_BinaryCompareExpr*>(t_expr))!=0) && ((dynamic_cast<c_StringType*>(t_expr->m_lhs->m_exprType))!=0) && ((dynamic_cast<c_StringType*>(t_expr->m_rhs->m_exprType))!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<204>");
		String t_=p_Bra(p_TransSubExpr(t_expr->m_lhs,2)+String(L".CompareTo(",11)+t_expr->m_rhs->p_Trans()+String(L")",1)+p_TransBinaryOp(t_expr->m_op,String())+String(L"0",1));
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<206>");
	int t_pri=p_ExprPri(t_expr);
	DBG_LOCAL(t_pri,"pri")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<207>");
	String t_t_lhs=p_TransSubExpr(t_expr->m_lhs,t_pri);
	DBG_LOCAL(t_t_lhs,"t_lhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<208>");
	String t_t_rhs=p_TransSubExpr(t_expr->m_rhs,t_pri-1);
	DBG_LOCAL(t_t_rhs,"t_rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<209>");
	String t_2=t_t_lhs+p_TransBinaryOp(t_expr->m_op,t_t_rhs)+t_t_rhs;
	return t_2;
}
String c_CsTranslator::p_TransIndexExpr(c_IndexExpr* t_expr){
	DBG_ENTER("CsTranslator.TransIndexExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<214>");
	String t_t_expr=p_TransSubExpr(t_expr->m_expr,2);
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<215>");
	String t_t_index=t_expr->m_index->p_Trans();
	DBG_LOCAL(t_t_index,"t_index")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<216>");
	if((dynamic_cast<c_StringType*>(t_expr->m_expr->m_exprType))!=0){
		DBG_BLOCK();
		String t_=String(L"(int)",5)+t_t_expr+String(L"[",1)+t_t_index+String(L"]",1);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<217>");
	String t_2=t_t_expr+String(L"[",1)+t_t_index+String(L"]",1);
	return t_2;
}
String c_CsTranslator::p_TransSliceExpr(c_SliceExpr* t_expr){
	DBG_ENTER("CsTranslator.TransSliceExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<221>");
	String t_t_expr=t_expr->m_expr->p_Trans();
	DBG_LOCAL(t_t_expr,"t_expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<222>");
	String t_t_args=String(L"0",1);
	DBG_LOCAL(t_t_args,"t_args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<223>");
	if((t_expr->m_from)!=0){
		DBG_BLOCK();
		t_t_args=t_expr->m_from->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<224>");
	if((t_expr->m_term)!=0){
		DBG_BLOCK();
		t_t_args=t_t_args+(String(L",",1)+t_expr->m_term->p_Trans());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<225>");
	String t_=String(L"((",2)+p_TransType(t_expr->m_exprType)+String(L")bb_std_lang.slice(",19)+t_t_expr+String(L",",1)+t_t_args+String(L"))",2);
	return t_;
}
String c_CsTranslator::p_TransArrayExpr(c_ArrayExpr* t_expr){
	DBG_ENTER("CsTranslator.TransArrayExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<229>");
	String t_t=String();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<230>");
	Array<c_Expr* > t_=t_expr->m_exprs;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_elem=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_elem,"elem")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<231>");
		if((t_t).Length()!=0){
			DBG_BLOCK();
			t_t=t_t+String(L",",1);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<232>");
		t_t=t_t+t_elem->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<234>");
	String t_3=String(L"new ",4)+p_TransType(t_expr->m_exprType)+String(L"{",1)+t_t+String(L"}",1);
	return t_3;
}
String c_CsTranslator::p_TransIntrinsicExpr(c_Decl* t_decl,c_Expr* t_expr,Array<c_Expr* > t_args){
	DBG_ENTER("CsTranslator.TransIntrinsicExpr")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<238>");
	String t_texpr=String();
	String t_arg0=String();
	String t_arg1=String();
	String t_arg2=String();
	DBG_LOCAL(t_texpr,"texpr")
	DBG_LOCAL(t_arg0,"arg0")
	DBG_LOCAL(t_arg1,"arg1")
	DBG_LOCAL(t_arg2,"arg2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<240>");
	if((t_expr)!=0){
		DBG_BLOCK();
		t_texpr=p_TransSubExpr(t_expr,2);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<242>");
	if(t_args.Length()>0 && ((t_args.At(0))!=0)){
		DBG_BLOCK();
		t_arg0=t_args.At(0)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<243>");
	if(t_args.Length()>1 && ((t_args.At(1))!=0)){
		DBG_BLOCK();
		t_arg1=t_args.At(1)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<244>");
	if(t_args.Length()>2 && ((t_args.At(2))!=0)){
		DBG_BLOCK();
		t_arg2=t_args.At(2)->p_Trans();
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<246>");
	String t_id=t_decl->m_munged.Slice(1);
	DBG_LOCAL(t_id,"id")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<247>");
	String t_id2=t_id.Slice(0,1).ToUpper()+t_id.Slice(1);
	DBG_LOCAL(t_id2,"id2")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<249>");
	String t_1=t_id;
	DBG_LOCAL(t_1,"1")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<252>");
	if(t_1==String(L"print",5)){
		DBG_BLOCK();
		String t_=String(L"bb_std_lang.Print",17)+p_Bra(t_arg0);
		return t_;
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<253>");
		if(t_1==String(L"error",5)){
			DBG_BLOCK();
			String t_2=String(L"bb_std_lang.Error",17)+p_Bra(t_arg0);
			return t_2;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<254>");
			if(t_1==String(L"debuglog",8)){
				DBG_BLOCK();
				String t_3=String(L"bb_std_lang.DebugLog",20)+p_Bra(t_arg0);
				return t_3;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<255>");
				if(t_1==String(L"debugstop",9)){
					DBG_BLOCK();
					return String(L"bb_std_lang.DebugStop()",23);
				}else{
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<258>");
					if(t_1==String(L"length",6)){
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<259>");
						if((dynamic_cast<c_StringType*>(t_expr->m_exprType))!=0){
							DBG_BLOCK();
							String t_4=t_texpr+String(L".Length",7);
							return t_4;
						}
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<260>");
						String t_5=String(L"bb_std_lang.length",18)+p_Bra(t_texpr);
						return t_5;
					}else{
						DBG_BLOCK();
						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<263>");
						if(t_1==String(L"resize",6)){
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<264>");
							c_Type* t_ty=dynamic_cast<c_ArrayType*>(t_expr->m_exprType)->m_elemType;
							DBG_LOCAL(t_ty,"ty")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<265>");
							if((dynamic_cast<c_StringType*>(t_ty))!=0){
								DBG_BLOCK();
								String t_6=String(L"bb_std_lang.resize(",19)+t_texpr+String(L",",1)+t_arg0+String(L")",1);
								return t_6;
							}
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<266>");
							String t_ety=p_TransType(t_ty);
							DBG_LOCAL(t_ety,"ety")
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<267>");
							String t_7=String(L"(",1)+t_ety+String(L"[])bb_std_lang.resize(",22)+t_texpr+String(L",",1)+t_arg0+String(L",typeof(",8)+t_ety+String(L"))",2);
							return t_7;
						}else{
							DBG_BLOCK();
							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<279>");
							if(t_1==String(L"compare",7)){
								DBG_BLOCK();
								String t_8=t_texpr+String(L".CompareTo",10)+p_Bra(t_arg0);
								return t_8;
							}else{
								DBG_BLOCK();
								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<280>");
								if(t_1==String(L"find",4)){
									DBG_BLOCK();
									String t_9=t_texpr+String(L".IndexOf",8)+p_Bra(t_arg0+String(L",",1)+t_arg1);
									return t_9;
								}else{
									DBG_BLOCK();
									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<281>");
									if(t_1==String(L"findlast",8)){
										DBG_BLOCK();
										String t_10=t_texpr+String(L".LastIndexOf",12)+p_Bra(t_arg0);
										return t_10;
									}else{
										DBG_BLOCK();
										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<282>");
										if(t_1==String(L"findlast2",9)){
											DBG_BLOCK();
											String t_11=t_texpr+String(L".LastIndexOf",12)+p_Bra(t_arg0+String(L",",1)+t_arg1);
											return t_11;
										}else{
											DBG_BLOCK();
											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<283>");
											if(t_1==String(L"trim",4)){
												DBG_BLOCK();
												String t_12=t_texpr+String(L".Trim()",7);
												return t_12;
											}else{
												DBG_BLOCK();
												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<284>");
												if(t_1==String(L"join",4)){
													DBG_BLOCK();
													String t_13=String(L"String.Join",11)+p_Bra(t_texpr+String(L",",1)+t_arg0);
													return t_13;
												}else{
													DBG_BLOCK();
													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<285>");
													if(t_1==String(L"split",5)){
														DBG_BLOCK();
														String t_14=String(L"bb_std_lang.split",17)+p_Bra(t_texpr+String(L",",1)+t_arg0);
														return t_14;
													}else{
														DBG_BLOCK();
														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<286>");
														if(t_1==String(L"replace",7)){
															DBG_BLOCK();
															String t_15=t_texpr+String(L".Replace",8)+p_Bra(t_arg0+String(L",",1)+t_arg1);
															return t_15;
														}else{
															DBG_BLOCK();
															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<287>");
															if(t_1==String(L"tolower",7)){
																DBG_BLOCK();
																String t_16=t_texpr+String(L".ToLower()",10);
																return t_16;
															}else{
																DBG_BLOCK();
																DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<288>");
																if(t_1==String(L"toupper",7)){
																	DBG_BLOCK();
																	String t_17=t_texpr+String(L".ToUpper()",10);
																	return t_17;
																}else{
																	DBG_BLOCK();
																	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<289>");
																	if(t_1==String(L"contains",8)){
																		DBG_BLOCK();
																		String t_18=p_Bra(t_texpr+String(L".IndexOf",8)+p_Bra(t_arg0)+String(L"!=-1",4));
																		return t_18;
																	}else{
																		DBG_BLOCK();
																		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<290>");
																		if(t_1==String(L"startswith",10)){
																			DBG_BLOCK();
																			String t_19=t_texpr+String(L".StartsWith",11)+p_Bra(t_arg0);
																			return t_19;
																		}else{
																			DBG_BLOCK();
																			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<291>");
																			if(t_1==String(L"endswith",8)){
																				DBG_BLOCK();
																				String t_20=t_texpr+String(L".EndsWith",9)+p_Bra(t_arg0);
																				return t_20;
																			}else{
																				DBG_BLOCK();
																				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<292>");
																				if(t_1==String(L"tochars",7)){
																					DBG_BLOCK();
																					String t_21=String(L"bb_std_lang.toChars",19)+p_Bra(t_texpr);
																					return t_21;
																				}else{
																					DBG_BLOCK();
																					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<295>");
																					if(t_1==String(L"fromchar",8)){
																						DBG_BLOCK();
																						String t_22=String(L"new String",10)+p_Bra(String(L"(char)",6)+p_Bra(t_arg0)+String(L",1",2));
																						return t_22;
																					}else{
																						DBG_BLOCK();
																						DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<296>");
																						if(t_1==String(L"fromchars",9)){
																							DBG_BLOCK();
																							String t_23=String(L"bb_std_lang.fromChars",21)+p_Bra(t_arg0);
																							return t_23;
																						}else{
																							DBG_BLOCK();
																							DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<299>");
																							if(t_1==String(L"sin",3) || t_1==String(L"cos",3) || t_1==String(L"tan",3)){
																								DBG_BLOCK();
																								String t_24=String(L"(float)Math.",12)+t_id2+p_Bra(p_Bra(t_arg0)+String(L"*bb_std_lang.D2R",16));
																								return t_24;
																							}else{
																								DBG_BLOCK();
																								DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<300>");
																								if(t_1==String(L"asin",4) || t_1==String(L"acos",4) || t_1==String(L"atan",4)){
																									DBG_BLOCK();
																									String t_25=String(L"(float)",7)+p_Bra(String(L"Math.",5)+t_id2+p_Bra(t_arg0)+String(L"*bb_std_lang.R2D",16));
																									return t_25;
																								}else{
																									DBG_BLOCK();
																									DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<301>");
																									if(t_1==String(L"atan2",5)){
																										DBG_BLOCK();
																										String t_26=String(L"(float)",7)+p_Bra(String(L"Math.",5)+t_id2+p_Bra(t_arg0+String(L",",1)+t_arg1)+String(L"*bb_std_lang.R2D",16));
																										return t_26;
																									}else{
																										DBG_BLOCK();
																										DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<304>");
																										if(t_1==String(L"sinr",4) || t_1==String(L"cosr",4) || t_1==String(L"tanr",4)){
																											DBG_BLOCK();
																											String t_27=String(L"(float)Math.",12)+t_id2.Slice(0,-1)+p_Bra(t_arg0);
																											return t_27;
																										}else{
																											DBG_BLOCK();
																											DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<305>");
																											if(t_1==String(L"asinr",5) || t_1==String(L"acosr",5) || t_1==String(L"atanr",5)){
																												DBG_BLOCK();
																												String t_28=String(L"(float)Math.",12)+t_id2.Slice(0,-1)+p_Bra(t_arg0);
																												return t_28;
																											}else{
																												DBG_BLOCK();
																												DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<306>");
																												if(t_1==String(L"atan2r",6)){
																													DBG_BLOCK();
																													String t_29=String(L"(float)Math.",12)+t_id2.Slice(0,-1)+p_Bra(t_arg0+String(L",",1)+t_arg1);
																													return t_29;
																												}else{
																													DBG_BLOCK();
																													DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<309>");
																													if(t_1==String(L"sqrt",4) || t_1==String(L"floor",5) || t_1==String(L"log",3) || t_1==String(L"exp",3)){
																														DBG_BLOCK();
																														String t_30=String(L"(float)Math.",12)+t_id2+p_Bra(t_arg0);
																														return t_30;
																													}else{
																														DBG_BLOCK();
																														DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<310>");
																														if(t_1==String(L"ceil",4)){
																															DBG_BLOCK();
																															String t_31=String(L"(float)Math.Ceiling",19)+p_Bra(t_arg0);
																															return t_31;
																														}else{
																															DBG_BLOCK();
																															DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<311>");
																															if(t_1==String(L"pow",3)){
																																DBG_BLOCK();
																																String t_32=String(L"(float)Math.",12)+t_id2+p_Bra(t_arg0+String(L",",1)+t_arg1);
																																return t_32;
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<315>");
	bb_config_InternalErr(String(L"Internal error",14));
	return String();
}
String c_CsTranslator::p_TransTryStmt(c_TryStmt* t_stmt){
	DBG_ENTER("CsTranslator.TransTryStmt")
	c_CsTranslator *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<321>");
	p_Emit(String(L"try{",4));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<322>");
	int t_unr=p_EmitBlock(t_stmt->m_block,true);
	DBG_LOCAL(t_unr,"unr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<323>");
	Array<c_CatchStmt* > t_=t_stmt->m_catches;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_CatchStmt* t_c=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_c,"c")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<324>");
		p_MungDecl(t_c->m_init);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<325>");
		p_Emit(String(L"}catch(",7)+p_TransType(t_c->m_init->m_type)+String(L" ",1)+t_c->m_init->m_munged+String(L"){",2));
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<326>");
		int t_unr2=p_EmitBlock(t_c->m_block,true);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/cstranslator.monkey<328>");
	p_Emit(String(L"}",1));
	return String();
}
void c_CsTranslator::mark(){
	c_CTranslator::mark();
}
String c_CsTranslator::debug(){
	String t="(CsTranslator)\n";
	t=c_CTranslator::debug()+t;
	return t;
}
c_List9::c_List9(){
	m__head=((new c_HeadNode9)->m_new());
}
c_List9* c_List9::m_new(){
	DBG_ENTER("List.new")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Node16* c_List9::p_AddLast9(c_ModuleDecl* t_data){
	DBG_ENTER("List.AddLast")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<108>");
	c_Node16* t_=(new c_Node16)->m_new(m__head,m__head->m__pred,t_data);
	return t_;
}
c_List9* c_List9::m_new2(Array<c_ModuleDecl* > t_data){
	DBG_ENTER("List.new")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<13>");
	Array<c_ModuleDecl* > t_=t_data;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_ModuleDecl* t_t=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_t,"t")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<14>");
		p_AddLast9(t_t);
	}
	return this;
}
bool c_List9::p_IsEmpty(){
	DBG_ENTER("List.IsEmpty")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<50>");
	bool t_=m__head->m__succ==m__head;
	return t_;
}
c_ModuleDecl* c_List9::p_RemoveLast(){
	DBG_ENTER("List.RemoveLast")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<96>");
	if(p_IsEmpty()){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on empty list",31));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<98>");
	c_ModuleDecl* t_data=m__head->m__pred->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<99>");
	m__head->m__pred->p_Remove();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<100>");
	return t_data;
}
bool c_List9::p_Equals4(c_ModuleDecl* t_lhs,c_ModuleDecl* t_rhs){
	DBG_ENTER("List.Equals")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<28>");
	bool t_=t_lhs==t_rhs;
	return t_;
}
c_Node16* c_List9::p_FindLast7(c_ModuleDecl* t_value,c_Node16* t_start){
	DBG_ENTER("List.FindLast")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_start,"start")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<128>");
	while(t_start!=m__head){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<129>");
		if(p_Equals4(t_value,t_start->m__data)){
			DBG_BLOCK();
			return t_start;
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<130>");
		t_start=t_start->m__pred;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<132>");
	return 0;
}
c_Node16* c_List9::p_FindLast8(c_ModuleDecl* t_value){
	DBG_ENTER("List.FindLast")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<124>");
	c_Node16* t_=p_FindLast7(t_value,m__head->m__pred);
	return t_;
}
void c_List9::p_RemoveLast5(c_ModuleDecl* t_value){
	DBG_ENTER("List.RemoveLast")
	c_List9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<146>");
	c_Node16* t_node=p_FindLast8(t_value);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<147>");
	if((t_node)!=0){
		DBG_BLOCK();
		t_node->p_Remove();
	}
}
void c_List9::mark(){
	Object::mark();
	gc_mark_q(m__head);
}
String c_List9::debug(){
	String t="(List)\n";
	t+=dbg_decl("_head",&m__head);
	return t;
}
c_Node16::c_Node16(){
	m__succ=0;
	m__pred=0;
	m__data=0;
}
c_Node16* c_Node16::m_new(c_Node16* t_succ,c_Node16* t_pred,c_ModuleDecl* t_data){
	DBG_ENTER("Node.new")
	c_Node16 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_succ,"succ")
	DBG_LOCAL(t_pred,"pred")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<261>");
	gc_assign(m__succ,t_succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<262>");
	gc_assign(m__pred,t_pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<263>");
	gc_assign(m__succ->m__pred,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<264>");
	gc_assign(m__pred->m__succ,this);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<265>");
	gc_assign(m__data,t_data);
	return this;
}
c_Node16* c_Node16::m_new2(){
	DBG_ENTER("Node.new")
	c_Node16 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<258>");
	return this;
}
int c_Node16::p_Remove(){
	DBG_ENTER("Node.Remove")
	c_Node16 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<274>");
	if(m__succ->m__pred!=this){
		DBG_BLOCK();
		bbError(String(L"Illegal operation on removed node",33));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<276>");
	gc_assign(m__succ->m__pred,m__pred);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<277>");
	gc_assign(m__pred->m__succ,m__succ);
	return 0;
}
void c_Node16::mark(){
	Object::mark();
	gc_mark_q(m__succ);
	gc_mark_q(m__pred);
	gc_mark_q(m__data);
}
String c_Node16::debug(){
	String t="(Node)\n";
	t+=dbg_decl("_succ",&m__succ);
	t+=dbg_decl("_pred",&m__pred);
	t+=dbg_decl("_data",&m__data);
	return t;
}
c_HeadNode9::c_HeadNode9(){
}
c_HeadNode9* c_HeadNode9::m_new(){
	DBG_ENTER("HeadNode.new")
	c_HeadNode9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<310>");
	c_Node16::m_new2();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<311>");
	gc_assign(m__succ,(this));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<312>");
	gc_assign(m__pred,(this));
	return this;
}
void c_HeadNode9::mark(){
	c_Node16::mark();
}
String c_HeadNode9::debug(){
	String t="(HeadNode)\n";
	t=c_Node16::debug()+t;
	return t;
}
c_Enumerator5::c_Enumerator5(){
	m__list=0;
	m__curr=0;
}
c_Enumerator5* c_Enumerator5::m_new(c_List5* t_list){
	DBG_ENTER("Enumerator.new")
	c_Enumerator5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_list,"list")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<326>");
	gc_assign(m__list,t_list);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<327>");
	gc_assign(m__curr,t_list->m__head->m__succ);
	return this;
}
c_Enumerator5* c_Enumerator5::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<323>");
	return this;
}
bool c_Enumerator5::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<331>");
	while(m__curr->m__succ->m__pred!=m__curr){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<332>");
		gc_assign(m__curr,m__curr->m__succ);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<334>");
	bool t_=m__curr!=m__list->m__head;
	return t_;
}
c_Stmt* c_Enumerator5::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator5 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<338>");
	c_Stmt* t_data=m__curr->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<339>");
	gc_assign(m__curr,m__curr->m__succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<340>");
	return t_data;
}
void c_Enumerator5::mark(){
	Object::mark();
	gc_mark_q(m__list);
	gc_mark_q(m__curr);
}
String c_Enumerator5::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("_list",&m__list);
	t+=dbg_decl("_curr",&m__curr);
	return t;
}
c_InvokeExpr::c_InvokeExpr(){
	m_decl=0;
	m_args=Array<c_Expr* >();
}
c_InvokeExpr* c_InvokeExpr::m_new(c_FuncDecl* t_decl,Array<c_Expr* > t_args){
	DBG_ENTER("InvokeExpr.new")
	c_InvokeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_LOCAL(t_args,"args")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<292>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<293>");
	gc_assign(this->m_decl,t_decl);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<294>");
	gc_assign(this->m_args,t_args);
	return this;
}
c_InvokeExpr* c_InvokeExpr::m_new2(){
	DBG_ENTER("InvokeExpr.new")
	c_InvokeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<288>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_InvokeExpr::p_Semant(){
	DBG_ENTER("InvokeExpr.Semant")
	c_InvokeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<306>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<307>");
	gc_assign(m_exprType,m_decl->m_retType);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<308>");
	gc_assign(m_args,p_CastArgs(m_args,m_decl));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<309>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_InvokeExpr::p_ToString(){
	DBG_ENTER("InvokeExpr.ToString")
	c_InvokeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<298>");
	String t_t=String(L"InvokeExpr(",11)+m_decl->p_ToString();
	DBG_LOCAL(t_t,"t")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<299>");
	Array<c_Expr* > t_=m_args;
	int t_2=0;
	while(t_2<t_.Length()){
		DBG_BLOCK();
		c_Expr* t_arg=t_.At(t_2);
		t_2=t_2+1;
		DBG_LOCAL(t_arg,"arg")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<300>");
		t_t=t_t+(String(L",",1)+t_arg->p_ToString());
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<302>");
	String t_3=t_t+String(L")",1);
	return t_3;
}
String c_InvokeExpr::p_Trans(){
	DBG_ENTER("InvokeExpr.Trans")
	c_InvokeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<314>");
	String t_=bb_translator__trans->p_TransInvokeExpr(this);
	return t_;
}
String c_InvokeExpr::p_TransStmt(){
	DBG_ENTER("InvokeExpr.TransStmt")
	c_InvokeExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<318>");
	String t_=bb_translator__trans->p_TransInvokeExpr(this);
	return t_;
}
void c_InvokeExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_decl);
	gc_mark_q(m_args);
}
String c_InvokeExpr::debug(){
	String t="(InvokeExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("decl",&m_decl);
	t+=dbg_decl("args",&m_args);
	return t;
}
c_StmtExpr::c_StmtExpr(){
	m_stmt=0;
	m_expr=0;
}
c_StmtExpr* c_StmtExpr::m_new(c_Stmt* t_stmt,c_Expr* t_expr){
	DBG_ENTER("StmtExpr.new")
	c_StmtExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stmt,"stmt")
	DBG_LOCAL(t_expr,"expr")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<127>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<128>");
	gc_assign(this->m_stmt,t_stmt);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<129>");
	gc_assign(this->m_expr,t_expr);
	return this;
}
c_StmtExpr* c_StmtExpr::m_new2(){
	DBG_ENTER("StmtExpr.new")
	c_StmtExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<123>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_StmtExpr::p_Semant(){
	DBG_ENTER("StmtExpr.Semant")
	c_StmtExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<141>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<142>");
	m_stmt->p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<143>");
	gc_assign(m_expr,m_expr->p_Semant());
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<144>");
	gc_assign(m_exprType,m_expr->m_exprType);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<145>");
	c_Expr* t_2=(this);
	return t_2;
}
c_Expr* c_StmtExpr::p_Copy(){
	DBG_ENTER("StmtExpr.Copy")
	c_StmtExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<133>");
	c_Expr* t_=((new c_StmtExpr)->m_new(m_stmt,p_CopyExpr(m_expr)));
	return t_;
}
String c_StmtExpr::p_ToString(){
	DBG_ENTER("StmtExpr.ToString")
	c_StmtExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<137>");
	String t_=String(L"StmtExpr(,",10)+m_expr->p_ToString()+String(L")",1);
	return t_;
}
String c_StmtExpr::p_Trans(){
	DBG_ENTER("StmtExpr.Trans")
	c_StmtExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<149>");
	String t_=bb_translator__trans->p_TransStmtExpr(this);
	return t_;
}
void c_StmtExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_stmt);
	gc_mark_q(m_expr);
}
String c_StmtExpr::debug(){
	String t="(StmtExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("stmt",&m_stmt);
	t+=dbg_decl("expr",&m_expr);
	return t;
}
c_MemberVarExpr::c_MemberVarExpr(){
	m_expr=0;
	m_decl=0;
}
c_MemberVarExpr* c_MemberVarExpr::m_new(c_Expr* t_expr,c_VarDecl* t_decl){
	DBG_ENTER("MemberVarExpr.new")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_expr,"expr")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<254>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<255>");
	gc_assign(this->m_expr,t_expr);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<256>");
	gc_assign(this->m_decl,t_decl);
	return this;
}
c_MemberVarExpr* c_MemberVarExpr::m_new2(){
	DBG_ENTER("MemberVarExpr.new")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<250>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_MemberVarExpr::p_Semant(){
	DBG_ENTER("MemberVarExpr.Semant")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<268>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<269>");
	if(!((m_decl->p_IsSemanted())!=0)){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<270>");
	gc_assign(m_exprType,m_decl->m_type);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<271>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_MemberVarExpr::p_ToString(){
	DBG_ENTER("MemberVarExpr.ToString")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<260>");
	String t_=String(L"MemberVarExpr(",14)+m_expr->p_ToString()+String(L",",1)+m_decl->p_ToString()+String(L")",1);
	return t_;
}
bool c_MemberVarExpr::p_SideEffects(){
	DBG_ENTER("MemberVarExpr.SideEffects")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<264>");
	bool t_=m_expr->p_SideEffects();
	return t_;
}
c_Expr* c_MemberVarExpr::p_SemantSet(String t_op,c_Expr* t_rhs){
	DBG_ENTER("MemberVarExpr.SemantSet")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<275>");
	c_Expr* t_=p_Semant();
	return t_;
}
String c_MemberVarExpr::p_Trans(){
	DBG_ENTER("MemberVarExpr.Trans")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<279>");
	String t_=bb_translator__trans->p_TransMemberVarExpr(this);
	return t_;
}
String c_MemberVarExpr::p_TransVar(){
	DBG_ENTER("MemberVarExpr.TransVar")
	c_MemberVarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<283>");
	String t_=bb_translator__trans->p_TransMemberVarExpr(this);
	return t_;
}
void c_MemberVarExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_expr);
	gc_mark_q(m_decl);
}
String c_MemberVarExpr::debug(){
	String t="(MemberVarExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("expr",&m_expr);
	t+=dbg_decl("decl",&m_decl);
	return t;
}
c_VarExpr::c_VarExpr(){
	m_decl=0;
}
c_VarExpr* c_VarExpr::m_new(c_VarDecl* t_decl){
	DBG_ENTER("VarExpr.new")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_decl,"decl")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<215>");
	c_Expr::m_new();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<216>");
	gc_assign(this->m_decl,t_decl);
	return this;
}
c_VarExpr* c_VarExpr::m_new2(){
	DBG_ENTER("VarExpr.new")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<212>");
	c_Expr::m_new();
	return this;
}
c_Expr* c_VarExpr::p_Semant(){
	DBG_ENTER("VarExpr.Semant")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<228>");
	if((m_exprType)!=0){
		DBG_BLOCK();
		c_Expr* t_=(this);
		return t_;
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<229>");
	if(!((m_decl->p_IsSemanted())!=0)){
		DBG_BLOCK();
		bb_config_InternalErr(String(L"Internal error",14));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<230>");
	gc_assign(m_exprType,m_decl->m_type);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<231>");
	c_Expr* t_2=(this);
	return t_2;
}
String c_VarExpr::p_ToString(){
	DBG_ENTER("VarExpr.ToString")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<220>");
	String t_=String(L"VarExpr(",8)+m_decl->p_ToString()+String(L")",1);
	return t_;
}
bool c_VarExpr::p_SideEffects(){
	DBG_ENTER("VarExpr.SideEffects")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<224>");
	return false;
}
c_Expr* c_VarExpr::p_SemantSet(String t_op,c_Expr* t_rhs){
	DBG_ENTER("VarExpr.SemantSet")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_op,"op")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<235>");
	c_Expr* t_=p_Semant();
	return t_;
}
String c_VarExpr::p_Trans(){
	DBG_ENTER("VarExpr.Trans")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<239>");
	p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<240>");
	String t_=bb_translator__trans->p_TransVarExpr(this);
	return t_;
}
String c_VarExpr::p_TransVar(){
	DBG_ENTER("VarExpr.TransVar")
	c_VarExpr *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<244>");
	p_Semant();
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/trans/expr.monkey<245>");
	String t_=bb_translator__trans->p_TransVarExpr(this);
	return t_;
}
void c_VarExpr::mark(){
	c_Expr::mark();
	gc_mark_q(m_decl);
}
String c_VarExpr::debug(){
	String t="(VarExpr)\n";
	t=c_Expr::debug()+t;
	t+=dbg_decl("decl",&m_decl);
	return t;
}
int bb_decl__loopnest;
c_Map8::c_Map8(){
	m_root=0;
}
c_Map8* c_Map8::m_new(){
	DBG_ENTER("Map.new")
	c_Map8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
c_Node17* c_Map8::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node17* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
c_FuncDeclList* c_Map8::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node17* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
int c_Map8::p_RotateLeft8(c_Node17* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node17* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map8::p_RotateRight8(c_Node17* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node17* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map8::p_InsertFixup8(c_Node17* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node17* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft8(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight8(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node17* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight8(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft8(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map8::p_Set8(String t_key,c_FuncDeclList* t_value){
	DBG_ENTER("Map.Set")
	c_Map8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node17* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node17* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node17)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup8(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
void c_Map8::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map8::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap8::c_StringMap8(){
}
c_StringMap8* c_StringMap8::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map8::m_new();
	return this;
}
int c_StringMap8::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap8::mark(){
	c_Map8::mark();
}
String c_StringMap8::debug(){
	String t="(StringMap)\n";
	t=c_Map8::debug()+t;
	return t;
}
c_Node17::c_Node17(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node17* c_Node17::m_new(String t_key,c_FuncDeclList* t_value,int t_color,c_Node17* t_parent){
	DBG_ENTER("Node.new")
	c_Node17 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node17* c_Node17::m_new2(){
	DBG_ENTER("Node.new")
	c_Node17 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
void c_Node17::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node17::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
c_Map9::c_Map9(){
	m_root=0;
}
c_Map9* c_Map9::m_new(){
	DBG_ENTER("Map.new")
	c_Map9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
c_Node18* c_Map9::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node18* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
bool c_Map9::p_Contains(String t_key){
	DBG_ENTER("Map.Contains")
	c_Map9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<25>");
	bool t_=p_FindNode(t_key)!=0;
	return t_;
}
int c_Map9::p_RotateLeft9(c_Node18* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node18* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map9::p_RotateRight9(c_Node18* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node18* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map9::p_InsertFixup9(c_Node18* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node18* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft9(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight9(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node18* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight9(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft9(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map9::p_Set9(String t_key,c_FuncDecl* t_value){
	DBG_ENTER("Map.Set")
	c_Map9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node18* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node18* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node18)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup9(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
void c_Map9::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map9::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap9::c_StringMap9(){
}
c_StringMap9* c_StringMap9::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map9::m_new();
	return this;
}
int c_StringMap9::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap9::mark(){
	c_Map9::mark();
}
String c_StringMap9::debug(){
	String t="(StringMap)\n";
	t=c_Map9::debug()+t;
	return t;
}
c_Node18::c_Node18(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node18* c_Node18::m_new(String t_key,c_FuncDecl* t_value,int t_color,c_Node18* t_parent){
	DBG_ENTER("Node.new")
	c_Node18 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node18* c_Node18::m_new2(){
	DBG_ENTER("Node.new")
	c_Node18 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
void c_Node18::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node18::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
c_Map10::c_Map10(){
	m_root=0;
}
c_Map10* c_Map10::m_new(){
	DBG_ENTER("Map.new")
	c_Map10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<7>");
	return this;
}
c_Node19* c_Map10::p_FindNode(String t_key){
	DBG_ENTER("Map.FindNode")
	c_Map10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<157>");
	c_Node19* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<159>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<160>");
		int t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_LOCAL(t_cmp,"cmp")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<161>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<162>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<163>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<164>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<166>");
				return t_node;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<169>");
	return t_node;
}
c_StringSet* c_Map10::p_Get(String t_key){
	DBG_ENTER("Map.Get")
	c_Map10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<101>");
	c_Node19* t_node=p_FindNode(t_key);
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<102>");
	if((t_node)!=0){
		DBG_BLOCK();
		return t_node->m_value;
	}
	return 0;
}
int c_Map10::p_RotateLeft10(c_Node19* t_node){
	DBG_ENTER("Map.RotateLeft")
	c_Map10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<251>");
	c_Node19* t_child=t_node->m_right;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<252>");
	gc_assign(t_node->m_right,t_child->m_left);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<253>");
	if((t_child->m_left)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<254>");
		gc_assign(t_child->m_left->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<256>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<257>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<258>");
		if(t_node==t_node->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<259>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<261>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<264>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<266>");
	gc_assign(t_child->m_left,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<267>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map10::p_RotateRight10(c_Node19* t_node){
	DBG_ENTER("Map.RotateRight")
	c_Map10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<271>");
	c_Node19* t_child=t_node->m_left;
	DBG_LOCAL(t_child,"child")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<272>");
	gc_assign(t_node->m_left,t_child->m_right);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<273>");
	if((t_child->m_right)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<274>");
		gc_assign(t_child->m_right->m_parent,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<276>");
	gc_assign(t_child->m_parent,t_node->m_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<277>");
	if((t_node->m_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<278>");
		if(t_node==t_node->m_parent->m_right){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<279>");
			gc_assign(t_node->m_parent->m_right,t_child);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<281>");
			gc_assign(t_node->m_parent->m_left,t_child);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<284>");
		gc_assign(m_root,t_child);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<286>");
	gc_assign(t_child->m_right,t_node);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<287>");
	gc_assign(t_node->m_parent,t_child);
	return 0;
}
int c_Map10::p_InsertFixup10(c_Node19* t_node){
	DBG_ENTER("Map.InsertFixup")
	c_Map10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<212>");
	while(((t_node->m_parent)!=0) && t_node->m_parent->m_color==-1 && ((t_node->m_parent->m_parent)!=0)){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<213>");
		if(t_node->m_parent==t_node->m_parent->m_parent->m_left){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<214>");
			c_Node19* t_uncle=t_node->m_parent->m_parent->m_right;
			DBG_LOCAL(t_uncle,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<215>");
			if(((t_uncle)!=0) && t_uncle->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<216>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<217>");
				t_uncle->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<218>");
				t_uncle->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<219>");
				t_node=t_uncle->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<221>");
				if(t_node==t_node->m_parent->m_right){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<222>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<223>");
					p_RotateLeft10(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<225>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<226>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<227>");
				p_RotateRight10(t_node->m_parent->m_parent);
			}
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<230>");
			c_Node19* t_uncle2=t_node->m_parent->m_parent->m_left;
			DBG_LOCAL(t_uncle2,"uncle")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<231>");
			if(((t_uncle2)!=0) && t_uncle2->m_color==-1){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<232>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<233>");
				t_uncle2->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<234>");
				t_uncle2->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<235>");
				t_node=t_uncle2->m_parent;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<237>");
				if(t_node==t_node->m_parent->m_left){
					DBG_BLOCK();
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<238>");
					t_node=t_node->m_parent;
					DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<239>");
					p_RotateRight10(t_node);
				}
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<241>");
				t_node->m_parent->m_color=1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<242>");
				t_node->m_parent->m_parent->m_color=-1;
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<243>");
				p_RotateLeft10(t_node->m_parent->m_parent);
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<247>");
	m_root->m_color=1;
	return 0;
}
bool c_Map10::p_Set10(String t_key,c_StringSet* t_value){
	DBG_ENTER("Map.Set")
	c_Map10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<29>");
	c_Node19* t_node=m_root;
	DBG_LOCAL(t_node,"node")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<30>");
	c_Node19* t_parent=0;
	int t_cmp=0;
	DBG_LOCAL(t_parent,"parent")
	DBG_LOCAL(t_cmp,"cmp")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<32>");
	while((t_node)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<33>");
		t_parent=t_node;
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<34>");
		t_cmp=p_Compare(t_key,t_node->m_key);
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<35>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<36>");
			t_node=t_node->m_right;
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<37>");
			if(t_cmp<0){
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<38>");
				t_node=t_node->m_left;
			}else{
				DBG_BLOCK();
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<40>");
				gc_assign(t_node->m_value,t_value);
				DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<41>");
				return false;
			}
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<45>");
	t_node=(new c_Node19)->m_new(t_key,t_value,-1,t_parent);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<47>");
	if((t_parent)!=0){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<48>");
		if(t_cmp>0){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<49>");
			gc_assign(t_parent->m_right,t_node);
		}else{
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<51>");
			gc_assign(t_parent->m_left,t_node);
		}
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<53>");
		p_InsertFixup10(t_node);
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<55>");
		gc_assign(m_root,t_node);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<57>");
	return true;
}
void c_Map10::mark(){
	Object::mark();
	gc_mark_q(m_root);
}
String c_Map10::debug(){
	String t="(Map)\n";
	t+=dbg_decl("root",&m_root);
	return t;
}
c_StringMap10::c_StringMap10(){
}
c_StringMap10* c_StringMap10::m_new(){
	DBG_ENTER("StringMap.new")
	c_StringMap10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<551>");
	c_Map10::m_new();
	return this;
}
int c_StringMap10::p_Compare(String t_lhs,String t_rhs){
	DBG_ENTER("StringMap.Compare")
	c_StringMap10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_lhs,"lhs")
	DBG_LOCAL(t_rhs,"rhs")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<554>");
	int t_=t_lhs.Compare(t_rhs);
	return t_;
}
void c_StringMap10::mark(){
	c_Map10::mark();
}
String c_StringMap10::debug(){
	String t="(StringMap)\n";
	t=c_Map10::debug()+t;
	return t;
}
c_Node19::c_Node19(){
	m_key=String();
	m_right=0;
	m_left=0;
	m_value=0;
	m_color=0;
	m_parent=0;
}
c_Node19* c_Node19::m_new(String t_key,c_StringSet* t_value,int t_color,c_Node19* t_parent){
	DBG_ENTER("Node.new")
	c_Node19 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_key,"key")
	DBG_LOCAL(t_value,"value")
	DBG_LOCAL(t_color,"color")
	DBG_LOCAL(t_parent,"parent")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<364>");
	this->m_key=t_key;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<365>");
	gc_assign(this->m_value,t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<366>");
	this->m_color=t_color;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<367>");
	gc_assign(this->m_parent,t_parent);
	return this;
}
c_Node19* c_Node19::m_new2(){
	DBG_ENTER("Node.new")
	c_Node19 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/map.monkey<361>");
	return this;
}
void c_Node19::mark(){
	Object::mark();
	gc_mark_q(m_right);
	gc_mark_q(m_left);
	gc_mark_q(m_value);
	gc_mark_q(m_parent);
}
String c_Node19::debug(){
	String t="(Node)\n";
	t+=dbg_decl("key",&m_key);
	t+=dbg_decl("value",&m_value);
	t+=dbg_decl("color",&m_color);
	t+=dbg_decl("parent",&m_parent);
	t+=dbg_decl("left",&m_left);
	t+=dbg_decl("right",&m_right);
	return t;
}
c_Stack9::c_Stack9(){
	m_data=Array<c_FuncDecl* >();
	m_length=0;
}
c_Stack9* c_Stack9::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack9* c_Stack9::m_new2(Array<c_FuncDecl* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack9::p_Push25(c_FuncDecl* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack9::p_Push26(Array<c_FuncDecl* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push25(t_values.At(t_offset+t_i));
	}
}
void c_Stack9::p_Push27(Array<c_FuncDecl* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push26(t_values,t_offset,t_values.Length()-t_offset);
}
c_Enumerator6* c_Stack9::p_ObjectEnumerator(){
	DBG_ENTER("Stack.ObjectEnumerator")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<188>");
	c_Enumerator6* t_=(new c_Enumerator6)->m_new(this);
	return t_;
}
c_FuncDecl* c_Stack9::m_NIL;
void c_Stack9::p_Length(int t_newlength){
	DBG_ENTER("Stack.Length")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_newlength,"newlength")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<45>");
	if(t_newlength<m_length){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<46>");
		for(int t_i=t_newlength;t_i<m_length;t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<47>");
			gc_assign(m_data.At(t_i),m_NIL);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<49>");
		if(t_newlength>m_data.Length()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<50>");
			gc_assign(m_data,m_data.Resize(bb_math_Max(m_length*2+10,t_newlength)));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<52>");
	m_length=t_newlength;
}
int c_Stack9::p_Length2(){
	DBG_ENTER("Stack.Length")
	c_Stack9 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<56>");
	return m_length;
}
void c_Stack9::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack9::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("NIL",&c_Stack9::m_NIL);
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_Enumerator6::c_Enumerator6(){
	m_stack=0;
	m_index=0;
}
c_Enumerator6* c_Enumerator6::m_new(c_Stack9* t_stack){
	DBG_ENTER("Enumerator.new")
	c_Enumerator6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stack,"stack")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<259>");
	gc_assign(this->m_stack,t_stack);
	return this;
}
c_Enumerator6* c_Enumerator6::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<256>");
	return this;
}
bool c_Enumerator6::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<263>");
	bool t_=m_index<m_stack->p_Length2();
	return t_;
}
c_FuncDecl* c_Enumerator6::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator6 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<267>");
	m_index+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<268>");
	c_FuncDecl* t_=m_stack->m_data.At(m_index-1);
	return t_;
}
void c_Enumerator6::mark(){
	Object::mark();
	gc_mark_q(m_stack);
}
String c_Enumerator6::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("stack",&m_stack);
	t+=dbg_decl("index",&m_index);
	return t;
}
c_Stack10::c_Stack10(){
	m_data=Array<c_LocalDecl* >();
	m_length=0;
}
c_Stack10* c_Stack10::m_new(){
	DBG_ENTER("Stack.new")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	return this;
}
c_Stack10* c_Stack10::m_new2(Array<c_LocalDecl* > t_data){
	DBG_ENTER("Stack.new")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<13>");
	gc_assign(this->m_data,t_data.Slice(0));
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<14>");
	this->m_length=t_data.Length();
	return this;
}
void c_Stack10::p_Push28(c_LocalDecl* t_value){
	DBG_ENTER("Stack.Push")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_value,"value")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<71>");
	if(m_length==m_data.Length()){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<72>");
		gc_assign(m_data,m_data.Resize(m_length*2+10));
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<74>");
	gc_assign(m_data.At(m_length),t_value);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<75>");
	m_length+=1;
}
void c_Stack10::p_Push29(Array<c_LocalDecl* > t_values,int t_offset,int t_count){
	DBG_ENTER("Stack.Push")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_LOCAL(t_count,"count")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<83>");
	for(int t_i=0;t_i<t_count;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<84>");
		p_Push28(t_values.At(t_offset+t_i));
	}
}
void c_Stack10::p_Push30(Array<c_LocalDecl* > t_values,int t_offset){
	DBG_ENTER("Stack.Push")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_values,"values")
	DBG_LOCAL(t_offset,"offset")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<79>");
	p_Push29(t_values,t_offset,t_values.Length()-t_offset);
}
c_LocalDecl* c_Stack10::m_NIL;
void c_Stack10::p_Clear(){
	DBG_ENTER("Stack.Clear")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<34>");
	for(int t_i=0;t_i<m_length;t_i=t_i+1){
		DBG_BLOCK();
		DBG_LOCAL(t_i,"i")
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<35>");
		gc_assign(m_data.At(t_i),m_NIL);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<37>");
	m_length=0;
}
c_Enumerator8* c_Stack10::p_ObjectEnumerator(){
	DBG_ENTER("Stack.ObjectEnumerator")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<188>");
	c_Enumerator8* t_=(new c_Enumerator8)->m_new(this);
	return t_;
}
void c_Stack10::p_Length(int t_newlength){
	DBG_ENTER("Stack.Length")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_newlength,"newlength")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<45>");
	if(t_newlength<m_length){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<46>");
		for(int t_i=t_newlength;t_i<m_length;t_i=t_i+1){
			DBG_BLOCK();
			DBG_LOCAL(t_i,"i")
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<47>");
			gc_assign(m_data.At(t_i),m_NIL);
		}
	}else{
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<49>");
		if(t_newlength>m_data.Length()){
			DBG_BLOCK();
			DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<50>");
			gc_assign(m_data,m_data.Resize(bb_math_Max(m_length*2+10,t_newlength)));
		}
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<52>");
	m_length=t_newlength;
}
int c_Stack10::p_Length2(){
	DBG_ENTER("Stack.Length")
	c_Stack10 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<56>");
	return m_length;
}
void c_Stack10::mark(){
	Object::mark();
	gc_mark_q(m_data);
}
String c_Stack10::debug(){
	String t="(Stack)\n";
	t+=dbg_decl("NIL",&c_Stack10::m_NIL);
	t+=dbg_decl("data",&m_data);
	t+=dbg_decl("length",&m_length);
	return t;
}
c_Enumerator7::c_Enumerator7(){
	m__list=0;
	m__curr=0;
}
c_Enumerator7* c_Enumerator7::m_new(c_List8* t_list){
	DBG_ENTER("Enumerator.new")
	c_Enumerator7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_list,"list")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<326>");
	gc_assign(m__list,t_list);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<327>");
	gc_assign(m__curr,t_list->m__head->m__succ);
	return this;
}
c_Enumerator7* c_Enumerator7::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<323>");
	return this;
}
bool c_Enumerator7::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<331>");
	while(m__curr->m__succ->m__pred!=m__curr){
		DBG_BLOCK();
		DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<332>");
		gc_assign(m__curr,m__curr->m__succ);
	}
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<334>");
	bool t_=m__curr!=m__list->m__head;
	return t_;
}
c_GlobalDecl* c_Enumerator7::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator7 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<338>");
	c_GlobalDecl* t_data=m__curr->m__data;
	DBG_LOCAL(t_data,"data")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<339>");
	gc_assign(m__curr,m__curr->m__succ);
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/list.monkey<340>");
	return t_data;
}
void c_Enumerator7::mark(){
	Object::mark();
	gc_mark_q(m__list);
	gc_mark_q(m__curr);
}
String c_Enumerator7::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("_list",&m__list);
	t+=dbg_decl("_curr",&m__curr);
	return t;
}
c_Enumerator8::c_Enumerator8(){
	m_stack=0;
	m_index=0;
}
c_Enumerator8* c_Enumerator8::m_new(c_Stack10* t_stack){
	DBG_ENTER("Enumerator.new")
	c_Enumerator8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_LOCAL(t_stack,"stack")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<259>");
	gc_assign(this->m_stack,t_stack);
	return this;
}
c_Enumerator8* c_Enumerator8::m_new2(){
	DBG_ENTER("Enumerator.new")
	c_Enumerator8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<256>");
	return this;
}
bool c_Enumerator8::p_HasNext(){
	DBG_ENTER("Enumerator.HasNext")
	c_Enumerator8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<263>");
	bool t_=m_index<m_stack->p_Length2();
	return t_;
}
c_LocalDecl* c_Enumerator8::p_NextObject(){
	DBG_ENTER("Enumerator.NextObject")
	c_Enumerator8 *self=this;
	DBG_LOCAL(self,"Self")
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<267>");
	m_index+=1;
	DBG_INFO("C:/Dev/MonkeyXPro84c/modules/monkey/stack.monkey<268>");
	c_LocalDecl* t_=m_stack->m_data.At(m_index-1);
	return t_;
}
void c_Enumerator8::mark(){
	Object::mark();
	gc_mark_q(m_stack);
}
String c_Enumerator8::debug(){
	String t="(Enumerator)\n";
	t+=dbg_decl("stack",&m_stack);
	t+=dbg_decl("index",&m_index);
	return t;
}
int bbInit(){
	GC_CTOR
	c_Type::m_stringType=(new c_StringType)->m_new();
	DBG_GLOBAL("stringType",&c_Type::m_stringType);
	bb_config__errInfo=String();
	DBG_GLOBAL("_errInfo",&bb_config__errInfo);
	bb_config__cfgScope=(new c_ConfigScope)->m_new();
	DBG_GLOBAL("_cfgScope",&bb_config__cfgScope);
	bb_config__cfgScopeStack=(new c_Stack2)->m_new();
	DBG_GLOBAL("_cfgScopeStack",&bb_config__cfgScopeStack);
	bb_decl__env=0;
	DBG_GLOBAL("_env",&bb_decl__env);
	bb_decl__envStack=(new c_List2)->m_new();
	DBG_GLOBAL("_envStack",&bb_decl__envStack);
	c_Toker::m__keywords=0;
	DBG_GLOBAL("_keywords",&c_Toker::m__keywords);
	c_Toker::m__symbols=0;
	DBG_GLOBAL("_symbols",&c_Toker::m__symbols);
	bb_parser_FILE_EXT=String(L"monkey",6);
	DBG_GLOBAL("FILE_EXT",&bb_parser_FILE_EXT);
	bb_config_ENV_MODPATH=String();
	DBG_GLOBAL("ENV_MODPATH",&bb_config_ENV_MODPATH);
	bb_config_ENV_SAFEMODE=0;
	DBG_GLOBAL("ENV_SAFEMODE",&bb_config_ENV_SAFEMODE);
	c_Type::m_intType=(new c_IntType)->m_new();
	DBG_GLOBAL("intType",&c_Type::m_intType);
	c_Type::m_floatType=(new c_FloatType)->m_new();
	DBG_GLOBAL("floatType",&c_Type::m_floatType);
	c_Type::m_boolType=(new c_BoolType)->m_new();
	DBG_GLOBAL("boolType",&c_Type::m_boolType);
	c_Type::m_voidType=(new c_VoidType)->m_new();
	DBG_GLOBAL("voidType",&c_Type::m_voidType);
	c_Type::m_objectType=(new c_IdentType)->m_new(String(L"monkey.object",13),Array<c_Type* >());
	DBG_GLOBAL("objectType",&c_Type::m_objectType);
	c_Type::m_throwableType=(new c_IdentType)->m_new(String(L"monkey.throwable",16),Array<c_Type* >());
	DBG_GLOBAL("throwableType",&c_Type::m_throwableType);
	c_Type::m_emptyArrayType=(new c_ArrayType)->m_new(c_Type::m_voidType);
	DBG_GLOBAL("emptyArrayType",&c_Type::m_emptyArrayType);
	c_Type::m_nullObjectType=(new c_IdentType)->m_new(String(),Array<c_Type* >());
	DBG_GLOBAL("nullObjectType",&c_Type::m_nullObjectType);
	c_Stack7::m_NIL=0;
	DBG_GLOBAL("NIL",&c_Stack7::m_NIL);
	bb_config__errStack=(new c_StringList)->m_new2();
	DBG_GLOBAL("_errStack",&bb_config__errStack);
	c_Stack2::m_NIL=0;
	DBG_GLOBAL("NIL",&c_Stack2::m_NIL);
	bb_config_ENV_HOST=String();
	DBG_GLOBAL("ENV_HOST",&bb_config_ENV_HOST);
	bb_config_ENV_CONFIG=String();
	DBG_GLOBAL("ENV_CONFIG",&bb_config_ENV_CONFIG);
	bb_config_ENV_TARGET=String();
	DBG_GLOBAL("ENV_TARGET",&bb_config_ENV_TARGET);
	bb_config_ENV_LANG=String();
	DBG_GLOBAL("ENV_LANG",&bb_config_ENV_LANG);
	c_Stack8::m_NIL=0;
	DBG_GLOBAL("NIL",&c_Stack8::m_NIL);
	c_Stack::m_NIL=String();
	DBG_GLOBAL("NIL",&c_Stack::m_NIL);
	bb_translator__trans=0;
	DBG_GLOBAL("_trans",&bb_translator__trans);
	bb_html5_Info_Width=0;
	DBG_GLOBAL("Info_Width",&bb_html5_Info_Width);
	bb_html5_Info_Height=0;
	DBG_GLOBAL("Info_Height",&bb_html5_Info_Height);
	c_ClassDecl::m_nullObjectClass=(new c_ClassDecl)->m_new(String(L"{NULL}",6),1280,Array<String >(),0,Array<c_IdentType* >());
	DBG_GLOBAL("nullObjectClass",&c_ClassDecl::m_nullObjectClass);
	bb_decl__loopnest=0;
	DBG_GLOBAL("_loopnest",&bb_decl__loopnest);
	c_Stack9::m_NIL=0;
	DBG_GLOBAL("NIL",&c_Stack9::m_NIL);
	c_Stack10::m_NIL=0;
	DBG_GLOBAL("NIL",&c_Stack10::m_NIL);
	return 0;
}
void gc_mark(){
	gc_mark_q(c_Type::m_stringType);
	gc_mark_q(bb_config__cfgScope);
	gc_mark_q(bb_config__cfgScopeStack);
	gc_mark_q(bb_decl__env);
	gc_mark_q(bb_decl__envStack);
	gc_mark_q(c_Toker::m__keywords);
	gc_mark_q(c_Toker::m__symbols);
	gc_mark_q(c_Type::m_intType);
	gc_mark_q(c_Type::m_floatType);
	gc_mark_q(c_Type::m_boolType);
	gc_mark_q(c_Type::m_voidType);
	gc_mark_q(c_Type::m_objectType);
	gc_mark_q(c_Type::m_throwableType);
	gc_mark_q(c_Type::m_emptyArrayType);
	gc_mark_q(c_Type::m_nullObjectType);
	gc_mark_q(c_Stack7::m_NIL);
	gc_mark_q(bb_config__errStack);
	gc_mark_q(c_Stack2::m_NIL);
	gc_mark_q(c_Stack8::m_NIL);
	gc_mark_q(bb_translator__trans);
	gc_mark_q(c_ClassDecl::m_nullObjectClass);
	gc_mark_q(c_Stack9::m_NIL);
	gc_mark_q(c_Stack10::m_NIL);
}
//${TRANSCODE_END}

String BBPathToFilePath( String path ){
	return path;
}

int main( int argc,const char **argv ){

	new BBGame();

	try{
	
		bb_std_main( argc,argv );
		
	}catch( ThrowableObject *ex ){
	
		bbPrint( "Monkey Runtime Error : Uncaught Monkey Exception" );
	
	}catch( const char *err ){
	
	}
}
